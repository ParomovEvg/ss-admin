{"version":3,"sources":["serviceWorker.ts","redux/slices/draw/drawListSlice.ts","redux/slices/draw/drawNow.ts","redux/slices/draw/drawView.ts","redux/slices/draw/nextDrawSlice.ts","redux/slices/draw/drawIsLoadingSlice.ts","redux/slices/markdownFieldSlice.ts","redux/slices/imgFieldsSlice.ts","redux/slices/textFieldsSlice.ts","redux/counter.ts","redux/slices/checkoutSlice.ts","redux/slices/screensSlice.ts","redux/slices/viewSlice.ts","redux/slices/authSlice.ts","redux/slices/draw/drawUpdateSlice.ts","redux/state.ts","sagas/counter/counter-actions.ts","sagas/counter/counter-workers.ts","sagas/counter/counter-listener.ts","apiWorker/dtoToEither.ts","apiWorker/api.tsx","apiWorker/servers/screenService.ts","apiWorker/servers/authService.ts","sagas/auth/authFlow.ts","sagas/screens/addScreen.ts","sagas/screens/getScreen.ts","apiWorker/servers/TextFieldsServer.ts","sagas/textFields/addTextValue.ts","sagas/textFields/deleteTextField.ts","sagas/textFields/addTextField.ts","apiWorker/servers/imgFieldService.ts","sagas/imgFields/deleteImgField.ts","sagas/imgFields/addImgField.ts","apiWorker/servers/checkoutsServer.ts","sagas/checkouts/getAllCheckout.ts","sagas/checkouts/deleteCheckout.ts","sagas/checkouts/addCheckout.ts","sagas/imgFields/addImg.ts","sagas/imgFields/addTheSameImg.ts","apiWorker/servers/markdownService.ts","sagas/markdownField/deleteMarkdown.ts","sagas/markdownField/addMarkdownValue.ts","sagas/markdownField/addMarkdownField.ts","sagas/screens/renameScreen.ts","sagas/screens/deleteScreen.ts","apiWorker/servers/drawSevice.ts","sagas/draw/addDraw.ts","sagas/draw/getAllDraw.ts","sagas/draw/getNowDraw.ts","sagas/draw/deleteDraw.ts","redux/slices/draw/drawSelectors.ts","sagas/draw/updateDraw.ts","sagas/draw/nextDraw.ts","sagas/mainSaga.ts","redux/createStore.ts","hooks/use-action.ts","components/Nav/NavItem.tsx","components/Nav/Nav.fipc.tsx","components/Nav/Nav.tsx","components/Loader/Loader.tsx","components/auth/Auth.fipc.ts","components/auth/Auth.tsx","components/Header/Header.tsx","components/AddScreenModal/AddScreenModal.fipc.ts","components/AddScreenModal/AddScreenModalComponent.tsx","components/deleteModal/deleteModal.tsx","components/ModalConf/ModalConf.tsx","components/deleteModal/deleteModalScreen.ts","components/Layout/Layout.tsx","components/AddTextFieldModal/AddTextFieldModal.fipc.ts","components/AddTextFieldModal/AddTextFieldModal.tsx","components/TextCard/TextCard.tsx","components/TextCard/textCard.fipc.ts","components/deleteModal/deleteModalImgField.ts","components/TextFieldList/TextFieldList.fipc.ts","components/TextFieldList/TextFieldListComponent.tsx","components/DropZone/DropZoneComponent.tsx","components/DropZone/DropZone.fipc.tsx","components/ImgCard/ImgCard.tsx","components/ImgCard/ImgCard.fipc.ts","components/AddImgFieldModal/AddImgFieldModal.fipc.ts","components/AddImgFieldModal/AddImgFieldModal.tsx","components/deleteModal/deleteModalTextField.ts","components/ImgFieldList/ImgFieldList.fipc.ts","components/ImgFieldList/ImgFieldListComponent.tsx","components/deleteModal/DeleteMarkdownModal.ts","components/MarkdownCard/MarkdownCardComponent.tsx","components/MarkdownCard/MarkdownCard.fipc.tsx","components/AddMarkdownModal/AddMarkdownModal.fipc.ts","components/AddMarkdownModal/AddMarkdownModal.tsx","components/MarkdownFieldList/MarkdownFieldList.fipc.ts","components/MarkdownFieldList/MarkdownFieldListComponent.tsx","components/RenameScreenModal/RenameScreenModal.fipc.ts","components/RenameScreenModal/RenameScreenModalComponent.tsx","components/Screen/Screen.tsx","components/Screen/Screen.fipc.tsx","components/navigation/Navigation.tsx","components/AddDrawModal/addDrawModalValidSchem.ts","components/AddDrawModal/AddDrawModal.tsx","components/AddDrawModal/AddDrawModal.fipc.ts","components/DrawCard/DrawCard.tsx","hooks/use-selector-factory.ts","components/DrawCard/DrawCard.fipc.ts","components/deleteModal/deleteModalDraw.ts","components/UpdateDrawModal/UpdateDrawModalValidSchem.ts","components/UpdateDrawModal/UpdateDrawModal.fipc.ts","components/UpdateDrawModal/UpdateDrawModal.tsx","components/DrawNowCard/DrawNowCard.fipc.ts","components/DrawNowCard/DrawNowCard.tsx","components/AddNextDrawModal/AddNextDrawModal.fipc.ts","components/AddNextDrawModal/AddNextDrawModal.tsx","components/DrawsList/DrawsList.fipc.ts","components/DrawsList/DrawsListComponent.tsx","components/CheckoutItem/CheckoutItem.fipc.ts","components/CheckoutItem/CheckoutItemComponent.tsx","components/deleteModal/deleteModalCheckout.ts","components/AddCheckoutModal/AddCheckoutModal.fipc.ts","components/AddCheckoutModal/AddCheckoutModal.tsx","components/Checkouts/CheckoutsList.fipc.ts","components/Checkouts/CheckoutsListComponent.tsx","components/navigation/Navigation.fipc.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","IdrawListActions","add","createAction","addSuccessful","delete","getAll","getNow","update","updateSuccessful","drawListAdapter","createEntityAdapter","selectId","draw","id","sortComparer","prevDraw","nextDraw","prevDate","Date","end","drawListSlise","createSlice","name","initialState","getInitialState","reducers","getAllSuccessful","setAll","isLoadingDraw","state","action","updateOne","payload","changes","isLoading","isNoLoadingDraw","drawListActions","actions","drawNowSlise","get","getSuccessful","drawNowActions","drawViewSlice","AddDrawdModal","updateDrawModal","nextDrawModal","DrawDeteleModal","isDrawDeteleModal","idDraw","openAddDrawModal","closeAddDrawModal","openUpdateModal","closeUpdateModal","openNextDrawModal","closeNextDrawModal","closeDeleteDrawModal","openDeleteDrawModal","extraReducers","type","drawViewActions","nextDrawActionsI","nextDraw_successful","nextDrawSlice","nextDrawActions","drawIsLoadingSlice","true","false","drawIsLoadingActions","markdowmAsyncActions","deleteMarkdown_async","deleteMarkdown_request","deleteMarkdown_error","addMarkdownValue_async","addMarkdownValue_request","addMarkdownValue_error","addMarkdownField_async","addMarkdownField_request","addMarkdownField_error","markdowmSlice","items","addMarkdownFieldName","addMarkdownFieldLabel","getAllMarkdowm","setAddValueText","forEach","markdownField","addValueText","text","addMarkdownValue","values","push","value","undefined","addMarkdownField","clearMarkdownValue","setAddMarkdownFieldName","setAddMarkdownFieldLabel","deleteMarkdownField","filter","markdownActions","imgFieldsActionsAsync","deleteImgfieldAsync","deleteImgfieldRequest","deleteImgfieldError","addImgFieldAsync","addImgFieldRequest","addImgFieldError","addImg_async","addImg_request","addImg_error","addTheSameImg_async","addTheSameImg_request","addTheSameImg_error","imgFieldsSlice","addImgFieldName","getImgFields","deleteImgField","imgField","changeImgField","map","clearAddImg","addImgValue","addImgValueType","addTheSameImgId","setAddImgFieldName","addImgField","item","addImg","img","length","shift","newUrl","imgFieldsActions","asyncTextFieldActions","deleteTextFieldAsync","deleteTextFieldRequest","deleteTextFieldError","addTextFieldValueAsync","addTextFieldValueRequest","addTextFieldAsync","addTextFieldRequest","addTextFieldError","TextFieldsSlice","addTextfieldName","addTextFieldValue","getTextFields","deleteTextField","field","addTextValue","fieldId","addTextField","setAddTextFieldName","setAddTextFieldValue","TextFieldsActions","counter","setCounter","multiply","reducer","prepare","counterActions","checkoutAsymcActions","getAllCheckoutAsync","getAllCheckout_request","getAllCheckout_error","checkoutDelete_async","checkoutDelete_request","checkoutDelete_error","checkoutAdd_async","checkoutAdd_request","checkoutAdd_error","checkoutSlice","addCheckoutAddress","addCheckoutFn","setAddCheckoutAddress","setAddCheckoutFn","getAllCheckout","deleteCheckout","checkout","addCheckout","checkoutActions","asyncScreenActions","addScreenRequest","getScreen","getScreensRequest","getScreensError","getScreenRequest","getScreenError","renameScreen_async","renameScreen_request","renameScreen_error","addScreen_async","addScreen_request","addScreen_error","deleteScreen_async","deleteScreen_request","deleteScreen_error","screensSlice","screensList","activeScreen","addScreenName","getAllScreens","screens","getActiveScreen","screen","setRenameScreenName","renameScreenName","setAddScreenName","renameScreen","screenId","screensActions","viewSlice","isMenuOpen","AddTextFieldModal","AddImgFieldModal","AddMarkdownFieldModal","AddCheckoutModal","RenameScreenModal","AddScreenModal","textFieldDeteleModal","isTextFieldDeteleModal","idTextField","imgFieldDeteleModal","isImgFieldDeteleModal","idImgField","markdownFieldDeteleModal","isMarkdownFieldDeteleModal","idMarkdownField","checkoutDeteleModal","isCheckoutDeteleModal","idCheckout","ScreenDeteleModal","isScreenDeteleModal","idScreen","openMenu","closeMenu","closeDeleteTextFieldModal","openDeleteTextFieldModal","closeDeleteImgFieldModal","openDeleteImgFieldModal","closeDeleteMarkdownFieldModal","openDeleteMarkdownFieldModal","openCheckoutDeleteModal","closeCheckoutDeleteModal","openScreenDeleteModal","closeScreenDeleteModal","openAddTextFieldModal","closeAddTextFieldModal","openAddMarkdownFieldModal","closeAddMarkdownFieldModal","openAddImgFieldModal","closeAddImgFieldModal","openAddCheckoutModal","closeAddCheckoutModal","openRenameScreenModal","closeRenameScreenModal","openAddScreenModal","closeAddScreenModal","viewActions","asyncAuthActions","loginRequest","authSlice","phone","password","token","isTokenValid","login","logout","tokenExpired","setPhone","setPassword","authActions","drawUpdateSlice","set","drawUpdateActions","drawsReducer","combineReducers","now","updateId","next","view","auth","TextFields","imgFields","markdowmField","checkouts","draws","PREF","increment","decrement","doIncrement","doDecrement","doMultiply","delay","ms","Promise","res","setTimeout","getState","call","console","log","put","counterListener","takeEvery","dtoToEither","dto","right","errors","Object","error","left","api","ky","extend","prefixUrl","timeout","hooks","beforeRequest","request","a","headers","afterResponse","options","response","status","post","json","then","r","access_token","store","dispatch","Error","screenServer","authService","loginDto","authFlow","take","select","code","NotificationManager","addScreen","addScreenWatcher","screenEither","extract","message","getScreenWatcher","mdFields","markdown","textFields","textfield","TextFieldServer","addValueWatcher","v","deleteTextFieldWatcher","fieldDeleteIdEither","fieldDeleteId","addTextFieldWatcher","TextFieldValue","textFieldEither","imgFieldsService","ImgField","file","body","imgId","deleteImgFieldWatcher","ImgFieldDeleteIdEither","imgFieldDeleteId","addImgFieldWatcher","imgFieldEither","CheckoutsServer","deleteCheckoutWatcher","deleteIdEither","deleteId","checkoutId","checkoutFn","checkoutAddress","fn","address","checkoutEither","addImgWatcher","find","url","fetch","blob","b","File","formFile","FormData","append","imgEither","addTheSameImg","addTheSameImgWatcher","markdownFieldService","markdownFieldId","deleteMarkdown","deleteMarkdownWatcher","markdownFieldIdEither","addMarkdownValueWatcher","valueEither","addMarkdownFieldWatcher","label","markdownFieldEither","renameScreenWatcher","deleteScreen","deleteScreenWatcher","drawServer","createDraw","ChangeDraw","addDraw","addDrawWather","startDate","parse","start","startDateISO","formatISO","endDate","endDateISO","qrLimit","sLimit","qrLimitPeriodMS","addDrawEither","resetForm","setErrors","param","endTaken","endError","toLocaleDateString","startTaken","startError","getAllDraw","getAllDrawWatcher","getNowDraw","getNowDrawWatcher","drawNowEither","drawNow","deleteDraw","deleteDrawWather","deleteDrawEither","drawsSelector","drawNowSelector","updateDrawIdSelector","drawsListSelector","createSelector","ids","reduce","acc","entities","drawNowEndSelector","allDrawIsLoadingSelector","drawIsLoadingFactory","updateDraw","updateDrawWather","updateDrawEither","nextDrawWather","description","nextDrawEither","mainSaga","all","sagaMiddleware","createSagaMiddleware","configureStore","middleware","getDefaultMiddleware","serializableCheck","run","useAction","actionCreator","useDispatch","NavItem","createFipc","path","icon","handleClose","useOnClick","ListItem","onClick","button","component","Link","to","key","ListItemIcon","ListItemText","primary","Nav$","className","useCloseHandler","useIsOpenMenu","mainLinks","screenLinks","isOpen","closeHandler","Drawer","anchor","open","onClose","List","Divider","Button","color","$carry","useSelector","handlerClose","Loader","CircularProgress","Auth","usePasswordInput","usePhoneInput","useSubmitHandler","useIsLoading","children","handlePhoneChange","handlePasswordChange","submitHandler","blockClassName","cn","Grid","container","justify","alignItems","Card","CardHeader","title","CardContent","onSubmit","autoComplete","spacing","direction","TextField","onChange","fullWidth","variant","required","size","Auth$","loginAction","e","preventDefault","handleSetPhone","useCallback","target","handleSetPassword","Header","useOpenMenu","openHandler","AppBar","position","Toolbar","IconButton","edge","aria-label","Typography","handleOpen","useAddScreenModalProps","AddScreenModalState","addScreenFormInputHandler","addScreenFormHandler","Modal","aria-labelledby","aria-describedby","sm","AddScreenModal$","DeleteModal$","useHandlerClick","useDeleteModalClose","useBtnRightText","useBtnLeftText","useTitle","useIsDeleteModal","useGetId","btnRightText","btnLeftText","closeModal","handlerClick","handler","classes","root","ModalConf$","DeleteModalScreen","Layout","isScreen","style","grey","Container","useAddTextFieldModalProps","addTextFieldName","addTextFieldModalState","addTextFieldFormInputHandler","addTextFieldFormHandler","AddTextFieldModal$","setAddFieldName","setAddFieldValue","TextCard$","useTextField","onSave","isSave","onReset","isReset","onBack","handleChange","multiline","InputProps","endAdornment","InputAdornment","LastPage","disabled","TextCard","addFieldValueAsync","useState","last","setText","lastValue","setLastValue","setIsLoading","setValueStatus","useEffect","useIsSave","isLastValueChange","useIsReset","prevIndex","indexOf","DeleteModalTextField","TextFieldList","useTextFields","TextFieldList$","DropZone$","useDropZone","onChangeDropZone","getInputProps","getRootProps","src","alt","DropZone","useDropzone","multiple","accept","onDrop","ImgCard$","useImgField","isBack","ImgCard","acceptedFiles","lastFile","URL","createObjectURL","images","setIsReset","useReset","setIsBack","newLastValue","useBack","setIsSave","addImgAsync","useSave","useAddImgFieldModalProps","addImgFieldFormHandler","addImgFieldFormInputHandler","addImgFieldModalState","AddImgFieldModal$","DeleteModalImgField","ImgFieldList","useImgFields","ImgFieldList$","DeleteMarkdownModal","MarkdownCard$","useMarkdown","parseText","addValueTextHandler","dangerouslySetInnerHTML","__html","MarkdownCard","isNotLastValue","isNotTextValue","isNotEmpty","split","row","isH3","isH2","isH1","isText","isLink","isImg","urlReGexp","test","imgName","imgSize","imgWidth","imgHeight","replace","link","join","useTranslate","AddMarkdownModal","useAddMarkdownFieldModalProps","AddMarkdownFieldModalState","addMarkdownFieldFormInputHandler","addMarkdownFieldFormHandler","AddMarkdownModal$","MarkdownFieldList","useMarkdownFields","markdownFields","MarkdownFieldList$","useRenameScreen","renameScreenModalState","renameScreenFormInputHandler","renameScreenFormHandler","RenameScreenModal$","nameScreen","Screen$","useScreen","Screen","ParamId","useParams","parseInt","useFields","Navigation$","useMainRouts","useAdditionalRouts","useScreenRouts","useIsAuth","useIsLoadingApp","mainRouts","additionalRouts","screensRouts","isAuth","$render","addDrawModalValidSchema","Yup","shape","AddDrawModal$","useAddDrawModalProps","useInitialValues","addDrawFormHandler","addDrawModalState","initialValues","validateOnChange","validateOnBlur","validationSchema","formik","handleSubmit","helperText","AddDrawModal","addDrawAsync","format","DrawCard$","useDraw","useOpenUpdateDrawModal","openUpdateDrawModal","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","stopPropagation","ExpansionPanelDetails","Math","floor","useSelectorFactory","selectorFactory","args","useMemo","DrawCard","openUpdateViewModal","DeleteModalDraw","updateDrawModalValidSchema","UpdateDrawModal","useUpdateModalProps","useCloseUpdateModal","useUpdateModalState","updateFormHandler","updateModalState","UpdateDrawModal$","updateDrawAsync","DrawNowCard","useNowDraw","useOpenDeleteDrawModal","useOpenNextDrawModal","DrawNowCard$","AddNextDrawModal","useAddNextDrawModalProps","useStartDraw","addNextDrawFormHandler","addNextDrawModalState","closeAddNextDrawModal","startDraw","AddNextDrawModal$","endNowDate","DrawsList","useDrawsList","useOpenAddDrawModal","useAllDraw","allDraw","drowNow","DrawsList$","CheckoutItem","useCheckoutItem","openDeleteModalCheckout","height","CheckoutItem$","DeleteModalCheckout","useAddCheckoutModalProps","addCheckoutModalState","addCheckoutFormInputHandler","addCheckoutFormHandler","AddCheckoutModal$","setAddFieldAddress","setAddFieldFn","addCheckoutAsync","Checkout","useGetCheckouts","Checkout$","getCheckouts","Assignment","Navigation","colors","dark","secondary","red","black","bg","white","textMain","textSecond","theme","createMuiTheme","palette","main","info","background","default","contrastThreshold","tonalOffset","ReactDOM","render","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.2e024d24.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {\r\n  createEntityAdapter,\r\n  createSlice,\r\n  PayloadAction,\r\n  createAction,\r\n} from '@reduxjs/toolkit';\r\nimport { FlatDrawDto } from '../../../apiWorker/typings';\r\nimport { FormikHelpers } from 'formik';\r\nimport { initialValuesType } from '../../../components/AddDrawModal/AddDrawModal';\r\nimport { initialUpdateValuesType } from '../../../components/UpdateDrawModal/UpdateDrawModal';\r\n\r\nexport interface drawType extends FlatDrawDto {\r\n  isLoading?: boolean;\r\n}\r\n\r\nconst IdrawListActions = {\r\n  add: createAction<{\r\n    values: initialValuesType;\r\n    action: FormikHelpers<initialValuesType>;\r\n  }>('draw/list/add' as const),\r\n  addSuccessful: createAction('draw/list/addSuccessful' as const),\r\n  delete: createAction<number>('draw/list/delete' as const),\r\n  getAll: createAction('draw/list/getAll' as const),\r\n  getNow: createAction('draw/list/getNow' as const),\r\n  update: createAction<{\r\n    values: initialUpdateValuesType;\r\n    action: FormikHelpers<initialUpdateValuesType>;\r\n  }>('draw/list/update' as const),\r\n  updateSuccessful: createAction('draw/list/update_successful' as const),\r\n};\r\n\r\nconst drawListAdapter = createEntityAdapter<drawType>({\r\n  selectId: (draw) => draw.id,\r\n  sortComparer: (prevDraw, nextDraw) => {\r\n    const prevDate = new Date(prevDraw.end);\r\n    const nextDate = new Date(nextDraw.end);\r\n    return +nextDate - +prevDate;\r\n  },\r\n});\r\n\r\nexport const drawListSlise = createSlice({\r\n  name: 'draw/list',\r\n  initialState: drawListAdapter.getInitialState(),\r\n  reducers: {\r\n    getAllSuccessful: drawListAdapter.setAll,\r\n    isLoadingDraw: (state, action: PayloadAction<number>) =>\r\n      drawListAdapter.updateOne(state, {\r\n        id: action.payload,\r\n        changes: {\r\n          isLoading: true,\r\n        },\r\n      }),\r\n    isNoLoadingDraw: (state, action: PayloadAction<number>) =>\r\n      drawListAdapter.updateOne(state, {\r\n        id: action.payload,\r\n        changes: {\r\n          isLoading: false,\r\n        },\r\n      }),\r\n  },\r\n});\r\n\r\nexport const drawListActions = {\r\n  ...drawListSlise.actions,\r\n  ...IdrawListActions,\r\n};\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { drawType } from './drawListSlice';\r\n\r\nconst drawNowInitState = null;\r\n\r\nexport const drawNowSlise = createSlice({\r\n  name: 'draw/now',\r\n  initialState: drawNowInitState as drawType | null,\r\n  reducers: {\r\n    get: () => {},\r\n    getSuccessful: (state, action: PayloadAction<drawType>) => {\r\n      return action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const drawNowActions = {\r\n  ...drawNowSlise.actions,\r\n};\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { drawListActions } from './drawListSlice';\r\nimport { drawNowActions } from './drawNow';\r\n\r\nexport interface drawView {\r\n  AddDrawdModal: boolean;\r\n  updateDrawModal: boolean;\r\n  nextDrawModal: boolean;\r\n  DrawDeteleModal: {\r\n    isDrawDeteleModal: boolean;\r\n    idDraw: number;\r\n  };\r\n}\r\n\r\nconst initialState: drawView = {\r\n  AddDrawdModal: false,\r\n  updateDrawModal: false,\r\n  nextDrawModal: false,\r\n  DrawDeteleModal: {\r\n    isDrawDeteleModal: false,\r\n    idDraw: 0,\r\n  },\r\n};\r\n\r\nexport const drawViewSlice = createSlice({\r\n  name: 'draw/view',\r\n  initialState,\r\n  reducers: {\r\n    openAddDrawModal: (state) => {\r\n      state.AddDrawdModal = true;\r\n    },\r\n    closeAddDrawModal: (state) => {\r\n      state.AddDrawdModal = false;\r\n    },\r\n    openUpdateModal: (state) => {\r\n      state.updateDrawModal = true;\r\n    },\r\n    closeUpdateModal: (state) => {\r\n      state.updateDrawModal = false;\r\n    },\r\n    openNextDrawModal: (state) => {\r\n      state.nextDrawModal = true;\r\n    },\r\n    closeNextDrawModal: (state) => {\r\n      state.nextDrawModal = false;\r\n    },\r\n    closeDeleteDrawModal: (state) => {\r\n      state.DrawDeteleModal = {\r\n        idDraw: 0,\r\n        isDrawDeteleModal: false,\r\n      };\r\n    },\r\n    openDeleteDrawModal: (state, action) => {\r\n      state.DrawDeteleModal = {\r\n        idDraw: action.payload,\r\n        isDrawDeteleModal: true,\r\n      };\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [drawListActions.addSuccessful.type]: (state) => {\r\n      state.AddDrawdModal = false;\r\n    },\r\n    [drawListActions.updateSuccessful.type]: (state) => {\r\n      state.updateDrawModal = false;\r\n    },\r\n    [drawNowActions.getSuccessful.type]: (state) => {\r\n      state.nextDrawModal = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport const drawViewActions = { ...drawViewSlice.actions };\r\n","import { createSlice, createAction } from '@reduxjs/toolkit';\r\nimport { initialNextValuesType } from '../../../components/AddNextDrawModal/AddNextDrawModal';\r\nimport { FormikHelpers } from 'formik';\r\n\r\nconst nextDrawActionsI = {\r\n  nextDraw: createAction<{\r\n    values: initialNextValuesType;\r\n    action: FormikHelpers<initialNextValuesType>;\r\n  }>('draw/next/add' as const),\r\n  nextDraw_successful: createAction('draw/next/add_successful' as const),\r\n};\r\n\r\nexport const nextDrawSlice = createSlice({\r\n  name: 'draw/next',\r\n  initialState: 0,\r\n  reducers: {},\r\n});\r\n\r\nexport const nextDrawActions = {\r\n  ...nextDrawSlice.actions,\r\n  ...nextDrawActionsI,\r\n};\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nfunction drawLoading(state: boolean) {\r\n  if (state !== true) return true;\r\n}\r\nfunction drawNoLoading(state: boolean) {\r\n  if (state !== false) return false;\r\n}\r\n\r\nexport const drawIsLoadingSlice = createSlice({\r\n  name: 'draw/isLoading',\r\n  initialState: false,\r\n  reducers: {\r\n    true: drawLoading,\r\n    false: drawNoLoading,\r\n  },\r\n});\r\n\r\nexport const drawIsLoadingActions = {\r\n  ...drawIsLoadingSlice.actions,\r\n};\r\n","import { MdDto } from './../../apiWorker/typings/index';\r\nimport { createSlice, PayloadAction, createAction } from '@reduxjs/toolkit';\r\nimport { MdFieldContentDto } from '../../apiWorker/typings';\r\n\r\nexport interface MarkdowmType extends MdFieldContentDto {\r\n  isLoading: boolean;\r\n  addValueText?: string | undefined;\r\n}\r\n\r\nexport const markdowmAsyncActions = {\r\n  deleteMarkdown_async: createAction<number>(\r\n    'markdowmField/delete_async' as const\r\n  ),\r\n  deleteMarkdown_request: createAction<number>(\r\n    'markdowmField/delete_request' as const\r\n  ),\r\n  deleteMarkdown_error: createAction<number>(\r\n    'markdowmField/delete_error' as const\r\n  ),\r\n  addMarkdownValue_async: createAction<number>(\r\n    'markdowmField/addValue_async' as const\r\n  ),\r\n  addMarkdownValue_request: createAction<number>(\r\n    'markdowmField/addValue_request' as const\r\n  ),\r\n  addMarkdownValue_error: createAction<number>(\r\n    'markdowmField/addValue_error' as const\r\n  ),\r\n  addMarkdownField_async: createAction<number>('markdowmField/addField_async'),\r\n  addMarkdownField_request: createAction<number>(\r\n    'markdowmField/addField_request'\r\n  ),\r\n  addMarkdownField_error: createAction<number>('markdowmField/addField_error'),\r\n};\r\n\r\ninterface InitialStateType {\r\n  items: MarkdowmType[];\r\n  addMarkdownFieldName: string;\r\n  addMarkdownFieldLabel: string;\r\n}\r\n\r\nconst initialState: InitialStateType = {\r\n  items: [],\r\n  addMarkdownFieldName: '',\r\n  addMarkdownFieldLabel: '',\r\n};\r\n\r\nexport const markdowmSlice = createSlice({\r\n  name: 'markdowmField',\r\n  initialState,\r\n  reducers: {\r\n    getAllMarkdowm: (state, action: PayloadAction<MarkdowmType[]>) => {\r\n      state.items = action.payload;\r\n    },\r\n    setAddValueText: (\r\n      state,\r\n      action: PayloadAction<{ id: number; text: string }>\r\n    ) => {\r\n      state.items.forEach((markdownField) => {\r\n        if (markdownField.id === action.payload.id) {\r\n          markdownField.addValueText = action.payload.text;\r\n        }\r\n      });\r\n    },\r\n    addMarkdownValue: (\r\n      state,\r\n      action: PayloadAction<{ id: number; value: MdDto }>\r\n    ) => {\r\n      state.items.forEach((markdownField) => {\r\n        if (markdownField.id === action.payload.id) {\r\n          markdownField.values.push(action.payload.value);\r\n          markdownField.isLoading = false;\r\n          markdownField.addValueText = undefined;\r\n        }\r\n      });\r\n    },\r\n    addMarkdownField: (\r\n      state,\r\n      action: PayloadAction<{ markdownField: MarkdowmType; screenId: number }>\r\n    ) => {\r\n      state.items.push(action.payload.markdownField);\r\n      state.addMarkdownFieldName = '';\r\n      state.addMarkdownFieldLabel = '';\r\n    },\r\n    clearMarkdownValue: (state, action: PayloadAction<number>) => {\r\n      state.items.forEach((markdownField) => {\r\n        if (markdownField.id === action.payload) {\r\n          markdownField.addValueText = undefined;\r\n        }\r\n      });\r\n    },\r\n    setAddMarkdownFieldName: (state, action: PayloadAction<string>) => {\r\n      state.addMarkdownFieldName = action.payload;\r\n    },\r\n    setAddMarkdownFieldLabel: (state, action: PayloadAction<string>) => {\r\n      state.addMarkdownFieldLabel = action.payload;\r\n    },\r\n    deleteMarkdownField: (state, action: PayloadAction<number>) => {\r\n      state.items = state.items.filter(\r\n        (markdownField) => markdownField.id !== action.payload\r\n      );\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [markdowmAsyncActions.deleteMarkdown_request.type]: (state, action) => {\r\n      state.items.forEach((markdownField) => {\r\n        if (markdownField.id === action.payload) {\r\n          markdownField.isLoading = true;\r\n        }\r\n      });\r\n    },\r\n    [markdowmAsyncActions.addMarkdownValue_request.type]: (state, action) => {\r\n      state.items.forEach((markdownField) => {\r\n        if (markdownField.id === action.payload) {\r\n          markdownField.isLoading = true;\r\n        }\r\n      });\r\n    },\r\n    [markdowmAsyncActions.addMarkdownValue_error.type]: (state, action) => {\r\n      state.items.forEach((markdownField) => {\r\n        if (markdownField.id === action.payload) {\r\n          markdownField.isLoading = false;\r\n        }\r\n      });\r\n    },\r\n  },\r\n});\r\n\r\nexport const markdownActions = {\r\n  ...markdowmSlice.actions,\r\n};\r\n","import { ImgDto } from './../../apiWorker/typings/index';\r\nimport { ImgFieldDto } from '../../apiWorker/typings/index';\r\nimport { createSlice, PayloadAction, createAction } from '@reduxjs/toolkit';\r\n\r\ninterface imgField extends ImgFieldDto {\r\n  isLoading: boolean;\r\n  addImgValue?: string | undefined;\r\n  addImgValueType?: string | undefined;\r\n  addTheSameImgId?: number | undefined;\r\n}\r\n\r\ntype InitialStateType = {\r\n  items: imgField[];\r\n  addImgFieldName: string;\r\n};\r\n\r\nconst initialState: InitialStateType = {\r\n  items: [],\r\n  addImgFieldName: '',\r\n};\r\n\r\nexport const imgFieldsActionsAsync = {\r\n  deleteImgfieldAsync: createAction<number>(\r\n    'imgFields/deleteImgfiled' as const\r\n  ),\r\n  deleteImgfieldRequest: createAction<number>(\r\n    'imgFields/deleteImgfiled_request' as const\r\n  ),\r\n  deleteImgfieldError: createAction<number>(\r\n    'imgFields/deleteImgfiled_error' as const\r\n  ),\r\n  addImgFieldAsync: createAction<number>('imgFields/addImgfiled' as const),\r\n  addImgFieldRequest: createAction<number>(\r\n    'imgFields/addImgfiled_request' as const\r\n  ),\r\n  addImgFieldError: createAction<number>(\r\n    'imgFields/addImgfiled_error' as const\r\n  ),\r\n  addImg_async: createAction<number>('imgFields/addImg_async' as const),\r\n  addImg_request: createAction<number>('imgFields/addImg_request' as const),\r\n  addImg_error: createAction<number>('imgFields/addImg_error' as const),\r\n  addTheSameImg_async: createAction<number>(\r\n    'imgFields/addTheSameImg_async' as const\r\n  ),\r\n  addTheSameImg_request: createAction<number>(\r\n    'imgFields/addTheSameImg_request' as const\r\n  ),\r\n  addTheSameImg_error: createAction<number>(\r\n    'imgFields/addTheSameImg_error' as const\r\n  ),\r\n};\r\n\r\nexport const imgFieldsSlice = createSlice({\r\n  name: 'imgFields',\r\n  initialState,\r\n  reducers: {\r\n    getImgFields: (state, action: PayloadAction<imgField[]>) => {\r\n      state.items = action.payload;\r\n    },\r\n    deleteImgField: (state, action: PayloadAction<number>) => {\r\n      state.items = state.items.filter(\r\n        (imgField) => imgField.id !== action.payload\r\n      );\r\n    },\r\n    changeImgField: (\r\n      state,\r\n      action: PayloadAction<{ id: number; imgField: imgField }>\r\n    ) => {\r\n      state.items = state.items.map((imgField) => {\r\n        if (imgField.id === action.payload.id) {\r\n          imgField = action.payload.imgField;\r\n        }\r\n        return imgField;\r\n      });\r\n    },\r\n    clearAddImg: (state, action: PayloadAction<number>) => {\r\n      state.items.forEach((imgField) => {\r\n        if (imgField.id === action.payload) {\r\n          imgField.addImgValue = undefined;\r\n          imgField.addImgValueType = undefined;\r\n          imgField.addTheSameImgId = undefined;\r\n        }\r\n      });\r\n    },\r\n    setAddImgFieldName: (state, action: PayloadAction<string>) => {\r\n      state.addImgFieldName = action.payload;\r\n    },\r\n    addImgField: (\r\n      state,\r\n      action: PayloadAction<{ item: imgField; id: number }>\r\n    ) => {\r\n      state.items.push(action.payload.item);\r\n      state.addImgFieldName = '';\r\n    },\r\n    addImg: (state, action: PayloadAction<{ img: ImgDto; id: number }>) => {\r\n      state.items.forEach((imgField) => {\r\n        if (imgField.id === action.payload.id) {\r\n          imgField.img.push(action.payload.img);\r\n          imgField.isLoading = false;\r\n          imgField.addImgValue = undefined;\r\n          imgField.addImgValueType = undefined;\r\n          imgField.addTheSameImgId = undefined;\r\n          if (imgField.img.length > 3) imgField.img.shift();\r\n        }\r\n      });\r\n    },\r\n    addImgValue: (\r\n      state,\r\n      action: PayloadAction<{\r\n        newUrl?: string;\r\n        id: number;\r\n        addImgValueType?: string;\r\n        addTheSameImgId?: number;\r\n      }>\r\n    ) => {\r\n      state.items = state.items.map((imgField) => {\r\n        if (imgField.id === action.payload.id) {\r\n          imgField.addImgValue = action.payload.newUrl;\r\n          imgField.addImgValueType = action.payload.addImgValueType;\r\n          imgField.addTheSameImgId = action.payload.addTheSameImgId;\r\n        }\r\n        return imgField;\r\n      });\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [imgFieldsActionsAsync.deleteImgfieldRequest.type]: (\r\n      state,\r\n      action: PayloadAction<number>\r\n    ) => {\r\n      state.items.forEach((imgField) => {\r\n        if (imgField.id === action.payload) imgField.isLoading = true;\r\n      });\r\n    },\r\n    [imgFieldsActionsAsync.deleteImgfieldError.type]: (\r\n      state,\r\n      action: PayloadAction<number>\r\n    ) => {\r\n      state.items.forEach((imgField) => {\r\n        if (imgField.id === action.payload) imgField.isLoading = false;\r\n      });\r\n    },\r\n    [imgFieldsActionsAsync.addImg_request.type]: (\r\n      state,\r\n      action: PayloadAction<number>\r\n    ) => {\r\n      state.items.forEach((imgField) => {\r\n        if (imgField.id === action.payload) imgField.isLoading = true;\r\n      });\r\n    },\r\n    [imgFieldsActionsAsync.addImg_error.type]: (\r\n      state,\r\n      action: PayloadAction<number>\r\n    ) => {\r\n      state.items.forEach((imgField) => {\r\n        if (imgField.id === action.payload) imgField.isLoading = false;\r\n      });\r\n    },\r\n    [imgFieldsActionsAsync.addTheSameImg_request.type]: (\r\n      state,\r\n      action: PayloadAction<number>\r\n    ) => {\r\n      state.items.forEach((imgField) => {\r\n        if (imgField.id === action.payload) imgField.isLoading = true;\r\n      });\r\n    },\r\n    [imgFieldsActionsAsync.addTheSameImg_error.type]: (\r\n      state,\r\n      action: PayloadAction<number>\r\n    ) => {\r\n      state.items.forEach((imgField) => {\r\n        if (imgField.id === action.payload) imgField.isLoading = false;\r\n      });\r\n    },\r\n  },\r\n});\r\n\r\nexport const imgFieldsActions = {\r\n  ...imgFieldsSlice.actions,\r\n};\r\n","import { TextDto } from '../../apiWorker/typings';\r\nimport { createSlice, PayloadAction, createAction } from '@reduxjs/toolkit';\r\n\r\nexport type TextFieldType = {\r\n  id: number;\r\n  name: string;\r\n  values: TextDto[];\r\n  isLoading: boolean;\r\n};\r\nexport type SetTextValueType = {\r\n  text: string;\r\n  fieldId: number;\r\n};\r\n\r\nexport interface ValueType {\r\n  value: TextDto;\r\n  fieldId: number;\r\n}\r\nexport type DeleteFieldType = {\r\n  id?: number;\r\n};\r\nexport interface AddTextFieldFormValuesType {\r\n  name: string;\r\n  value: string;\r\n}\r\n\r\nexport type InitialStateType = {\r\n  items: TextFieldType[];\r\n  addTextfieldName: string;\r\n  addTextFieldValue: string;\r\n};\r\n\r\nexport const asyncTextFieldActions = {\r\n  deleteTextFieldAsync: createAction<number>(\r\n    'TextFields/deleteFieldsAsync' as const\r\n  ),\r\n  deleteTextFieldRequest: createAction<number>(\r\n    'TextFields/deleteFields_request' as const\r\n  ),\r\n  deleteTextFieldError: createAction<number>(\r\n    'TextFields/deleteFieldsError' as const\r\n  ),\r\n  addTextFieldValueAsync: createAction<SetTextValueType>(\r\n    'TextFields/setFieldValueAsync' as const\r\n  ),\r\n  addTextFieldValueRequest: createAction<number>(\r\n    'TextFields/setFieldValue_request' as const\r\n  ),\r\n  addTextFieldAsync: createAction<number>('TextFields/addFieldAsync' as const),\r\n  addTextFieldRequest: createAction<number>(\r\n    'TextFields/addField_request' as const\r\n  ),\r\n  addTextFieldError: createAction<number>('TextFields/addField_error' as const),\r\n};\r\n\r\nconst initialState: InitialStateType = {\r\n  items: [],\r\n  addTextfieldName: '',\r\n  addTextFieldValue: '',\r\n};\r\nexport const TextFieldsSlice = createSlice({\r\n  name: 'TextFields',\r\n  initialState,\r\n  reducers: {\r\n    getTextFields: (state, action: PayloadAction<TextFieldType[]>) => {\r\n      state.items = action.payload;\r\n    },\r\n    deleteTextField: (state, action: PayloadAction<number>) => {\r\n      state.items = state.items.filter((field) => {\r\n        return field.id != action.payload;\r\n      });\r\n    },\r\n    addTextValue: (state, action: PayloadAction<ValueType>) => {\r\n      state.items.forEach((field) => {\r\n        if (field.id === action.payload.fieldId) {\r\n          field.values.push(action.payload.value);\r\n          field.isLoading = false;\r\n        }\r\n      });\r\n    },\r\n    addTextField: (\r\n      state,\r\n      action: PayloadAction<{ item: TextFieldType; id: number }>\r\n    ) => {\r\n      state.items.push(action.payload.item);\r\n      state.addTextfieldName = '';\r\n      state.addTextFieldValue = '';\r\n    },\r\n    setAddTextFieldName: (state, action: PayloadAction<string>) => {\r\n      state.addTextfieldName = action.payload;\r\n    },\r\n    setAddTextFieldValue: (state, action: PayloadAction<string>) => {\r\n      state.addTextFieldValue = action.payload;\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [asyncTextFieldActions.addTextFieldValueRequest.type]: (state, action) => {\r\n      state.items.forEach((field) => {\r\n        if (field.id === action.payload) field.isLoading = true;\r\n      });\r\n    },\r\n    [asyncTextFieldActions.deleteTextFieldRequest.type]: (state, action) => {\r\n      state.items.forEach((field) => {\r\n        if (field.id === action.payload) field.isLoading = true;\r\n      });\r\n    },\r\n    [asyncTextFieldActions.deleteTextFieldError.type]: (state, action) => {\r\n      state.items.forEach((field) => {\r\n        if (field.id === action.payload) field.isLoading = false;\r\n      });\r\n    },\r\n  },\r\n});\r\n\r\nexport const TextFieldsActions = {\r\n  ...TextFieldsSlice.actions,\r\n};\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nconst counter = createSlice({\r\n    name: 'counter',\r\n    initialState: 0,\r\n    reducers: {\r\n        setCounter: (state, action: PayloadAction<number>) => action.payload,\r\n        multiply: {\r\n            reducer: (state, action: PayloadAction<number>) =>\r\n                state * action.payload,\r\n            prepare: (value: number) => ({ payload: value || 2 }), // fallback if the payload is a falsy value\r\n        },\r\n    },\r\n});\r\nconst counterActions = counter.actions;\r\nexport { counter, counterActions };\r\n\r\n","import { createSlice, PayloadAction, createAction } from '@reduxjs/toolkit';\r\nimport { FlatCheckoutDto } from '../../apiWorker/typings';\r\n\r\nexport interface CheckoutType extends FlatCheckoutDto {\r\n  isLoading: boolean;\r\n}\r\n\r\nexport const checkoutAsymcActions = {\r\n  getAllCheckoutAsync: createAction('checkout/getAllCheckoutAsync' as const),\r\n  getAllCheckout_request: createAction(\r\n    'checkout/getAllCheckout_request' as const\r\n  ),\r\n  getAllCheckout_error: createAction('checkout/getAllCheckout_error' as const),\r\n  checkoutDelete_async: createAction<number>('checkout/delete_async' as const),\r\n  checkoutDelete_request: createAction<number>(\r\n    'checkout/delete_request' as const\r\n  ),\r\n  checkoutDelete_error: createAction<number>('checkout/delete_error' as const),\r\n  checkoutAdd_async: createAction('checkout/add_async' as const),\r\n  checkoutAdd_request: createAction('checkout/add_request' as const),\r\n  checkoutAdd_error: createAction('checkout/add_error' as const),\r\n};\r\n\r\ninterface initialStateType {\r\n  items: CheckoutType[];\r\n  isLoading: boolean;\r\n  addCheckoutFn: string;\r\n  addCheckoutAddress: string;\r\n}\r\n\r\nconst initialState: initialStateType = {\r\n  items: [],\r\n  isLoading: false,\r\n  addCheckoutAddress: '',\r\n  addCheckoutFn: '',\r\n};\r\n\r\nexport const checkoutSlice = createSlice({\r\n  name: 'checkout',\r\n  initialState,\r\n  reducers: {\r\n    setAddCheckoutAddress: (state, action: PayloadAction<string>) => {\r\n      state.addCheckoutAddress = action.payload;\r\n    },\r\n    setAddCheckoutFn: (state, action: PayloadAction<string>) => {\r\n      state.addCheckoutFn = action.payload;\r\n    },\r\n    getAllCheckout: (state, action: PayloadAction<CheckoutType[]>) => {\r\n      state.items = action.payload;\r\n      state.isLoading = false;\r\n    },\r\n    deleteCheckout: (state, action: PayloadAction<number>) => {\r\n      state.items = state.items.filter((checkout) => {\r\n        return checkout.id != action.payload;\r\n      });\r\n    },\r\n    addCheckout: (state, action: PayloadAction<CheckoutType>) => {\r\n      state.items = [...state.items, action.payload];\r\n      state.isLoading = false;\r\n      state.addCheckoutFn = '';\r\n      state.addCheckoutAddress = '';\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [checkoutAsymcActions.getAllCheckout_request.type]: (state) => {\r\n      state.isLoading = true;\r\n    },\r\n    [checkoutAsymcActions.getAllCheckout_error.type]: (state) => {\r\n      state.isLoading = false;\r\n    },\r\n    [checkoutAsymcActions.checkoutDelete_request.type]: (\r\n      state,\r\n      action: PayloadAction<number>\r\n    ) => {\r\n      state.items.forEach((checkout) => {\r\n        if (checkout.id === action.payload) checkout.isLoading = true;\r\n      });\r\n    },\r\n    [checkoutAsymcActions.checkoutDelete_error.type]: (\r\n      state,\r\n      action: PayloadAction<number>\r\n    ) => {\r\n      state.items.forEach((checkout) => {\r\n        if (checkout.id === action.payload) checkout.isLoading = false;\r\n      });\r\n    },\r\n    [checkoutAsymcActions.checkoutAdd_request.type]: (state) => {\r\n      state.isLoading = true;\r\n    },\r\n    [checkoutAsymcActions.checkoutAdd_error.type]: (state) => {\r\n      state.isLoading = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport const checkoutActions = {\r\n  ...checkoutSlice.actions,\r\n};\r\n","import { imgFieldsActionsAsync, imgFieldsActions } from './imgFieldsSlice';\r\nimport { createSlice, PayloadAction, createAction } from '@reduxjs/toolkit';\r\nimport { FlatScreenDto } from '../../apiWorker/typings';\r\nimport { asyncTextFieldActions, TextFieldsActions } from './textFieldsSlice';\r\nimport { markdownActions, markdowmAsyncActions } from './markdownFieldSlice';\r\n\r\nexport interface ScreenType extends FlatScreenDto {\r\n  isLoading: boolean;\r\n  renameScreenName?: string;\r\n}\r\n\r\nexport type ScreensType = {\r\n  screensList: ScreenType[];\r\n  activeScreen: number;\r\n  isLoading: boolean;\r\n  addScreenName: string;\r\n};\r\n\r\nconst initialState: ScreensType = {\r\n  screensList: [],\r\n  activeScreen: 0,\r\n  isLoading: false,\r\n  addScreenName: '',\r\n};\r\n\r\nexport const asyncScreenActions = {\r\n  addScreenRequest: createAction('screens/addScreen_request'),\r\n  getScreen: createAction<number>('screens/getScreen' as const),\r\n  getScreensRequest: createAction('screens/getAllScreens_request' as const),\r\n  getScreensError: createAction('screens/getScreens_error' as const),\r\n  getScreenRequest: createAction<number>('screens/getScreen_request' as const),\r\n  getScreenError: createAction<number>('screens/getScreen_error' as const),\r\n  renameScreen_async: createAction<number>(\r\n    'screens/renameScreen_async' as const\r\n  ),\r\n  renameScreen_request: createAction<number>(\r\n    'screens/renameScreen_request' as const\r\n  ),\r\n  renameScreen_error: createAction<number>(\r\n    'screens/renameScreen_error' as const\r\n  ),\r\n  addScreen_async: createAction('screens/addScreen_async' as const),\r\n  addScreen_request: createAction('screens/addScreen_request' as const),\r\n  addScreen_error: createAction('screens/addScreen_error' as const),\r\n  deleteScreen_async: createAction<number>(\r\n    'screens/deleteScreen_async' as const\r\n  ),\r\n  deleteScreen_request: createAction<number>(\r\n    'screens/deleteScreen_request' as const\r\n  ),\r\n  deleteScreen_error: createAction<number>(\r\n    'screens/deleteScreen_error' as const\r\n  ),\r\n};\r\n\r\nexport const screensSlice = createSlice({\r\n  name: 'screens',\r\n  initialState,\r\n  reducers: {\r\n    getAllScreens: (\r\n      state,\r\n      action: PayloadAction<{ screens: ScreenType[] }>\r\n    ) => {\r\n      state.screensList = action.payload.screens;\r\n      state.isLoading = false;\r\n      state.addScreenName = '';\r\n    },\r\n    getActiveScreen: (state, action: PayloadAction<number>) => {\r\n      state.screensList.forEach((screen) => {\r\n        if (screen.id === action.payload) screen.isLoading = false;\r\n      });\r\n      state.activeScreen = action.payload;\r\n    },\r\n    setRenameScreenName: (\r\n      state,\r\n      action: PayloadAction<{ id: number; name: string }>\r\n    ) => {\r\n      state.screensList.forEach((screen) => {\r\n        if (screen.id === action.payload.id) {\r\n          screen.renameScreenName = action.payload.name;\r\n        }\r\n      });\r\n    },\r\n    setAddScreenName: (state, action: PayloadAction<string>) => {\r\n      state.addScreenName = action.payload;\r\n    },\r\n    renameScreen: (state, action: PayloadAction<ScreenType>) => {\r\n      state.screensList = state.screensList.map((screen) => {\r\n        if (screen.id === action.payload.id) return action.payload;\r\n        return screen;\r\n      });\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [asyncScreenActions.getScreenRequest.type]: (\r\n      state,\r\n      action: ReturnType<typeof asyncScreenActions.getScreenRequest>\r\n    ) => {\r\n      state.screensList.forEach((screen) => {\r\n        if (screen.id === action.payload) screen.isLoading = true;\r\n      });\r\n    },\r\n    [asyncTextFieldActions.addTextFieldRequest.type]: (state, action) => {\r\n      state.screensList.forEach((screen) => {\r\n        if (screen.id === action.payload) screen.isLoading = true;\r\n      });\r\n    },\r\n    [TextFieldsActions.addTextField.type]: (state, action) => {\r\n      state.screensList.forEach((screen) => {\r\n        if (screen.id === action.payload.id) screen.isLoading = false;\r\n      });\r\n    },\r\n    [asyncTextFieldActions.addTextFieldError.type]: (state, action) => {\r\n      state.screensList.forEach((screen) => {\r\n        if (screen.id === action.payload) screen.isLoading = false;\r\n      });\r\n    },\r\n    [asyncScreenActions.getScreensRequest.type]: (state) => {\r\n      state.isLoading = true;\r\n    },\r\n    [asyncScreenActions.getScreenError.type]: (state, action) => {\r\n      state.screensList.forEach((screen) => {\r\n        if (screen.id === action.payload) screen.isLoading = false;\r\n      });\r\n    },\r\n    [asyncScreenActions.getScreensError.type]: (state) => {\r\n      state.isLoading = false;\r\n    },\r\n    [imgFieldsActionsAsync.addImgFieldRequest.type]: (state, action) => {\r\n      state.screensList.forEach((screen) => {\r\n        if (screen.id === action.payload) screen.isLoading = true;\r\n      });\r\n    },\r\n    [imgFieldsActions.addImgField.type]: (state, action) => {\r\n      state.screensList.forEach((screen) => {\r\n        if (screen.id === action.payload.id) screen.isLoading = false;\r\n      });\r\n    },\r\n    [markdowmAsyncActions.addMarkdownField_request.type]: (state, action) => {\r\n      state.screensList.forEach((screen) => {\r\n        if (screen.id === action.payload) screen.isLoading = true;\r\n      });\r\n    },\r\n    [markdowmAsyncActions.addMarkdownField_error.type]: (state, action) => {\r\n      state.screensList.forEach((screen) => {\r\n        if (screen.id === action.payload) screen.isLoading = false;\r\n      });\r\n    },\r\n    [markdownActions.addMarkdownField.type]: (state, action) => {\r\n      state.screensList.forEach((screen) => {\r\n        if (screen.id === action.payload.screenId) screen.isLoading = false;\r\n      });\r\n    },\r\n    [asyncScreenActions.renameScreen_request.type]: (state, action) => {\r\n      state.screensList.forEach((screen) => {\r\n        if (screen.id === action.payload) screen.isLoading = true;\r\n      });\r\n    },\r\n\r\n    [asyncScreenActions.renameScreen_error.type]: (state, action) => {\r\n      state.screensList.forEach((screen) => {\r\n        if (screen.id === action.payload) screen.isLoading = false;\r\n      });\r\n    },\r\n    [asyncScreenActions.addScreen_request.type]: (state) => {\r\n      state.isLoading = true;\r\n    },\r\n    [asyncScreenActions.addScreen_error.type]: (state) => {\r\n      state.isLoading = false;\r\n    },\r\n    [asyncScreenActions.deleteScreen_request.type]: (state, action) => {\r\n      state.screensList.forEach((screen) => {\r\n        if (screen.id === action.payload) screen.isLoading = true;\r\n      });\r\n    },\r\n    [asyncScreenActions.deleteScreen_error.type]: (state, action) => {\r\n      state.screensList.forEach((screen) => {\r\n        if (screen.id === action.payload) screen.isLoading = false;\r\n      });\r\n    },\r\n  },\r\n});\r\n\r\nexport const screensActions = {\r\n  ...screensSlice.actions,\r\n};\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { TextFieldsActions } from './textFieldsSlice';\r\nimport { imgFieldsActions } from './imgFieldsSlice';\r\nimport { checkoutActions } from './checkoutSlice';\r\nimport { markdownActions } from './markdownFieldSlice';\r\nimport { screensActions } from './screensSlice';\r\n\r\nexport interface View {\r\n  isMenuOpen: boolean;\r\n  AddTextFieldModal: boolean;\r\n  AddImgFieldModal: boolean;\r\n  AddMarkdownFieldModal: boolean;\r\n  AddCheckoutModal: boolean;\r\n  RenameScreenModal: boolean;\r\n  AddScreenModal: boolean;\r\n  textFieldDeteleModal: {\r\n    isTextFieldDeteleModal: boolean;\r\n    idTextField: number;\r\n  };\r\n  imgFieldDeteleModal: {\r\n    isImgFieldDeteleModal: boolean;\r\n    idImgField: number;\r\n  };\r\n  markdownFieldDeteleModal: {\r\n    isMarkdownFieldDeteleModal: boolean;\r\n    idMarkdownField: number;\r\n  };\r\n  checkoutDeteleModal: {\r\n    isCheckoutDeteleModal: boolean;\r\n    idCheckout: number;\r\n  };\r\n  ScreenDeteleModal: {\r\n    isScreenDeteleModal: boolean;\r\n    idScreen: number;\r\n  };\r\n}\r\n\r\nconst initialState: View = {\r\n  isMenuOpen: false,\r\n  AddTextFieldModal: false,\r\n  AddImgFieldModal: false,\r\n  AddMarkdownFieldModal: false,\r\n  AddCheckoutModal: false,\r\n  RenameScreenModal: false,\r\n  AddScreenModal: false,\r\n  textFieldDeteleModal: { isTextFieldDeteleModal: false, idTextField: 0 },\r\n  imgFieldDeteleModal: { isImgFieldDeteleModal: false, idImgField: 0 },\r\n  markdownFieldDeteleModal: {\r\n    isMarkdownFieldDeteleModal: false,\r\n    idMarkdownField: 0,\r\n  },\r\n  checkoutDeteleModal: { isCheckoutDeteleModal: false, idCheckout: 0 },\r\n  ScreenDeteleModal: {\r\n    isScreenDeteleModal: false,\r\n    idScreen: 0,\r\n  },\r\n};\r\n\r\nexport const viewSlice = createSlice({\r\n  name: 'view',\r\n  initialState,\r\n  reducers: {\r\n    openMenu: (state) => {\r\n      state.isMenuOpen = true;\r\n    },\r\n    closeMenu: (state) => {\r\n      state.isMenuOpen = false;\r\n    },\r\n    closeDeleteTextFieldModal: (state) => {\r\n      state.textFieldDeteleModal = {\r\n        idTextField: 0,\r\n        isTextFieldDeteleModal: false,\r\n      };\r\n    },\r\n    openDeleteTextFieldModal: (state, action) => {\r\n      state.textFieldDeteleModal = {\r\n        idTextField: action.payload,\r\n        isTextFieldDeteleModal: true,\r\n      };\r\n    },\r\n    closeDeleteImgFieldModal: (state) => {\r\n      state.imgFieldDeteleModal = {\r\n        idImgField: 0,\r\n        isImgFieldDeteleModal: false,\r\n      };\r\n    },\r\n    openDeleteImgFieldModal: (state, action) => {\r\n      state.imgFieldDeteleModal = {\r\n        idImgField: action.payload,\r\n        isImgFieldDeteleModal: true,\r\n      };\r\n    },\r\n    closeDeleteMarkdownFieldModal: (state) => {\r\n      state.markdownFieldDeteleModal = {\r\n        idMarkdownField: 0,\r\n        isMarkdownFieldDeteleModal: false,\r\n      };\r\n    },\r\n    openDeleteMarkdownFieldModal: (state, action) => {\r\n      state.markdownFieldDeteleModal = {\r\n        idMarkdownField: action.payload,\r\n        isMarkdownFieldDeteleModal: true,\r\n      };\r\n    },\r\n    openCheckoutDeleteModal: (state, action) => {\r\n      state.checkoutDeteleModal.isCheckoutDeteleModal = true;\r\n      state.checkoutDeteleModal.idCheckout = action.payload;\r\n    },\r\n    closeCheckoutDeleteModal: (state) => {\r\n      state.checkoutDeteleModal.isCheckoutDeteleModal = false;\r\n      state.checkoutDeteleModal.idCheckout = 0;\r\n    },\r\n    openScreenDeleteModal: (state, action) => {\r\n      state.ScreenDeteleModal.isScreenDeteleModal = true;\r\n      state.ScreenDeteleModal.idScreen = action.payload;\r\n    },\r\n    closeScreenDeleteModal: (state) => {\r\n      state.ScreenDeteleModal.isScreenDeteleModal = false;\r\n      state.ScreenDeteleModal.idScreen = 0;\r\n    },\r\n    openAddTextFieldModal: (state) => {\r\n      state.AddTextFieldModal = true;\r\n    },\r\n    closeAddTextFieldModal: (state) => {\r\n      state.AddTextFieldModal = false;\r\n    },\r\n    openAddMarkdownFieldModal: (state) => {\r\n      state.AddMarkdownFieldModal = true;\r\n    },\r\n    closeAddMarkdownFieldModal: (state) => {\r\n      state.AddMarkdownFieldModal = false;\r\n    },\r\n    openAddImgFieldModal: (state) => {\r\n      state.AddImgFieldModal = true;\r\n    },\r\n    closeAddImgFieldModal: (state) => {\r\n      state.AddImgFieldModal = false;\r\n    },\r\n    openAddCheckoutModal: (state) => {\r\n      state.AddCheckoutModal = true;\r\n    },\r\n    closeAddCheckoutModal: (state) => {\r\n      state.AddCheckoutModal = false;\r\n    },\r\n    openRenameScreenModal: (state) => {\r\n      state.RenameScreenModal = true;\r\n    },\r\n    closeRenameScreenModal: (state) => {\r\n      state.RenameScreenModal = false;\r\n    },\r\n    openAddScreenModal: (state) => {\r\n      state.AddScreenModal = true;\r\n    },\r\n    closeAddScreenModal: (state) => {\r\n      state.AddScreenModal = false;\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [TextFieldsActions.addTextField.type]: (state) => {\r\n      state.AddTextFieldModal = false;\r\n    },\r\n    [imgFieldsActions.addImgField.type]: (state) => {\r\n      state.AddImgFieldModal = false;\r\n    },\r\n    [checkoutActions.addCheckout.type]: (state) => {\r\n      state.AddCheckoutModal = false;\r\n    },\r\n    [markdownActions.addMarkdownField.type]: (state) => {\r\n      state.AddMarkdownFieldModal = false;\r\n    },\r\n    [screensActions.renameScreen.type]: (state) => {\r\n      state.RenameScreenModal = false;\r\n    },\r\n    [screensActions.getAllScreens.type]: (state) => {\r\n      state.AddScreenModal = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport const viewActions = { ...viewSlice.actions };\r\n","import { createAction, createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nexport type Auth = {\r\n  phone: string;\r\n  password: string;\r\n  token: string;\r\n  isTokenValid: boolean;\r\n  isLoading: boolean;\r\n};\r\n\r\nconst asyncAuthActions = {\r\n  loginRequest: createAction('auth/login_request'),\r\n};\r\n\r\nconst initialState: Auth = {\r\n  phone: '',\r\n  password: '',\r\n  token: '',\r\n  isTokenValid: false,\r\n  isLoading: false,\r\n};\r\n\r\nexport const authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    login: (state, action: PayloadAction<{ token: string }>) => {\r\n      state.isTokenValid = true;\r\n      state.token = action.payload.token;\r\n    },\r\n    logout: (state, action: PayloadAction<{}>) => {\r\n      state.token = '';\r\n      state.isLoading = false;\r\n      state.isTokenValid = false;\r\n    },\r\n    tokenExpired: (state) => {\r\n      state.isTokenValid = false;\r\n    },\r\n    setPhone: (state, action: PayloadAction<string>) => {\r\n      state.phone = action.payload;\r\n    },\r\n    setPassword: (state, action: PayloadAction<string>) => {\r\n      state.password = action.payload;\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [asyncAuthActions.loginRequest.type]: (state, action) => {\r\n      state.isLoading = true;\r\n    },\r\n  },\r\n});\r\n\r\nexport const authActions = {\r\n  ...asyncAuthActions,\r\n  ...authSlice.actions,\r\n};\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nexport const drawUpdateSlice = createSlice({\r\n  name: 'draw/list/update',\r\n  initialState: 0,\r\n  reducers: {\r\n    set: (state, action: PayloadAction<number>) => action.payload,\r\n  },\r\n});\r\n\r\nexport const drawUpdateActions = {\r\n  ...drawUpdateSlice.actions,\r\n};\r\n","import { drawViewSlice } from './slices/draw/drawView';\r\nimport { nextDrawSlice } from './slices/draw/nextDrawSlice';\r\nimport { drawNowSlise } from './slices/draw/drawNow';\r\nimport { drawIsLoadingSlice } from './slices/draw/drawIsLoadingSlice';\r\nimport { markdowmSlice } from './slices/markdownFieldSlice';\r\nimport { imgFieldsSlice } from './slices/imgFieldsSlice';\r\nimport { TextFieldsSlice } from './slices/textFieldsSlice';\r\nimport { combineReducers } from 'redux';\r\nimport { counter } from './counter';\r\nimport { viewSlice } from './slices/viewSlice';\r\nimport { authSlice } from './slices/authSlice';\r\nimport { screensSlice } from './slices/screensSlice';\r\nimport { checkoutSlice } from './slices/checkoutSlice';\r\nimport { drawListSlise } from './slices/draw/drawListSlice';\r\nimport { drawUpdateSlice } from './slices/draw/drawUpdateSlice';\r\nexport const stateActions = {\r\n  counter: counter.actions,\r\n};\r\n\r\nconst drawsReducer = combineReducers({\r\n  items: drawListSlise.reducer,\r\n  isLoading: drawIsLoadingSlice.reducer,\r\n  now: drawNowSlise.reducer,\r\n  updateId: drawUpdateSlice.reducer,\r\n  next: nextDrawSlice.reducer,\r\n  view: drawViewSlice.reducer,\r\n});\r\n\r\nexport const state = combineReducers({\r\n  counter: counter.reducer,\r\n  auth: authSlice.reducer,\r\n  TextFields: TextFieldsSlice.reducer,\r\n  imgFields: imgFieldsSlice.reducer,\r\n  markdowmField: markdowmSlice.reducer,\r\n  screens: screensSlice.reducer,\r\n  checkouts: checkoutSlice.reducer,\r\n  view: viewSlice.reducer,\r\n  draws: drawsReducer,\r\n});\r\n","import { createAction } from '@reduxjs/toolkit';\r\nconst PREF = 'ui/counter/';\r\nexport const increment = createAction(PREF + 'increment');\r\nexport const decrement = createAction(PREF + 'decrement');\r\nexport const multiply = createAction<number>(PREF + 'multiply');\r\n","import { getState } from '../../redux/createStore';\r\nimport { call, put } from 'redux-saga/effects';\r\nimport { counterActions } from '../../redux/counter';\r\nimport { multiply } from './counter-actions';\r\n\r\nexport const delay = (ms: number) => new Promise((res) => setTimeout(res, ms));\r\n\r\nexport function* doIncrement() {\r\n  const { counter } = getState();\r\n  yield call(delay, 1000);\r\n  console.log('increment');\r\n  yield put(counterActions.setCounter(counter + 1));\r\n}\r\n\r\nexport function* doDecrement() {\r\n  const { counter } = getState();\r\n  yield call(delay, 1000);\r\n  console.log('decrement');\r\n  yield put(counterActions.setCounter(counter - 1));\r\n}\r\n\r\nexport function* doMultiply(action: ReturnType<typeof multiply>) {\r\n  yield call(delay, 1000);\r\n  console.log('multiply');\r\n  yield put(counterActions.multiply(action.payload));\r\n}\r\n","import { takeEvery } from 'redux-saga/effects';\r\nimport { decrement, increment, multiply } from './counter-actions';\r\nimport { doDecrement, doIncrement, doMultiply } from './counter-workers';\r\n\r\nexport function* counterListener() {\r\n    console.log('hello2');\r\n    yield takeEvery(increment, doIncrement);\r\n    yield takeEvery(decrement, doDecrement);\r\n    yield takeEvery(multiply, doMultiply);\r\n}\r\n","import { Either, left, right } from 'useful-monads';\r\n\r\nexport type Dto = {\r\n  payload?: any;\r\n};\r\n\r\ntype ValueOf<T> = T[keyof T];\r\ntype ErrorsOfDto<T extends Dto> = ValueOf<Required<Omit<T, 'payload'>>>;\r\n\r\nexport const dtoToEither = <T extends Dto>(\r\n  dto: T\r\n): Either<ErrorsOfDto<T>, Required<T>['payload']> => {\r\n  if (dto.payload) {\r\n    return right(dto.payload);\r\n  } else {\r\n    const { payload, ...errors } = dto;\r\n    const [error] = Object.values(errors);\r\n\r\n    return left(error as any);\r\n  }\r\n};\r\n","import ky from 'ky';\r\nimport { getState, store } from '../redux/createStore';\r\nimport { authActions } from '../redux/slices/authSlice';\r\nimport { LoginResDto } from './typings';\r\nexport const api = ky.extend({\r\n  prefixUrl: 'https://paromov.ru/',\r\n  timeout: 60000,\r\n  hooks: {\r\n    beforeRequest: [\r\n      async (request) => {\r\n        const { token } = getState().auth;\r\n        request.headers.set('Authorization', `Bearer ${token}`);\r\n      },\r\n    ],\r\n    afterResponse: [\r\n      async (request, options, response) => {\r\n        if (response.status === 401) {\r\n          try {\r\n            const { phone, password } = getState().auth;\r\n            const token = await ky\r\n              .post('https://paromov.ru/auth', {\r\n                json: {\r\n                  phone,\r\n                  password,\r\n                },\r\n              })\r\n              .json<LoginResDto>()\r\n              .then((r) => r.payload.access_token);\r\n            store.dispatch(authActions.login({ token }));\r\n            request.headers.set('Authorization', `Bearer ${token}`);\r\n            return ky(request);\r\n          } catch (e) {\r\n            store.dispatch(authActions.logout({}));\r\n            throw Error(e);\r\n          }\r\n        }\r\n      },\r\n    ],\r\n  },\r\n});\r\n","import { Either } from 'useful-monads';\r\nimport { dtoToEither } from '../dtoToEither';\r\nimport {\r\n  FindAllScreensResDto,\r\n  ScreenNotFoundById,\r\n  FlatScreenDto,\r\n  ScreenDto,\r\n  FindScreenByIdResDto,\r\n  ChangeScreenNameResDto,\r\n  ScreenAlreadyExists,\r\n  CreateScreenResDto,\r\n  DeleteScreenResDto,\r\n} from '../typings/index';\r\nimport { api } from '../api';\r\nexport const screenServer = {\r\n  getScreens: (): Promise<FlatScreenDto[]> =>\r\n    api\r\n      .get('screen')\r\n      .json<FindAllScreensResDto>()\r\n      .then((r) => r.payload),\r\n  addScreen: (\r\n    name: string\r\n  ): Promise<Either<ScreenAlreadyExists, FlatScreenDto>> =>\r\n    api\r\n      .post('screen', {\r\n        json: { name },\r\n      })\r\n      .json<CreateScreenResDto>()\r\n      .then(dtoToEither),\r\n  renameScreen: (\r\n    id: number,\r\n    name: string\r\n  ): Promise<Either<ScreenNotFoundById, FlatScreenDto>> =>\r\n    api\r\n      .put(`screen/${id}`, {\r\n        json: {\r\n          name,\r\n        },\r\n      })\r\n      .json<ChangeScreenNameResDto>()\r\n      .then(dtoToEither),\r\n  deleteScreen: (\r\n    id: number\r\n  ): Promise<Either<ScreenNotFoundById, { id?: number }>> =>\r\n    api.delete(`screen/${id}`).json<DeleteScreenResDto>().then(dtoToEither),\r\n  getScreen: (id: number): Promise<Either<ScreenNotFoundById, ScreenDto>> =>\r\n    api.get(`screen/${id}`).json<FindScreenByIdResDto>().then(dtoToEither),\r\n};\r\n","import { LoginDto, LoginResDto } from '../typings';\r\nimport { api } from '../api';\r\nexport const authService = {\r\n  auth: (loginDto: LoginDto): Promise<string> =>\r\n    api\r\n      .post('auth', {\r\n        json: loginDto,\r\n      })\r\n      .json<LoginResDto>()\r\n      .then((r) => r.payload.access_token),\r\n  getProfile: () => api.get('auth/profile').json(),\r\n};\r\n","import { screenServer } from '../../apiWorker/servers/screenService';\r\nimport { take, select, call, put } from 'redux-saga/effects';\r\nimport { Auth, authActions } from '../../redux/slices/authSlice';\r\nimport { RootSelector } from '../../redux/createStore';\r\nimport { authService } from '../../apiWorker/servers/authService';\r\nimport {\r\n  screensActions,\r\n  asyncScreenActions,\r\n} from '../../redux/slices/screensSlice';\r\nimport { FlatScreenDto } from '../../apiWorker/typings';\r\nimport { NotificationManager } from 'react-notifications';\r\nexport function* authFlow() {\r\n  while (true) {\r\n    yield take(authActions.loginRequest);\r\n    const password = yield select<RootSelector<string>>(\r\n      (state) => state.auth.password\r\n    );\r\n    const phone = yield select<RootSelector<string>>(\r\n      (state) => state.auth.phone\r\n    );\r\n    try {\r\n      const token = yield call(authService.auth, {\r\n        password,\r\n        phone,\r\n      });\r\n      yield put(authActions.login({ token }));\r\n\r\n      const screens: FlatScreenDto[] = yield call(screenServer.getScreens);\r\n      yield put(\r\n        screensActions.getAllScreens({\r\n          screens: screens.map((screen) => ({\r\n            ...screen,\r\n            isLoading: false,\r\n          })),\r\n        })\r\n      );\r\n    } catch (e) {\r\n      yield put(asyncScreenActions.getScreensError());\r\n      if (e.code === 403) {\r\n        NotificationManager.error('Неверные Логин или пароль');\r\n      } else {\r\n        NotificationManager.error(e);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { screensActions } from '../../redux/slices/screensSlice';\r\nimport { RootSelector } from '../../redux/createStore';\r\nimport { Either } from 'useful-monads';\r\nimport {\r\n  ScreenNotFoundById,\r\n  FlatScreenDto,\r\n  ScreenAlreadyExists,\r\n} from '../../apiWorker/typings/index';\r\nimport { screenServer } from '../../apiWorker/servers/screenService';\r\nimport { call, put, takeEvery, select } from 'redux-saga/effects';\r\nimport { asyncScreenActions } from '../../redux/slices/screensSlice';\r\nimport { NotificationManager } from 'react-notifications';\r\nexport function* addScreen(\r\n  action: ReturnType<typeof asyncScreenActions.addScreen_async>\r\n) {\r\n  yield put(asyncScreenActions.addScreen_request());\r\n\r\n  const name = yield select<RootSelector<string>>(\r\n    (state) => state.screens.addScreenName\r\n  );\r\n\r\n  try {\r\n    const screenEither: Either<ScreenAlreadyExists, FlatScreenDto> = yield call(\r\n      screenServer.addScreen,\r\n      name\r\n    );\r\n    const screen = screenEither.extract();\r\n    if (screen.right) {\r\n      const screens: FlatScreenDto[] = yield call(screenServer.getScreens);\r\n      yield put(\r\n        screensActions.getAllScreens({\r\n          screens: screens.map((screen) => ({\r\n            ...screen,\r\n            isLoading: false,\r\n          })),\r\n        })\r\n      );\r\n    } else {\r\n      NotificationManager.error(screen.left.message);\r\n      yield put(asyncScreenActions.addScreen_error());\r\n    }\r\n  } catch (error) {\r\n    yield put(asyncScreenActions.addScreen_error());\r\n    NotificationManager.error(\r\n      'Что-то пошло не так, но мы обящательно разберемся'\r\n    );\r\n  }\r\n}\r\n\r\nexport function* addScreenWatcher() {\r\n  yield takeEvery(asyncScreenActions.addScreen_async, addScreen);\r\n}\r\n","import { imgFieldsActions } from './../../redux/slices/imgFieldsSlice';\r\nimport { store } from './../../redux/createStore';\r\nimport { TextFieldsActions } from '../../redux/slices/textFieldsSlice';\r\nimport { Either } from 'useful-monads';\r\nimport { ScreenDto, ScreenNotFoundById } from '../../apiWorker/typings/index';\r\nimport { screenServer } from '../../apiWorker/servers/screenService';\r\nimport { call, put, takeEvery, take } from 'redux-saga/effects';\r\nimport {\r\n  asyncScreenActions,\r\n  screensActions,\r\n} from '../../redux/slices/screensSlice';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport { markdownActions } from '../../redux/slices/markdownFieldSlice';\r\nexport function* getScreen(\r\n  action: ReturnType<typeof asyncScreenActions.getScreen>\r\n) {\r\n  const screenList = store.getState().screens.screensList;\r\n\r\n  if (!screenList.length) {\r\n    yield put(asyncScreenActions.getScreensRequest());\r\n    yield take(screensActions.getAllScreens);\r\n  }\r\n  try {\r\n    yield put(asyncScreenActions.getScreenRequest(action.payload));\r\n    const screenEither: Either<ScreenNotFoundById, ScreenDto> = yield call(\r\n      screenServer.getScreen,\r\n      action.payload\r\n    );\r\n\r\n    const screen = screenEither.extract();\r\n    if (screen.right) {\r\n      yield put(\r\n        imgFieldsActions.getImgFields(\r\n          screen.right.imgFields.map((imgField) => ({\r\n            ...imgField,\r\n            isLoading: false,\r\n          }))\r\n        )\r\n      );\r\n      yield put(\r\n        markdownActions.getAllMarkdowm(\r\n          screen.right.mdFields.map((markdown) => ({\r\n            ...markdown,\r\n            isLoading: false,\r\n            addValueText: undefined,\r\n          }))\r\n        )\r\n      );\r\n      yield put(\r\n        TextFieldsActions.getTextFields(\r\n          screen.right.textFields.map((textfield) => ({\r\n            ...textfield,\r\n            isLoading: false,\r\n          }))\r\n        )\r\n      );\r\n      yield put(screensActions.getActiveScreen(screen.right.id));\r\n    } else {\r\n      NotificationManager.error(screen.left.message);\r\n      yield put(asyncScreenActions.getScreenError(action.payload));\r\n    }\r\n  } catch (error) {\r\n    yield put(asyncScreenActions.getScreenError(action.payload));\r\n    NotificationManager.error(\r\n      'Что-то пошло не так, но мы обящательно разберемся'\r\n    );\r\n  }\r\n}\r\n\r\nexport function* getScreenWatcher() {\r\n  yield takeEvery(asyncScreenActions.getScreen, getScreen);\r\n}\r\n","import { SetTextValueType } from '../../redux/slices/textFieldsSlice';\r\n// import { Either } from '@sweet-monads/either';\r\nimport { Either } from 'useful-monads';\r\nimport { dtoToEither } from '../dtoToEither';\r\nimport {\r\n  DeleteTextFieldResDto,\r\n  TextFieldNotFoundById,\r\n  TextDto,\r\n  CreateTextResDto,\r\n  CreateTextFieldDto,\r\n  CreateTextFieldResDto,\r\n  TextFieldAlreadyExists,\r\n  ScreenNotFoundById,\r\n  FlatTextFieldDto,\r\n} from '../typings/index';\r\nimport { api } from '../api';\r\nimport { DeleteFieldType } from '../../redux/slices/textFieldsSlice';\r\nexport const TextFieldServer = {\r\n  deleteTextField: (\r\n    id: number\r\n  ): Promise<Either<TextFieldNotFoundById, DeleteFieldType>> =>\r\n    api\r\n      .delete(`text/field/${id}`)\r\n      .json<DeleteTextFieldResDto>()\r\n      .then(dtoToEither),\r\n\r\n  addTextValue: (payload: SetTextValueType): Promise<TextDto | undefined> =>\r\n    api\r\n      .post('text/value', {\r\n        json: {\r\n          value: payload.text,\r\n          fieldId: payload.fieldId,\r\n        },\r\n      })\r\n      .json<CreateTextResDto>()\r\n      .then((r) => r.payload),\r\n  addTextField: (\r\n    payload: CreateTextFieldDto\r\n  ): Promise<\r\n    Either<ScreenNotFoundById | TextFieldAlreadyExists, FlatTextFieldDto>\r\n  > =>\r\n    api\r\n      .post('text/field', {\r\n        json: {\r\n          name: payload.name,\r\n          screenId: payload.screenId,\r\n        },\r\n      })\r\n      .json<CreateTextFieldResDto>()\r\n      .then(dtoToEither),\r\n};\r\n","import { TextFieldServer } from '../../apiWorker/servers/TextFieldsServer';\r\nimport {\r\n  asyncTextFieldActions,\r\n  TextFieldsActions,\r\n} from '../../redux/slices/textFieldsSlice';\r\nimport { call, put, takeEvery } from 'redux-saga/effects';\r\nexport function* addTextValue(\r\n  action: ReturnType<typeof asyncTextFieldActions.addTextFieldValueAsync>\r\n) {\r\n  yield put(\r\n    asyncTextFieldActions.addTextFieldValueRequest(action.payload.fieldId)\r\n  );\r\n  const value = yield call(TextFieldServer.addTextValue, action.payload);\r\n  const { field, ...v } = value;\r\n  yield put(\r\n    TextFieldsActions.addTextValue({\r\n      value: v,\r\n      fieldId: action.payload.fieldId,\r\n    })\r\n  );\r\n}\r\nexport function* addValueWatcher() {\r\n  yield takeEvery(asyncTextFieldActions.addTextFieldValueAsync, addTextValue);\r\n}\r\n","import { NotificationManager } from 'react-notifications';\r\nimport { Either } from 'useful-monads';\r\nimport { TextFieldServer } from '../../apiWorker/servers/TextFieldsServer';\r\nimport {\r\n  asyncTextFieldActions,\r\n  DeleteFieldType,\r\n  TextFieldsActions,\r\n} from '../../redux/slices/textFieldsSlice';\r\nimport { call, put, takeEvery } from 'redux-saga/effects';\r\nimport { TextFieldNotFoundById } from '../../apiWorker/typings';\r\n\r\nexport function* deleteTextField(\r\n  action: ReturnType<typeof asyncTextFieldActions.deleteTextFieldAsync>\r\n) {\r\n  yield put(asyncTextFieldActions.deleteTextFieldRequest(action.payload));\r\n  try {\r\n    const fieldDeleteIdEither: Either<\r\n      TextFieldNotFoundById,\r\n      DeleteFieldType\r\n    > = yield call(TextFieldServer.deleteTextField, action.payload);\r\n\r\n    const fieldDeleteId = fieldDeleteIdEither.extract();\r\n    if (fieldDeleteId.right) {\r\n      yield put(\r\n        TextFieldsActions.deleteTextField(fieldDeleteId.right?.id ?? 0)\r\n      );\r\n    } else {\r\n      yield put(asyncTextFieldActions.deleteTextFieldError(action.payload));\r\n      NotificationManager.error(fieldDeleteId.left.message);\r\n    }\r\n  } catch (error) {\r\n    yield put(asyncTextFieldActions.deleteTextFieldError(action.payload));\r\n    if (error.response.status > 499) {\r\n      NotificationManager.error(\r\n        'Неопознанная ошибка сервера, чип и дейл уже в пути'\r\n      );\r\n    }\r\n    console.error(error);\r\n  }\r\n}\r\nexport function* deleteTextFieldWatcher() {\r\n  yield takeEvery(asyncTextFieldActions.deleteTextFieldAsync, deleteTextField);\r\n}\r\n","import { Either } from 'useful-monads';\r\nimport { RootState, RootSelector } from '../../redux/createStore';\r\nimport { TextFieldServer } from '../../apiWorker/servers/TextFieldsServer';\r\nimport {\r\n  asyncTextFieldActions,\r\n  TextFieldsActions,\r\n} from '../../redux/slices/textFieldsSlice';\r\nimport { call, put, takeEvery, select } from 'redux-saga/effects';\r\nimport {\r\n  ScreenNotFoundById,\r\n  TextFieldAlreadyExists,\r\n  FlatTextFieldDto,\r\n  TextDto,\r\n} from '../../apiWorker/typings';\r\nimport { NotificationManager } from 'react-notifications';\r\nexport function* addTextField(\r\n  action: ReturnType<typeof asyncTextFieldActions.addTextFieldAsync>\r\n) {\r\n  yield put(asyncTextFieldActions.addTextFieldRequest(action.payload));\r\n\r\n  const name = yield select<RootSelector<string>>(\r\n    (state) => state.TextFields.addTextfieldName\r\n  );\r\n  const TextFieldValue = yield select<RootSelector<string>>(\r\n    (state) => state.TextFields.addTextFieldValue\r\n  );\r\n  try {\r\n    const textFieldEither: Either<\r\n      ScreenNotFoundById | TextFieldAlreadyExists,\r\n      FlatTextFieldDto\r\n    > = yield call(TextFieldServer.addTextField, {\r\n      name,\r\n      screenId: action.payload,\r\n    });\r\n    const field = textFieldEither.extract();\r\n\r\n    if (field.right) {\r\n      const value: TextDto = yield call(TextFieldServer.addTextValue, {\r\n        text: TextFieldValue,\r\n        fieldId: field.right.id,\r\n      });\r\n\r\n      yield put(\r\n        TextFieldsActions.addTextField({\r\n          item: {\r\n            ...field.right,\r\n            values: [value],\r\n            isLoading: false,\r\n          },\r\n          id: action.payload,\r\n        })\r\n      );\r\n\r\n      yield put(\r\n        TextFieldsActions.addTextValue({\r\n          value,\r\n          fieldId: field.right.id,\r\n        })\r\n      );\r\n    } else {\r\n      yield put(asyncTextFieldActions.addTextFieldError(action.payload));\r\n      NotificationManager.error(field.left.message);\r\n    }\r\n  } catch (error) {\r\n    yield put(asyncTextFieldActions.addTextFieldError(action.payload));\r\n    NotificationManager.error('Упс, кто-то сломался, но жить будем');\r\n  }\r\n}\r\nexport function* addTextFieldWatcher() {\r\n  yield takeEvery(asyncTextFieldActions.addTextFieldAsync, addTextField);\r\n}\r\n","import {\r\n  DeleteTextFieldResDto,\r\n  TextFieldNotFoundById,\r\n  CreateImgFieldDto,\r\n  CreateImgFieldResDto,\r\n  ScreenNotFoundById,\r\n  ImgFieldAlreadyExistsInScreen,\r\n  FlatImgFieldDto,\r\n  ImgFieldNotFoundById,\r\n  ImgDto,\r\n  CreateImgResDto,\r\n  ImgNotFoundById,\r\n  SaveImgLastResDto,\r\n  ImgFieldDto,\r\n  FindImgFieldByIdResDto,\r\n} from './../typings/index';\r\nimport { Either } from 'useful-monads';\r\nimport { dtoToEither } from '../dtoToEither';\r\nimport { api } from '../api';\r\n\r\nexport const imgFieldsService = {\r\n  deleteimgField: (\r\n    id: number\r\n  ): Promise<Either<TextFieldNotFoundById, { id?: number | undefined }>> =>\r\n    api\r\n      .delete(`img/field/${id}`)\r\n      .json<DeleteTextFieldResDto>()\r\n      .then(dtoToEither),\r\n  addimgField: (\r\n    ImgField: CreateImgFieldDto\r\n  ): Promise<\r\n    Either<ScreenNotFoundById | ImgFieldAlreadyExistsInScreen, FlatImgFieldDto>\r\n  > =>\r\n    api\r\n      .post(`img/field`, {\r\n        json: ImgField,\r\n      })\r\n      .json<CreateImgFieldResDto>()\r\n      .then(dtoToEither),\r\n  addImg: (\r\n    file: FormData,\r\n    id: number\r\n  ): Promise<Either<ImgFieldNotFoundById, ImgDto>> =>\r\n    api\r\n      .post(`img/field/${id}/value`, {\r\n        body: file,\r\n      })\r\n      .json<CreateImgResDto>()\r\n      .then(dtoToEither),\r\n  addTheSameImg: (imgId: number): Promise<Either<ImgNotFoundById, ImgDto>> =>\r\n    api\r\n      .post(`img/value/before`, {\r\n        json: {\r\n          imgId,\r\n        },\r\n      })\r\n      .json<SaveImgLastResDto>()\r\n      .then(dtoToEither),\r\n  getImgField: (\r\n    id: number\r\n  ): Promise<Either<ImgFieldNotFoundById, ImgFieldDto>> =>\r\n    api.get(`img/field/${id}`).json<FindImgFieldByIdResDto>().then(dtoToEither),\r\n};\r\n","import { imgFieldsService } from './../../apiWorker/servers/imgFieldService';\r\nimport {\r\n  imgFieldsActionsAsync,\r\n  imgFieldsActions,\r\n} from './../../redux/slices/imgFieldsSlice';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport { Either } from 'useful-monads';\r\nimport { call, put, takeEvery } from 'redux-saga/effects';\r\nimport { TextFieldNotFoundById } from '../../apiWorker/typings';\r\n\r\nexport function* deleteImgField(\r\n  action: ReturnType<typeof imgFieldsActionsAsync.deleteImgfieldAsync>\r\n) {\r\n  yield put(imgFieldsActionsAsync.deleteImgfieldRequest(action.payload));\r\n  try {\r\n    const ImgFieldDeleteIdEither: Either<\r\n      TextFieldNotFoundById,\r\n      { id?: number | undefined }\r\n    > = yield call(imgFieldsService.deleteimgField, action.payload);\r\n\r\n    const imgFieldDeleteId = ImgFieldDeleteIdEither.extract();\r\n    if (imgFieldDeleteId.right) {\r\n      yield put(\r\n        imgFieldsActions.deleteImgField(imgFieldDeleteId.right?.id ?? 0)\r\n      );\r\n    } else {\r\n      yield put(imgFieldsActionsAsync.deleteImgfieldError(action.payload));\r\n      NotificationManager.error(imgFieldDeleteId.left.message);\r\n    }\r\n  } catch (error) {\r\n    yield put(imgFieldsActionsAsync.deleteImgfieldError(action.payload));\r\n    if (error.response?.status ?? 0 > 499) {\r\n      NotificationManager.error(\r\n        'Неопознанная ошибка сервера, чип и дейл уже в пути'\r\n      );\r\n    }\r\n    console.error(error);\r\n  }\r\n}\r\nexport function* deleteImgFieldWatcher() {\r\n  yield takeEvery(imgFieldsActionsAsync.deleteImgfieldAsync, deleteImgField);\r\n}\r\n","import { RootSelector } from './../../redux/createStore';\r\nimport { imgFieldsService } from './../../apiWorker/servers/imgFieldService';\r\nimport { Either } from 'useful-monads';\r\nimport { call, put, takeEvery, select } from 'redux-saga/effects';\r\nimport {\r\n  ScreenNotFoundById,\r\n  ImgFieldAlreadyExistsInScreen,\r\n  FlatImgFieldDto,\r\n} from '../../apiWorker/typings';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport {\r\n  imgFieldsActionsAsync,\r\n  imgFieldsActions,\r\n} from '../../redux/slices/imgFieldsSlice';\r\n\r\nexport function* addImgField(\r\n  action: ReturnType<typeof imgFieldsActionsAsync.addImgFieldAsync>\r\n) {\r\n  yield put(imgFieldsActionsAsync.addImgFieldRequest(action.payload));\r\n\r\n  const name: string = yield select<RootSelector<string>>(\r\n    (state) => state.imgFields.addImgFieldName\r\n  );\r\n  try {\r\n    const imgFieldEither: Either<\r\n      ScreenNotFoundById | ImgFieldAlreadyExistsInScreen,\r\n      FlatImgFieldDto\r\n    > = yield call(imgFieldsService.addimgField, {\r\n      name,\r\n      screenId: action.payload,\r\n    });\r\n    const field = imgFieldEither.extract();\r\n\r\n    if (field.right) {\r\n      yield put(\r\n        imgFieldsActions.addImgField({\r\n          item: {\r\n            ...field.right,\r\n            img: [],\r\n            isLoading: false,\r\n            addImgValue: undefined,\r\n            addTheSameImgId: undefined,\r\n          },\r\n          id: action.payload,\r\n        })\r\n      );\r\n    } else {\r\n      yield put(imgFieldsActionsAsync.addImgFieldError(action.payload));\r\n      NotificationManager.error(field.left.message);\r\n    }\r\n  } catch (error) {\r\n    yield put(imgFieldsActionsAsync.addImgFieldError(action.payload));\r\n    NotificationManager.error(\r\n      'Что-то пошло не так, но мы обязательно разберемся'\r\n    );\r\n  }\r\n}\r\nexport function* addImgFieldWatcher() {\r\n  yield takeEvery(imgFieldsActionsAsync.addImgFieldAsync, addImgField);\r\n}\r\n","import {\r\n  CreateCheckoutResDto,\r\n  CheckoutAlreadyExists,\r\n  CreateCheckoutDto,\r\n} from './../typings/index';\r\nimport { Either } from 'useful-monads';\r\nimport {\r\n  FindAllCheckoutsResDto,\r\n  FlatCheckoutDto,\r\n  DeleteCheckoutResDto,\r\n  CheckoutNotFoundById,\r\n} from '../typings/index';\r\nimport { api } from '../api';\r\nimport { dtoToEither } from '../dtoToEither';\r\nexport const CheckoutsServer = {\r\n  getAllCheckout: (): Promise<FlatCheckoutDto[] | undefined> =>\r\n    api\r\n      .get(`checkout`)\r\n      .json<FindAllCheckoutsResDto>()\r\n      .then((r) => r.payload),\r\n  deleteCheckout: (\r\n    id: number\r\n  ): Promise<\r\n    Either<\r\n      CheckoutNotFoundById,\r\n      {\r\n        checkoutId?: number;\r\n      }\r\n    >\r\n  > =>\r\n    api.delete(`checkout/${id}`).json<DeleteCheckoutResDto>().then(dtoToEither),\r\n  addCheckout: (\r\n    checkout: CreateCheckoutDto\r\n  ): Promise<Either<CheckoutAlreadyExists, FlatCheckoutDto>> =>\r\n    api\r\n      .post(`checkout`, {\r\n        json: checkout,\r\n      })\r\n      .json<CreateCheckoutResDto>()\r\n      .then(dtoToEither),\r\n};\r\n","import { CheckoutsServer } from '../../apiWorker/servers/checkoutsServer';\r\nimport {\r\n  checkoutAsymcActions,\r\n  checkoutActions,\r\n} from './../../redux/slices/checkoutSlice';\r\nimport { call, put, take } from 'redux-saga/effects';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport { FlatCheckoutDto } from '../../apiWorker/typings';\r\n\r\nexport function* getAllCheckout() {\r\n  yield take(checkoutAsymcActions.getAllCheckoutAsync);\r\n  yield put(checkoutAsymcActions.getAllCheckout_request());\r\n  try {\r\n    const checkouts: FlatCheckoutDto[] = yield call(\r\n      CheckoutsServer.getAllCheckout\r\n    );\r\n    yield put(\r\n      checkoutActions.getAllCheckout(\r\n        checkouts.map((checkout) => ({\r\n          ...checkout,\r\n          isLoading: false,\r\n        }))\r\n      )\r\n    );\r\n  } catch (error) {\r\n    yield put(checkoutAsymcActions.getAllCheckout_error());\r\n    NotificationManager.error('Упс, кто-то сломался, но жить будем');\r\n  }\r\n}\r\n","import { CheckoutsServer } from './../../apiWorker/servers/checkoutsServer';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport { Either } from 'useful-monads';\r\nimport { call, put, takeEvery } from 'redux-saga/effects';\r\nimport {\r\n  checkoutAsymcActions,\r\n  checkoutActions,\r\n} from '../../redux/slices/checkoutSlice';\r\nimport { CheckoutNotFoundById } from '../../apiWorker/typings';\r\n\r\nexport function* deleteCheckout(\r\n  action: ReturnType<typeof checkoutAsymcActions.checkoutDelete_async>\r\n) {\r\n  yield put(checkoutAsymcActions.checkoutDelete_request(action.payload));\r\n  try {\r\n    const deleteIdEither: Either<\r\n      CheckoutNotFoundById,\r\n      {\r\n        checkoutId: number;\r\n      }\r\n    > = yield call(CheckoutsServer.deleteCheckout, action.payload);\r\n\r\n    const deleteId = deleteIdEither.extract();\r\n\r\n    if (deleteId.right) {\r\n      yield put(checkoutActions.deleteCheckout(deleteId.right.checkoutId));\r\n    } else {\r\n      yield put(checkoutAsymcActions.checkoutDelete_error(action.payload));\r\n      NotificationManager.error(deleteId.left.message);\r\n    }\r\n  } catch (error) {\r\n    yield put(checkoutAsymcActions.checkoutDelete_error(action.payload));\r\n    if (error.response?.status ?? 0 > 499) {\r\n      NotificationManager.error(\r\n        'Неопознанная ошибка сервера, чип и дейл уже в пути'\r\n      );\r\n    }\r\n    console.error(error);\r\n  }\r\n}\r\nexport function* deleteCheckoutWatcher() {\r\n  yield takeEvery(checkoutAsymcActions.checkoutDelete_async, deleteCheckout);\r\n}\r\n","import { CheckoutsServer } from './../../apiWorker/servers/checkoutsServer';\r\nimport {\r\n  checkoutAsymcActions,\r\n  checkoutActions,\r\n} from './../../redux/slices/checkoutSlice';\r\nimport { RootSelector } from './../../redux/createStore';\r\nimport { Either } from 'useful-monads';\r\nimport { call, put, take, select } from 'redux-saga/effects';\r\n\r\nimport { NotificationManager } from 'react-notifications';\r\nimport {\r\n  CheckoutAlreadyExists,\r\n  FlatCheckoutDto,\r\n} from '../../apiWorker/typings';\r\nexport function* addCheckout() {\r\n  yield take(checkoutAsymcActions.checkoutAdd_async);\r\n  yield put(checkoutAsymcActions.checkoutAdd_request());\r\n  const checkoutFn = yield select<RootSelector<string>>(\r\n    (state) => state.checkouts.addCheckoutFn\r\n  );\r\n  const checkoutAddress = yield select<RootSelector<string>>(\r\n    (state) => state.checkouts.addCheckoutAddress\r\n  );\r\n  try {\r\n    const checkoutEither: Either<\r\n      CheckoutAlreadyExists,\r\n      FlatCheckoutDto\r\n    > = yield call(CheckoutsServer.addCheckout, {\r\n      fn: checkoutFn,\r\n      address: checkoutAddress,\r\n    });\r\n    const checkout = checkoutEither.extract();\r\n    if (checkout.right) {\r\n      yield put(\r\n        checkoutActions.addCheckout({\r\n          ...checkout.right,\r\n          isLoading: false,\r\n        })\r\n      );\r\n    } else {\r\n      yield put(checkoutAsymcActions.checkoutAdd_error());\r\n      NotificationManager.error(checkout.left.message);\r\n    }\r\n  } catch (error) {\r\n    yield put(checkoutAsymcActions.checkoutAdd_error());\r\n    NotificationManager.error(\r\n      'Что-то пошло не так, но мы обязательно разберемся'\r\n    );\r\n  }\r\n}\r\n","import {\r\n  imgFieldsActionsAsync,\r\n  imgFieldsActions,\r\n} from './../../redux/slices/imgFieldsSlice';\r\nimport { RootSelector } from './../../redux/createStore';\r\nimport { imgFieldsService } from './../../apiWorker/servers/imgFieldService';\r\nimport { Either } from 'useful-monads';\r\nimport { call, put, takeEvery, select } from 'redux-saga/effects';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport { ImgFieldNotFoundById, ImgDto } from '../../apiWorker/typings';\r\n\r\nexport function* addImg(\r\n  action: ReturnType<typeof imgFieldsActionsAsync.addImg_async>\r\n) {\r\n  try {\r\n    yield put(imgFieldsActionsAsync.addImg_request(action.payload));\r\n\r\n    const url: string = yield select<RootSelector<string | undefined>>(\r\n      (state) =>\r\n        state.imgFields.items.find((imgField) => imgField.id === action.payload)\r\n          ?.addImgValue ?? ''\r\n    );\r\n    const type: string = yield select<RootSelector<string | undefined>>(\r\n      (state) =>\r\n        state.imgFields.items.find((imgField) => imgField.id === action.payload)\r\n          ?.addImgValueType ?? ''\r\n    );\r\n\r\n    const file = yield fetch(url)\r\n      .then((r) => r.blob())\r\n      .then(\r\n        (b) =>\r\n          new File([b], 'newFile', {\r\n            type,\r\n          })\r\n      );\r\n\r\n    const formFile = new FormData();\r\n    formFile.append('file', file);\r\n\r\n    const imgEither: Either<ImgFieldNotFoundById, ImgDto> = yield call(\r\n      imgFieldsService.addImg,\r\n      formFile,\r\n      action.payload\r\n    );\r\n\r\n    const img = imgEither.extract();\r\n\r\n    if (img.right) {\r\n      yield put(\r\n        imgFieldsActions.addImg({\r\n          img: img.right,\r\n          id: action.payload,\r\n        })\r\n      );\r\n    } else {\r\n      yield put(imgFieldsActionsAsync.addImg_error(action.payload));\r\n      NotificationManager.error(img.left.message);\r\n    }\r\n  } catch (error) {\r\n    yield put(imgFieldsActionsAsync.addImg_error(action.payload));\r\n    NotificationManager.error(\r\n      'Что-то пошло не так, но мы обязательно разберемся'\r\n    );\r\n    console.error(error);\r\n  }\r\n}\r\nexport function* addImgWatcher() {\r\n  yield takeEvery(imgFieldsActionsAsync.addImg_async, addImg);\r\n}\r\n","import {\r\n  imgFieldsActionsAsync,\r\n  imgFieldsActions,\r\n} from './../../redux/slices/imgFieldsSlice';\r\nimport { RootSelector } from './../../redux/createStore';\r\nimport { imgFieldsService } from './../../apiWorker/servers/imgFieldService';\r\nimport { Either } from 'useful-monads';\r\nimport { call, put, takeEvery, select } from 'redux-saga/effects';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport { ImgFieldNotFoundById, ImgFieldDto } from '../../apiWorker/typings';\r\n\r\nexport function* addTheSameImg(\r\n  action: ReturnType<typeof imgFieldsActionsAsync.addTheSameImg_async>\r\n) {\r\n  try {\r\n    yield put(imgFieldsActionsAsync.addTheSameImg_request(action.payload));\r\n\r\n    const imgId: number = yield select<RootSelector<number>>(\r\n      (state) =>\r\n        state.imgFields.items.find((imgField) => imgField.id === action.payload)\r\n          ?.addTheSameImgId ?? 0\r\n    );\r\n\r\n    yield call(imgFieldsService.addTheSameImg, imgId);\r\n    const imgFieldEither: Either<\r\n      ImgFieldNotFoundById,\r\n      ImgFieldDto\r\n    > = yield call(imgFieldsService.getImgField, action.payload);\r\n    const imgField = imgFieldEither.extract();\r\n\r\n    if (imgField.right) {\r\n      yield put(\r\n        imgFieldsActions.changeImgField({\r\n          imgField: {\r\n            ...imgField.right,\r\n            isLoading: false,\r\n          },\r\n          id: action.payload,\r\n        })\r\n      );\r\n    } else {\r\n      yield put(imgFieldsActionsAsync.addTheSameImg_error(action.payload));\r\n      NotificationManager.error(imgField.left.message);\r\n    }\r\n  } catch (error) {\r\n    yield put(imgFieldsActionsAsync.addTheSameImg_error(action.payload));\r\n    NotificationManager.error(\r\n      'Что-то пошло не так, но мы обязательно разберемся'\r\n    );\r\n    console.error(error);\r\n  }\r\n}\r\nexport function* addTheSameImgWatcher() {\r\n  yield takeEvery(imgFieldsActionsAsync.addTheSameImg_async, addTheSameImg);\r\n}\r\n","import {\r\n  CreateMdDto,\r\n  MdFieldNotFoundById,\r\n  MdDto,\r\n  CreateMdResDto,\r\n  CreateMdFieldDto,\r\n  ScreenNotFoundById,\r\n  MdFieldAlreadyExistInScreen,\r\n  FlatMdFieldDto,\r\n  CreateMdFieldResDto,\r\n  DeleteMdFieldResDto,\r\n} from './../typings/index';\r\nimport { Either } from 'useful-monads';\r\nimport { dtoToEither } from '../dtoToEither';\r\nimport { api } from '../api';\r\n\r\nexport const markdownFieldService = {\r\n  addMarkdownValue: (\r\n    markdownField: CreateMdDto\r\n  ): Promise<Either<MdFieldNotFoundById, MdDto>> =>\r\n    api\r\n      .post(`md/value`, {\r\n        json: markdownField,\r\n      })\r\n      .json<CreateMdResDto>()\r\n      .then(dtoToEither),\r\n  addMarkdownField: (\r\n    markdownField: CreateMdFieldDto\r\n  ): Promise<\r\n    Either<ScreenNotFoundById | MdFieldAlreadyExistInScreen, FlatMdFieldDto>\r\n  > =>\r\n    api\r\n      .post(`md/field`, {\r\n        json: markdownField,\r\n      })\r\n      .json<CreateMdFieldResDto>()\r\n      .then(dtoToEither),\r\n  deleteMarkdownField: (\r\n    markdownFieldId: number\r\n  ): Promise<Either<MdFieldNotFoundById, { id?: number }>> =>\r\n    api\r\n      .delete(`md/field/${markdownFieldId}`)\r\n      .json<DeleteMdFieldResDto>()\r\n      .then(dtoToEither),\r\n};\r\n","import { markdownFieldService } from './../../apiWorker/servers/markdownService';\r\nimport {\r\n  markdowmAsyncActions,\r\n  markdownActions,\r\n} from './../../redux/slices/markdownFieldSlice';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport { Either } from 'useful-monads';\r\nimport { call, put, takeEvery } from 'redux-saga/effects';\r\nimport { MdFieldNotFoundById } from '../../apiWorker/typings';\r\n\r\nexport function* deleteMarkdown(\r\n  action: ReturnType<typeof markdowmAsyncActions.deleteMarkdown_async>\r\n) {\r\n  yield put(markdowmAsyncActions.deleteMarkdown_request(action.payload));\r\n  try {\r\n    const markdownFieldIdEither: Either<\r\n      MdFieldNotFoundById,\r\n      { id?: number }\r\n    > = yield call(markdownFieldService.deleteMarkdownField, action.payload);\r\n\r\n    const field = markdownFieldIdEither.extract();\r\n\r\n    if (field.right) {\r\n      yield put(markdownActions.deleteMarkdownField(action.payload));\r\n    } else {\r\n      yield put(markdowmAsyncActions.deleteMarkdown_error(action.payload));\r\n      NotificationManager.error(field.left.message);\r\n    }\r\n  } catch (error) {\r\n    yield put(markdowmAsyncActions.deleteMarkdown_error(action.payload));\r\n    if (error.response?.status ?? 0 > 499) {\r\n      NotificationManager.error(\r\n        'Неопознанная ошибка сервера, чип и дейл уже в пути'\r\n      );\r\n    } else {\r\n      NotificationManager.error(\r\n        'Что-то пошло не так, но мы обязательно разберемся'\r\n      );\r\n    }\r\n    console.error(error);\r\n  }\r\n}\r\nexport function* deleteMarkdownWatcher() {\r\n  yield takeEvery(markdowmAsyncActions.deleteMarkdown_async, deleteMarkdown);\r\n}\r\n","import { markdownFieldService } from './../../apiWorker/servers/markdownService';\r\nimport { RootSelector } from './../../redux/createStore';\r\nimport { Either } from 'useful-monads';\r\nimport { call, put, takeEvery, select } from 'redux-saga/effects';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport {\r\n  markdowmAsyncActions,\r\n  markdownActions,\r\n} from '../../redux/slices/markdownFieldSlice';\r\nimport { MdFieldNotFoundById, MdDto } from '../../apiWorker/typings';\r\n\r\nexport function* addMarkdownValue(\r\n  action: ReturnType<typeof markdowmAsyncActions.addMarkdownValue_async>\r\n) {\r\n  yield put(markdowmAsyncActions.addMarkdownValue_request(action.payload));\r\n\r\n  const text: string = yield select<RootSelector<string>>(\r\n    (state) =>\r\n      state.markdowmField.items.find((markdowmField) => {\r\n        return markdowmField.id === action.payload;\r\n      })?.addValueText ?? ''\r\n  );\r\n  try {\r\n    const valueEither: Either<MdFieldNotFoundById, MdDto> = yield call(\r\n      markdownFieldService.addMarkdownValue,\r\n      {\r\n        fieldId: action.payload,\r\n        value: text,\r\n      }\r\n    );\r\n    const field = valueEither.extract();\r\n    if (field.right) {\r\n      yield put(\r\n        markdownActions.addMarkdownValue({\r\n          id: action.payload,\r\n          value: field.right,\r\n        })\r\n      );\r\n    } else {\r\n      yield put(markdowmAsyncActions.addMarkdownValue_error(action.payload));\r\n      NotificationManager.error(field.left.message);\r\n    }\r\n  } catch (error) {\r\n    yield put(markdowmAsyncActions.addMarkdownValue_error(action.payload));\r\n    NotificationManager.error(\r\n      'Что-то пошло не так, но мы обязательно разберемся'\r\n    );\r\n  }\r\n}\r\nexport function* addMarkdownValueWatcher() {\r\n  yield takeEvery(\r\n    markdowmAsyncActions.addMarkdownValue_async,\r\n    addMarkdownValue\r\n  );\r\n}\r\n","import { markdownFieldService } from './../../apiWorker/servers/markdownService';\r\nimport { RootSelector } from './../../redux/createStore';\r\nimport { Either } from 'useful-monads';\r\nimport { call, put, takeEvery, select } from 'redux-saga/effects';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport {\r\n  markdowmAsyncActions,\r\n  markdownActions,\r\n} from '../../redux/slices/markdownFieldSlice';\r\nimport {\r\n  ScreenNotFoundById,\r\n  MdFieldAlreadyExistInScreen,\r\n  FlatMdFieldDto,\r\n} from '../../apiWorker/typings';\r\n\r\nexport function* addMarkdownField(\r\n  action: ReturnType<typeof markdowmAsyncActions.addMarkdownField_async>\r\n) {\r\n  yield put(markdowmAsyncActions.addMarkdownField_request(action.payload));\r\n\r\n  const name: string = yield select<RootSelector<string>>(\r\n    (state) => state.markdowmField.addMarkdownFieldName\r\n  );\r\n  const label: string = yield select<RootSelector<string>>(\r\n    (state) => state.markdowmField.addMarkdownFieldLabel\r\n  );\r\n\r\n  try {\r\n    const markdownFieldEither: Either<\r\n      ScreenNotFoundById | MdFieldAlreadyExistInScreen,\r\n      FlatMdFieldDto\r\n    > = yield call(markdownFieldService.addMarkdownField, {\r\n      label,\r\n      name,\r\n      screenId: action.payload,\r\n    });\r\n\r\n    const field = markdownFieldEither.extract();\r\n\r\n    if (field.right) {\r\n      yield put(\r\n        markdownActions.addMarkdownField({\r\n          markdownField: {\r\n            ...field.right,\r\n            isLoading: false,\r\n            values: [],\r\n          },\r\n          screenId: action.payload,\r\n        })\r\n      );\r\n    } else {\r\n      yield put(markdowmAsyncActions.addMarkdownField_error(action.payload));\r\n      NotificationManager.error(field.left.message);\r\n    }\r\n  } catch (error) {\r\n    yield put(markdowmAsyncActions.addMarkdownField_error(action.payload));\r\n    NotificationManager.error(\r\n      'Что-то пошло не так, но мы обязательно разберемся'\r\n    );\r\n  }\r\n}\r\nexport function* addMarkdownFieldWatcher() {\r\n  yield takeEvery(\r\n    markdowmAsyncActions.addMarkdownField_async,\r\n    addMarkdownField\r\n  );\r\n}\r\n","import { screensActions } from './../../redux/slices/screensSlice';\r\nimport { RootSelector } from './../../redux/createStore';\r\nimport { Either } from 'useful-monads';\r\nimport {\r\n  ScreenNotFoundById,\r\n  FlatScreenDto,\r\n} from '../../apiWorker/typings/index';\r\nimport { screenServer } from '../../apiWorker/servers/screenService';\r\nimport { call, put, takeEvery, select } from 'redux-saga/effects';\r\nimport { asyncScreenActions } from '../../redux/slices/screensSlice';\r\nimport { NotificationManager } from 'react-notifications';\r\nexport function* renameScreen(\r\n  action: ReturnType<typeof asyncScreenActions.renameScreen_async>\r\n) {\r\n  yield put(asyncScreenActions.renameScreen_request(action.payload));\r\n  const name = yield select<RootSelector<string>>(\r\n    (state) =>\r\n      state.screens.screensList.find((screen) => screen.id === action.payload)\r\n        ?.renameScreenName ?? ''\r\n  );\r\n\r\n  try {\r\n    const screenEither: Either<ScreenNotFoundById, FlatScreenDto> = yield call(\r\n      screenServer.renameScreen,\r\n      action.payload,\r\n      name\r\n    );\r\n    const screen = screenEither.extract();\r\n    if (screen.right) {\r\n      yield put(\r\n        screensActions.renameScreen({\r\n          ...screen.right,\r\n          isLoading: false,\r\n        })\r\n      );\r\n    } else {\r\n      NotificationManager.error(screen.left.message);\r\n      yield put(asyncScreenActions.renameScreen_error(action.payload));\r\n    }\r\n  } catch (error) {\r\n    yield put(asyncScreenActions.renameScreen_error(action.payload));\r\n    NotificationManager.error(\r\n      'Что-то пошло не так, но мы обящательно разберемся'\r\n    );\r\n  }\r\n}\r\n\r\nexport function* renameScreenWatcher() {\r\n  yield takeEvery(asyncScreenActions.renameScreen_async, renameScreen);\r\n}\r\n","import { screensActions } from '../../redux/slices/screensSlice';\r\nimport { Either } from 'useful-monads';\r\nimport { screenServer } from '../../apiWorker/servers/screenService';\r\nimport { call, put, takeEvery } from 'redux-saga/effects';\r\nimport { asyncScreenActions } from '../../redux/slices/screensSlice';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport { FlatScreenDto } from '../../apiWorker/typings';\r\nexport function* deleteScreen(\r\n  action: ReturnType<typeof asyncScreenActions.deleteScreen_async>\r\n) {\r\n  yield put(asyncScreenActions.deleteScreen_request(action.payload));\r\n\r\n  try {\r\n    const screenEither = yield call(screenServer.deleteScreen, action.payload);\r\n\r\n    const screen = screenEither.extract();\r\n    if (screen.right) {\r\n      const screens: FlatScreenDto[] = yield call(screenServer.getScreens);\r\n      yield put(\r\n        screensActions.getAllScreens({\r\n          screens: screens.map((screen) => ({\r\n            ...screen,\r\n            isLoading: false,\r\n          })),\r\n        })\r\n      );\r\n    } else {\r\n      NotificationManager.error(screen.left.message);\r\n      yield put(asyncScreenActions.deleteScreen_error(action.payload));\r\n    }\r\n  } catch (error) {\r\n    yield put(asyncScreenActions.deleteScreen_error(action.payload));\r\n    NotificationManager.error(\r\n      'Что-то пошло не так, но мы обящательно разберемся'\r\n    );\r\n  }\r\n}\r\n\r\nexport function* deleteScreenWatcher() {\r\n  yield takeEvery(asyncScreenActions.deleteScreen_async, deleteScreen);\r\n}\r\n","import { Either } from 'useful-monads';\r\nimport { api } from '../api';\r\nimport { dtoToEither } from '../dtoToEither';\r\nimport {\r\n  FlatDrawDto,\r\n  FindAllDrawResDto,\r\n  CreateDrawDto,\r\n  DatesAreTaken,\r\n  EndEarlierThanStart,\r\n  DateNotValid,\r\n  CreateDrawResDto,\r\n  DrawNotFoundById,\r\n  FullDrawDto,\r\n  FindFullDrawResDto,\r\n  DeleteDrawResDto,\r\n  ChangeDrawDto,\r\n  ChangeDrawResDto,\r\n  NotDrawNow,\r\n  FindNowDrawResDto,\r\n  CreateDrawNextDto,\r\n} from '../typings';\r\n\r\nexport const drawServer = {\r\n  getAllDraw: (): Promise<FlatDrawDto[] | undefined> =>\r\n    api\r\n      .get(`draw`)\r\n      .json<FindAllDrawResDto>()\r\n      .then((r) => r.payload),\r\n  getDraw: (id: number): Promise<Either<DrawNotFoundById, FullDrawDto>> =>\r\n    api.get(`draw/${id}`).json<FindFullDrawResDto>().then(dtoToEither),\r\n  createNextDraw: (\r\n    createDraw: CreateDrawNextDto\r\n  ): Promise<\r\n    Either<DatesAreTaken | EndEarlierThanStart | DateNotValid, FlatDrawDto>\r\n  > =>\r\n    api\r\n      .post(`draw/next`, {\r\n        json: createDraw,\r\n      })\r\n      .json<CreateDrawResDto>()\r\n      .then(dtoToEither),\r\n  getNowDraw: (): Promise<Either<NotDrawNow, FlatDrawDto>> =>\r\n    api.get(`draw/now`).json<FindNowDrawResDto>().then(dtoToEither),\r\n  updateDraw: (\r\n    ChangeDraw: ChangeDrawDto,\r\n    id: number\r\n  ): Promise<Either<DrawNotFoundById, FlatDrawDto>> =>\r\n    api\r\n      .put(`draw/${id}`, {\r\n        json: ChangeDraw,\r\n      })\r\n      .json<ChangeDrawResDto>()\r\n      .then(dtoToEither),\r\n  deleteDraw: (\r\n    id: number\r\n  ): Promise<Either<DrawNotFoundById, { id?: number }>> =>\r\n    api.delete(`draw/${id}`).json<DeleteDrawResDto>().then(dtoToEither),\r\n  addDraw: (\r\n    createDraw: CreateDrawDto\r\n  ): Promise<\r\n    Either<DatesAreTaken | EndEarlierThanStart | DateNotValid, FlatDrawDto>\r\n  > =>\r\n    api\r\n      .post(`draw`, {\r\n        json: createDraw,\r\n      })\r\n      .json<CreateDrawResDto>()\r\n      .then(dtoToEither),\r\n};\r\n","import { drawListActions } from './../../redux/slices/draw/drawListSlice';\r\nimport { drawIsLoadingActions } from './../../redux/slices/draw/drawIsLoadingSlice';\r\nimport { drawServer } from './../../apiWorker/servers/drawSevice';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport { Either } from 'useful-monads';\r\nimport { call, put, takeEvery } from 'redux-saga/effects';\r\nimport { parse, formatISO } from 'date-fns';\r\nimport {\r\n  DatesAreTaken,\r\n  EndEarlierThanStart,\r\n  DateNotValid,\r\n  FlatDrawDto,\r\n} from '../../apiWorker/typings';\r\n\r\nexport function* addDraw(action: ReturnType<typeof drawListActions.add>) {\r\n  yield put(drawIsLoadingActions.true());\r\n  try {\r\n    const startDate = parse(\r\n      action.payload.values.start,\r\n      'yyyy-MM-dd',\r\n      new Date()\r\n    );\r\n    const startDateISO = formatISO(startDate);\r\n\r\n    const endDate = parse(action.payload.values.end, 'yyyy-MM-dd', new Date());\r\n    const endDateISO = formatISO(endDate);\r\n\r\n    const addDrawEither: Either<\r\n      DatesAreTaken | EndEarlierThanStart | DateNotValid,\r\n      FlatDrawDto\r\n    > = yield call(drawServer.addDraw, {\r\n      ...action.payload.values,\r\n      qrLimit: +action.payload.values.qrLimit,\r\n      sLimit: +action.payload.values.sLimit,\r\n      qrLimitPeriodMS: +action.payload.values.qrLimitPeriodMS * 3600 * 1000,\r\n      start: startDateISO,\r\n      end: endDateISO,\r\n    });\r\n    const addDraw = addDrawEither.extract();\r\n\r\n    if (addDraw.right) {\r\n      action.payload.action.resetForm();\r\n      yield put(drawListActions.addSuccessful());\r\n      yield put(drawListActions.getAll());\r\n    } else {\r\n      if (addDraw.left.name === 'DateNotValid') {\r\n        NotificationManager.error('Неверный формат даты');\r\n      }\r\n      if (addDraw.left.name === 'EndEarlierThanStart') {\r\n        NotificationManager.error(\r\n          'Дата конца розыгрыша не должна быть раньше даты начала розыгрыша '\r\n        );\r\n        action.payload.action.setErrors({\r\n          end: 'Дата не должны быть раньше начала розыгрыша',\r\n        });\r\n      }\r\n      if (addDraw.left.name === 'DatesAreTaken') {\r\n        const end = addDraw.left.param.endTaken;\r\n        const endError = `до ${(end\r\n          ? new Date(end)\r\n          : new Date()\r\n        ).toLocaleDateString('ru')}`;\r\n        const start = addDraw.left.param.startTaken;\r\n        const startError = `Даты заняты с ${(start\r\n          ? new Date(start)\r\n          : new Date()\r\n        ).toLocaleDateString('ru')}`;\r\n\r\n        action.payload.action.setErrors({\r\n          end: endError,\r\n          start: startError,\r\n        });\r\n        NotificationManager.error('Неверные даты начала или конца розыгрыша');\r\n      }\r\n      yield put(drawIsLoadingActions.false());\r\n    }\r\n  } catch (error) {\r\n    yield put(drawIsLoadingActions.false());\r\n\r\n    if ((error.response?.status ?? 0) > 499) {\r\n      NotificationManager.error(\r\n        'Неопознанная ошибка сервера, чип и дейл уже в пути'\r\n      );\r\n    }\r\n    console.error(error);\r\n  }\r\n}\r\nexport function* addDrawWather() {\r\n  yield takeEvery(drawListActions.add, addDraw);\r\n}\r\n","import { drawServer } from './../../apiWorker/servers/drawSevice';\r\nimport { drawIsLoadingActions } from './../../redux/slices/draw/drawIsLoadingSlice';\r\nimport { drawListActions } from './../../redux/slices/draw/drawListSlice';\r\nimport { call, put, takeEvery } from 'redux-saga/effects';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport { FlatDrawDto } from '../../apiWorker/typings';\r\nimport { drawNowActions } from '../../redux/slices/draw/drawNow';\r\n\r\nexport function* getAllDraw() {\r\n  yield put(drawIsLoadingActions.true());\r\n  try {\r\n    const draws: FlatDrawDto[] = yield call(drawServer.getAllDraw);\r\n    yield put(drawListActions.getAllSuccessful(draws));\r\n    yield put(drawNowActions.get());\r\n  } catch (error) {\r\n    yield put(drawIsLoadingActions.false());\r\n    NotificationManager.error('Упс, кто-то сломался, но жить будем');\r\n  }\r\n}\r\n\r\nexport function* getAllDrawWatcher() {\r\n  yield takeEvery(drawListActions.getAll, getAllDraw);\r\n}\r\n","import { drawNowActions } from './../../redux/slices/draw/drawNow';\r\nimport { drawServer } from './../../apiWorker/servers/drawSevice';\r\nimport { drawIsLoadingActions } from './../../redux/slices/draw/drawIsLoadingSlice';\r\nimport { call, put, takeEvery } from 'redux-saga/effects';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport { FlatDrawDto, NotDrawNow } from '../../apiWorker/typings';\r\nimport { Either } from 'useful-monads';\r\n\r\nexport function* getNowDraw() {\r\n  yield put(drawIsLoadingActions.true());\r\n  try {\r\n    const drawNowEither: Either<NotDrawNow, FlatDrawDto> = yield call(\r\n      drawServer.getNowDraw\r\n    );\r\n\r\n    const drawNow = drawNowEither.extract();\r\n\r\n    if (drawNow.right) {\r\n      yield put(drawNowActions.getSuccessful(drawNow.right));\r\n      yield put(drawIsLoadingActions.false());\r\n    } else {\r\n      NotificationManager.error(drawNow.left.message);\r\n      yield put(drawIsLoadingActions.false());\r\n    }\r\n  } catch (error) {\r\n    yield put(drawIsLoadingActions.false());\r\n    NotificationManager.error('Упс, кто-то сломался, но жить будем');\r\n  }\r\n}\r\n\r\nexport function* getNowDrawWatcher() {\r\n  yield takeEvery(drawNowActions.get, getNowDraw);\r\n}\r\n","import { drawServer } from './../../apiWorker/servers/drawSevice';\r\nimport { drawListActions } from '../../redux/slices/draw/drawListSlice';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport { Either } from 'useful-monads';\r\nimport { call, put, takeEvery } from 'redux-saga/effects';\r\nimport { DrawNotFoundById } from '../../apiWorker/typings';\r\n\r\nexport function* deleteDraw(action: ReturnType<typeof drawListActions.delete>) {\r\n  yield put(drawListActions.isLoadingDraw(action.payload));\r\n  try {\r\n    const deleteDrawEither: Either<\r\n      DrawNotFoundById,\r\n      { id?: number }\r\n    > = yield call(drawServer.deleteDraw, action.payload);\r\n    const deleteDraw = deleteDrawEither.extract();\r\n\r\n    if (deleteDraw.right) {\r\n      yield put(drawListActions.getAll());\r\n    } else {\r\n      yield put(drawListActions.isNoLoadingDraw(action.payload));\r\n      NotificationManager.error(deleteDraw.left.message);\r\n    }\r\n  } catch (error) {\r\n    yield put(drawListActions.isNoLoadingDraw(action.payload));\r\n\r\n    if ((error.response?.status ?? 0) > 499) {\r\n      NotificationManager.error(\r\n        'Неопознанная ошибка сервера, чип и дейл уже в пути'\r\n      );\r\n    }\r\n    console.error(error);\r\n  }\r\n}\r\nexport function* deleteDrawWather() {\r\n  yield takeEvery(drawListActions.delete, deleteDraw);\r\n}\r\n","import { RootState } from './../../createStore';\r\nimport { createSelector } from '@reduxjs/toolkit';\r\nimport { drawType } from './drawListSlice';\r\nexport const drawsIsLoadingSelector = (state: RootState) =>\r\n  state.draws.isLoading;\r\nexport const drawsSelector = (state: RootState) => state.draws.items;\r\nexport const drawNowSelector = (state: RootState) => state.draws.now;\r\nexport const updateDrawIdSelector = (state: RootState) => state.draws.updateId;\r\n\r\nexport const drawsListSelector = createSelector(drawsSelector, (items) =>\r\n  items.ids.reduce((acc: drawType[], id) => {\r\n    const draw = items.entities[id];\r\n    if (draw !== undefined) {\r\n      acc.push(draw);\r\n    }\r\n    return acc;\r\n  }, [])\r\n);\r\n\r\nexport const drawNowEndSelector = createSelector(\r\n  drawNowSelector,\r\n  (now) => now?.end ?? ''\r\n);\r\n\r\nexport const allDrawIsLoadingSelector = createSelector(\r\n  drawsIsLoadingSelector,\r\n  (isLoading) => isLoading\r\n);\r\n\r\nexport const drawIsLoadingFactory = (id: number) =>\r\n  createSelector(\r\n    drawsSelector,\r\n    (items) => items.entities[id]?.isLoading ?? false\r\n  );\r\n","import { drawServer } from '../../apiWorker/servers/drawSevice';\r\nimport { drawListActions } from '../../redux/slices/draw/drawListSlice';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport { Either } from 'useful-monads';\r\nimport { call, put, takeEvery, select } from 'redux-saga/effects';\r\nimport { DrawNotFoundById, FlatDrawDto } from '../../apiWorker/typings';\r\nimport { updateDrawIdSelector } from '../../redux/slices/draw/drawSelectors';\r\n\r\nexport function* updateDraw(action: ReturnType<typeof drawListActions.update>) {\r\n  const id = yield select(updateDrawIdSelector);\r\n  const { qrLimit, sLimit, qrLimitPeriodMS } = action.payload.values;\r\n  yield put(drawListActions.isLoadingDraw(id));\r\n\r\n  try {\r\n    const updateDrawEither: Either<DrawNotFoundById, FlatDrawDto> = yield call(\r\n      drawServer.updateDraw,\r\n      {\r\n        qrLimit: +qrLimit,\r\n        sLimit: +sLimit,\r\n        qrLimitPeriodMS: +qrLimitPeriodMS * 3600 * 1000,\r\n      },\r\n      id\r\n    );\r\n    const updateDraw = updateDrawEither.extract();\r\n    if (updateDraw.right) {\r\n      yield put(drawListActions.updateSuccessful());\r\n      action.payload.action.resetForm();\r\n      yield put(drawListActions.getAll());\r\n      yield put(drawListActions.isNoLoadingDraw(id));\r\n    } else {\r\n      yield put(drawListActions.isNoLoadingDraw(id));\r\n      NotificationManager.error(updateDraw.left.message);\r\n    }\r\n  } catch (error) {\r\n    yield put(drawListActions.isNoLoadingDraw(id));\r\n\r\n    if ((error.response?.status ?? 0) > 499) {\r\n      NotificationManager.error(\r\n        'Неопознанная ошибка сервера, чип и дейл уже в пути'\r\n      );\r\n    }\r\n    console.error(error);\r\n  }\r\n}\r\nexport function* updateDrawWather() {\r\n  yield takeEvery(drawListActions.update, updateDraw);\r\n}\r\n","import { drawIsLoadingActions } from './../../redux/slices/draw/drawIsLoadingSlice';\r\nimport { drawServer } from '../../apiWorker/servers/drawSevice';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport { Either } from 'useful-monads';\r\nimport { call, put, takeEvery } from 'redux-saga/effects';\r\nimport {\r\n  FlatDrawDto,\r\n  DatesAreTaken,\r\n  EndEarlierThanStart,\r\n  DateNotValid,\r\n} from '../../apiWorker/typings';\r\nimport { nextDrawActions } from '../../redux/slices/draw/nextDrawSlice';\r\nimport { parse, formatISO } from 'date-fns';\r\nimport { drawListActions } from '../../redux/slices/draw/drawListSlice';\r\n\r\nexport function* nextDraw(action: ReturnType<typeof nextDrawActions.nextDraw>) {\r\n  const { qrLimit, sLimit, qrLimitPeriodMS } = action.payload.values;\r\n\r\n  const endDate = parse(action.payload.values.end, 'yyyy-MM-dd', new Date());\r\n  const endDateISO = formatISO(endDate);\r\n\r\n  yield put(drawIsLoadingActions.true());\r\n\r\n  try {\r\n    const nextDrawEither: Either<\r\n      DatesAreTaken | EndEarlierThanStart | DateNotValid,\r\n      FlatDrawDto\r\n    > = yield call(drawServer.createNextDraw, {\r\n      description: action.payload.values.description,\r\n      end: endDateISO,\r\n      qrLimit: +qrLimit,\r\n      sLimit: +sLimit,\r\n      qrLimitPeriodMS: +qrLimitPeriodMS * 3600 * 1000,\r\n    });\r\n\r\n    const nextDraw = nextDrawEither.extract();\r\n    if (nextDraw.right) {\r\n      yield put(nextDrawActions.nextDraw_successful());\r\n      action.payload.action.resetForm();\r\n      yield put(drawListActions.getAll());\r\n    } else {\r\n      yield put(drawIsLoadingActions.false());\r\n      NotificationManager.error(nextDraw.left.message);\r\n    }\r\n  } catch (error) {\r\n    yield put(drawIsLoadingActions.false());\r\n\r\n    if ((error.response?.status ?? 0) > 499) {\r\n      NotificationManager.error(\r\n        'Неопознанная ошибка сервера, чип и дейл уже в пути'\r\n      );\r\n    }\r\n    console.error(error);\r\n  }\r\n}\r\nexport function* nextDrawWather() {\r\n  yield takeEvery(nextDrawActions.nextDraw, nextDraw);\r\n}\r\n","import { all } from 'redux-saga/effects';\r\nimport { counterListener } from './counter/counter-listener';\r\nimport { authFlow } from './auth/authFlow';\r\nimport { addScreenWatcher } from './screens/addScreen';\r\nimport { getScreenWatcher } from './screens/getScreen';\r\nimport { addValueWatcher } from './textFields/addTextValue';\r\nimport { deleteTextFieldWatcher } from './textFields/deleteTextField';\r\nimport { addTextFieldWatcher } from './textFields/addTextField';\r\nimport { deleteImgFieldWatcher } from './imgFields/deleteImgField';\r\nimport { addImgFieldWatcher } from './imgFields/addImgField';\r\nimport { getAllCheckout } from './checkouts/getAllCheckout';\r\nimport { deleteCheckoutWatcher } from './checkouts/deleteCheckout';\r\nimport { addCheckout } from './checkouts/addCheckout';\r\nimport { addImgWatcher } from './imgFields/addImg';\r\nimport { addTheSameImgWatcher } from './imgFields/addTheSameImg';\r\nimport { deleteMarkdownWatcher } from './markdownField/deleteMarkdown';\r\nimport { addMarkdownValueWatcher } from './markdownField/addMarkdownValue';\r\nimport { addMarkdownFieldWatcher } from './markdownField/addMarkdownField';\r\nimport { renameScreenWatcher } from './screens/renameScreen';\r\nimport { deleteScreenWatcher } from './screens/deleteScreen';\r\nimport { addDrawWather } from './draw/addDraw';\r\nimport { getAllDrawWatcher } from './draw/getAllDraw';\r\nimport { getNowDrawWatcher } from './draw/getNowDraw';\r\nimport { deleteDrawWather } from './draw/deleteDraw';\r\nimport { updateDrawWather } from './draw/updateDraw';\r\nimport { nextDrawWather } from './draw/nextDraw';\r\nexport function* mainSaga() {\r\n  yield all([\r\n    counterListener(),\r\n    authFlow(),\r\n    getScreenWatcher(),\r\n    addValueWatcher(),\r\n    deleteTextFieldWatcher(),\r\n    deleteImgFieldWatcher(),\r\n    addImgFieldWatcher(),\r\n    addTextFieldWatcher(),\r\n    getAllCheckout(),\r\n    deleteCheckoutWatcher(),\r\n    addCheckout(),\r\n    addImgWatcher(),\r\n    addTheSameImgWatcher(),\r\n    deleteMarkdownWatcher(),\r\n    addMarkdownValueWatcher(),\r\n    addMarkdownFieldWatcher(),\r\n    renameScreenWatcher(),\r\n    addScreenWatcher(),\r\n    deleteScreenWatcher(),\r\n    addDrawWather(),\r\n    getAllDrawWatcher(),\r\n    getNowDrawWatcher(),\r\n    deleteDrawWather(),\r\n    updateDrawWather(),\r\n    nextDrawWather(),\r\n  ]);\r\n}\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport { state } from './state';\r\nimport { mainSaga } from '../sagas/mainSaga';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { Selector } from '@reduxjs/toolkit';\r\nconst sagaMiddleware = createSagaMiddleware();\r\nexport const store = configureStore({\r\n  reducer: state,\r\n  middleware: [\r\n    sagaMiddleware,\r\n    ...getDefaultMiddleware({\r\n      serializableCheck: false,\r\n    }),\r\n  ],\r\n});\r\nsagaMiddleware.run(mainSaga);\r\n\r\nexport type RootState = ReturnType<typeof state>;\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type RootSelector<T> = Selector<RootState, T>;\r\nexport const getState = store.getState;\r\n","import { useDispatch } from 'react-redux';\r\nimport { AppDispatch } from '../redux/createStore';\r\n\r\nexport function useAction<T extends (...args: any) => any>(actionCreator: T) {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  return (...args: Parameters<T>) => dispatch(actionCreator(...args));\r\n}\r\n\r\ntype type = {\r\n  [T in 'hello']: string;\r\n};\r\n","import { LinksList } from './Nav';\r\nimport { CallBackHook } from '../../hooks/types';\r\nimport React from 'react';\r\nimport { ListItem, ListItemIcon, ListItemText } from '@material-ui/core';\r\nimport { Link } from 'react-router-dom';\r\nimport { createFipc } from 'react-fipc';\r\nimport { useAction } from '../../hooks/use-action';\r\nimport { viewActions } from '../../redux/slices/viewSlice';\r\n\r\ntype ArrayItem<T> = T extends Array<infer U> ? U : T;\r\ninterface NavItemProps extends ArrayItem<LinksList> {\r\n  useOnClick: CallBackHook;\r\n}\r\nconst NavItemComponent: React.FC<NavItemProps> = ({\r\n  path,\r\n  icon,\r\n  name,\r\n  useOnClick,\r\n}) => {\r\n  const handleClose = useOnClick();\r\n  return (\r\n    <ListItem\r\n      onClick={handleClose}\r\n      button\r\n      component={Link}\r\n      to={path}\r\n      key={path}\r\n    >\r\n      {icon && <ListItemIcon>{icon}</ListItemIcon>}\r\n      <ListItemText primary={name} />\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport const NavItem = createFipc(NavItemComponent)({\r\n  useOnClick: () => {\r\n    const handleClose = useAction(viewActions.closeMenu);\r\n    return () => handleClose();\r\n  },\r\n});\r\n","import { viewActions } from '../../redux/slices/viewSlice';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../redux/createStore';\r\nimport { Nav } from './Nav';\r\nimport { createFipc } from 'react-fipc';\r\nimport { useAction } from '../../hooks/use-action';\r\nexport const Nav$ = createFipc(Nav)({\r\n  $carry: true,\r\n  useIsOpenMenu: () =>\r\n    useSelector<RootState, boolean>((state) => state.view.isMenuOpen),\r\n  useCloseHandler: () => {\r\n    const handlerClose = useAction(viewActions.closeMenu);\r\n    return () => handlerClose();\r\n  },\r\n});\r\n","import React, { ReactNode } from 'react';\r\nimport './Nav.scss';\r\nimport { Divider, Drawer, List, Button } from '@material-ui/core';\r\nimport { CallBackHook, Hook } from '../../hooks/types';\r\nimport { NavItem } from './NavItem';\r\nimport { viewActions } from '../../redux/slices/viewSlice';\r\nimport { useAction } from '../../hooks/use-action';\r\n\r\nexport interface NavHooks {\r\n  useCloseHandler: CallBackHook;\r\n  useIsOpenMenu: Hook<boolean>;\r\n}\r\nexport interface NavProps extends NavHooks {\r\n  className?: string;\r\n  mainLinks: LinksList;\r\n  screenLinks: LinksList;\r\n}\r\nexport type LinksList = {\r\n  path: string;\r\n  name: string;\r\n  icon?: ReactNode;\r\n}[];\r\n\r\nexport const Nav: React.FC<NavProps> = ({\r\n  className,\r\n  useCloseHandler,\r\n  useIsOpenMenu,\r\n  mainLinks,\r\n  screenLinks,\r\n}) => {\r\n  const isOpen = useIsOpenMenu();\r\n  const closeHandler = useCloseHandler();\r\n  const openAddScreenModal = useAction(viewActions.openAddScreenModal);\r\n  return (\r\n    <Drawer anchor={'left'} open={isOpen} onClose={closeHandler}>\r\n      <List>\r\n        {mainLinks.map(({ path, name, icon }) => (\r\n          <NavItem path={path} name={name} icon={icon} key={path} />\r\n        ))}\r\n      </List>\r\n      <Divider />\r\n      <List>\r\n        {screenLinks.map(({ name, path }) => (\r\n          <NavItem path={path} name={name} key={path} />\r\n        ))}\r\n      </List>\r\n      <Button onClick={() => openAddScreenModal()} color=\"primary\">\r\n        Создать экран\r\n      </Button>\r\n      <Divider />\r\n    </Drawer>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport { CircularProgress } from '@material-ui/core';\r\nimport { createFipc } from 'react-fipc';\r\nimport './Loader.scss';\r\nexport interface LoaderProps {\r\n  isLoading: boolean;\r\n}\r\n\r\nexport const Loader: React.FC<LoaderProps> = ({ isLoading }) => {\r\n  if (!isLoading) return null;\r\n  return (\r\n    <div className=\"loader-wrapper\">\r\n      <CircularProgress />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Loader$ = createFipc(Loader);\r\n","import { Auth$ } from './Auth';\r\nimport { ChangeEventHandler, FormEvent, useCallback } from 'react';\r\nimport { useAction } from '../../hooks/use-action';\r\nimport { authActions } from '../../redux/slices/authSlice';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../redux/createStore';\r\n\r\nexport const Auth = Auth$({\r\n  useSubmitHandler: () => {\r\n    const loginAction = useAction(authActions.loginRequest);\r\n    const handleSubmit = (e: FormEvent<HTMLFormElement>) => {\r\n      e.preventDefault();\r\n\r\n      loginAction();\r\n    };\r\n    return handleSubmit;\r\n  },\r\n  usePhoneInput: () => {\r\n    const phone = useSelector<RootState, string>((state) => state.auth.phone);\r\n    const handleSetPhone = useAction(authActions.setPhone);\r\n    const handleChange: ChangeEventHandler<HTMLInputElement> = useCallback(\r\n      (e) => {\r\n        handleSetPhone(e.target.value);\r\n      },\r\n      [handleSetPhone]\r\n    );\r\n    return [phone, handleChange];\r\n  },\r\n  usePasswordInput: () => {\r\n    const password = useSelector<RootState, string>(\r\n      (state) => state.auth.password\r\n    );\r\n    const handleSetPassword = useAction(authActions.setPassword);\r\n    const handleChange: ChangeEventHandler<HTMLInputElement> = useCallback(\r\n      (e) => {\r\n        handleSetPassword(e.target.value);\r\n      },\r\n      [handleSetPassword]\r\n    );\r\n    return [password, handleChange];\r\n  },\r\n  useIsLoading: () => {\r\n    return useSelector<RootState, boolean>((state) => state.auth.isLoading);\r\n  },\r\n});\r\n","import React, { ChangeEvent, FormEvent } from 'react';\r\nimport cn from 'classnames';\r\nimport {\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Grid,\r\n  TextField,\r\n} from '@material-ui/core';\r\nimport './Auth.scss';\r\nimport { CallBackHook, Hook } from '../../hooks/types';\r\nimport { createFipc } from 'react-fipc';\r\nimport { Loader } from '../Loader/Loader';\r\n\r\nexport type AuthHooks = {\r\n  usePasswordInput: Hook<[string, (e: ChangeEvent<HTMLInputElement>) => void]>;\r\n  usePhoneInput: Hook<[string, (e: ChangeEvent<HTMLInputElement>) => void]>;\r\n  useSubmitHandler: CallBackHook<[FormEvent<HTMLFormElement>]>;\r\n  useIsLoading: Hook<boolean>;\r\n};\r\nexport interface AuthProps extends AuthHooks {\r\n  className?: string;\r\n}\r\n\r\nexport const AuthComponent: React.FC<AuthProps> = ({\r\n  usePasswordInput,\r\n  usePhoneInput,\r\n  useSubmitHandler,\r\n  useIsLoading,\r\n  children,\r\n  className,\r\n}) => {\r\n  const [phone, handlePhoneChange] = usePhoneInput();\r\n  const [password, handlePasswordChange] = usePasswordInput();\r\n  const submitHandler = useSubmitHandler();\r\n  const blockClassName = cn(className, 'Auth');\r\n  const isLoading = useIsLoading();\r\n  return (\r\n    <div className={blockClassName}>\r\n      <Grid\r\n        className=\"Auth__inner\"\r\n        container\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Loader isLoading={isLoading} />\r\n        <Card className=\"Auth__card\">\r\n          <CardHeader title={'Войти'} />\r\n          <CardContent>\r\n            <form onSubmit={submitHandler} autoComplete={'on'}>\r\n              <Grid container spacing={2} direction={'column'}>\r\n                <Grid item>\r\n                  <TextField\r\n                    autoComplete={'on'}\r\n                    type={'tel'}\r\n                    value={phone}\r\n                    onChange={handlePhoneChange}\r\n                    fullWidth\r\n                    variant={'outlined'}\r\n                    label={'Телефон'}\r\n                    required\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <TextField\r\n                    required\r\n                    autoComplete={'on'}\r\n                    type={'password'}\r\n                    value={password}\r\n                    onChange={handlePasswordChange}\r\n                    fullWidth\r\n                    variant={'outlined'}\r\n                    label={'Пароль'}\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  <Button\r\n                    type={'submit'}\r\n                    fullWidth\r\n                    color={'primary'}\r\n                    size={'large'}\r\n                    variant={'contained'}\r\n                  >\r\n                    Войти\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </form>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const Auth$ = createFipc(AuthComponent);\r\n","import React from 'react';\r\nimport cn from 'classnames';\r\nimport { AppBar, Toolbar, Typography, IconButton } from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport './Header.scss';\r\nimport { CallBackHook } from '../../hooks/types';\r\nimport { createFipc } from 'react-fipc';\r\nimport { useAction } from '../../hooks/use-action';\r\nimport { viewActions } from '../../redux/slices/viewSlice';\r\n\r\nexport interface HeaderHooks {\r\n  useOpenMenu: CallBackHook;\r\n}\r\nexport interface HeaderProps extends HeaderHooks {\r\n  className?: string;\r\n}\r\n\r\nexport const HeaderComponent: React.FC<HeaderProps> = ({\r\n  children,\r\n  className,\r\n  useOpenMenu,\r\n}) => {\r\n  const blockClassName = cn(className, 'Header');\r\n  const openHandler = useOpenMenu();\r\n  return (\r\n    <AppBar position=\"static\" className={blockClassName}>\r\n      <Toolbar>\r\n        <IconButton\r\n          edge=\"start\"\r\n          className=\"Header__icon-button\"\r\n          color=\"inherit\"\r\n          aria-label=\"menu\"\r\n          onClick={openHandler}\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Typography variant=\"h6\" className=\"Header__text\">\r\n          {children}\r\n        </Typography>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport const Header = createFipc(HeaderComponent)({\r\n  useOpenMenu: () => {\r\n    const handleOpen = useAction(viewActions.openMenu);\r\n    return () => handleOpen();\r\n  },\r\n});\r\n","import { asyncScreenActions } from '../../redux/slices/screensSlice';\r\nimport { AddScreenModal$ } from './AddScreenModalComponent';\r\nimport { useAction } from '../../hooks/use-action';\r\nimport { viewActions } from '../../redux/slices/viewSlice';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../redux/createStore';\r\nimport { useCallback } from 'react';\r\nimport { screensActions } from '../../redux/slices/screensSlice';\r\n\r\nexport type useAddScreenModalProps = () => {\r\n  closeAddScreenModal: () => void;\r\n  AddScreenModalState: boolean;\r\n  addScreenName: string;\r\n  addScreenFormInputHandler: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  addScreenFormHandler: (e: React.FormEvent<HTMLFormElement>) => void;\r\n};\r\n\r\nexport const AddScreenModal = AddScreenModal$({\r\n  useAddScreenModalProps: () => {\r\n    const closeAddScreenModal = useAction(viewActions.closeAddScreenModal);\r\n\r\n    const AddScreenModalState = useSelector<RootState, boolean>(\r\n      (state) => state.view.AddScreenModal\r\n    );\r\n    const addScreenName = useSelector<RootState, string>(\r\n      (state) => state.screens.addScreenName\r\n    );\r\n\r\n    const setAddScreenName = useAction(screensActions.setAddScreenName);\r\n    const addScreenFormInputHandler = useCallback((e) => {\r\n      const name = e.target.name;\r\n      const value = e.target.value;\r\n      switch (name) {\r\n        case 'name':\r\n          setAddScreenName(value);\r\n          break;\r\n      }\r\n    }, []);\r\n    const addScreen_async = useAction(asyncScreenActions.addScreen_async);\r\n    const addScreenFormHandler = useCallback(\r\n      (e) => {\r\n        e.preventDefault();\r\n        addScreen_async();\r\n      },\r\n      [addScreen_async]\r\n    );\r\n    return {\r\n      closeAddScreenModal,\r\n      AddScreenModalState,\r\n      addScreenName,\r\n      addScreenFormInputHandler,\r\n      addScreenFormHandler,\r\n    };\r\n  },\r\n});\r\n","import {\r\n  Modal,\r\n  Grid,\r\n  Card,\r\n  CardHeader,\r\n  IconButton,\r\n  CardContent,\r\n  TextField,\r\n  Button,\r\n} from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport React from 'react';\r\nimport { useAddScreenModalProps } from './AddScreenModal.fipc';\r\nimport { createFipc } from 'react-fipc';\r\ntype AddScreenModalComponentProps = {\r\n  useAddScreenModalProps: useAddScreenModalProps;\r\n};\r\n\r\nexport const AddScreenModalComponent: React.FC<AddScreenModalComponentProps> = ({\r\n  useAddScreenModalProps,\r\n}) => {\r\n  const {\r\n    closeAddScreenModal,\r\n    AddScreenModalState,\r\n    addScreenName,\r\n    addScreenFormInputHandler,\r\n    addScreenFormHandler,\r\n  } = useAddScreenModalProps();\r\n  return (\r\n    <Modal\r\n      open={AddScreenModalState}\r\n      onClose={() => closeAddScreenModal()}\r\n      aria-labelledby=\"simple-modal-title\"\r\n      aria-describedby=\"simple-modal-description\"\r\n    >\r\n      <div className=\"modal-wrapper modal-wrapper--big\">\r\n        <Grid item sm={12}>\r\n          <Card>\r\n            <CardHeader\r\n              title=\"Добавить новый экран\"\r\n              action={\r\n                <IconButton\r\n                  onClick={() => closeAddScreenModal()}\r\n                  aria-label=\"settings\"\r\n                >\r\n                  <CloseIcon />\r\n                </IconButton>\r\n              }\r\n            />\r\n            <CardContent>\r\n              <form onSubmit={addScreenFormHandler}>\r\n                <Grid container spacing={2} direction={'column'}>\r\n                  <Grid item>\r\n                    <TextField\r\n                      fullWidth\r\n                      name=\"name\"\r\n                      label=\"Имя скрина\"\r\n                      variant=\"outlined\"\r\n                      value={addScreenName}\r\n                      onChange={addScreenFormInputHandler}\r\n                      required\r\n                    />\r\n                  </Grid>\r\n                  <Grid>\r\n                    <Button\r\n                      type={'submit'}\r\n                      fullWidth\r\n                      color={'primary'}\r\n                      variant={'contained'}\r\n                    >\r\n                      создать\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </form>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport const AddScreenModal$ = createFipc(AddScreenModalComponent);\r\n","import { ModalConf$ } from '../ModalConf/ModalConf';\r\nexport const DeleteModal$ = ModalConf$({\r\n  $carry: true,\r\n  useBtnRightText: () => 'Отменить',\r\n  useBtnLeftText: () => 'Удалить',\r\n});\r\n","import React, { useCallback } from 'react';\r\nimport {\r\n  Modal,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Button,\r\n} from '@material-ui/core';\r\nimport { createFipc } from 'react-fipc';\r\nimport './Modal.scss';\r\n\r\ninterface ModalConfProps {\r\n  useHandlerClick: () => (payload: number) => any;\r\n  useDeleteModalClose: () => () => void;\r\n  useIsDeleteModal: () => boolean;\r\n  useBtnRightText: () => string;\r\n  useBtnLeftText: () => string;\r\n  useTitle: () => string;\r\n  useGetId: () => number;\r\n}\r\n\r\nexport const ModalConf: React.FC<ModalConfProps> = ({\r\n  useHandlerClick,\r\n  useDeleteModalClose,\r\n  useBtnRightText,\r\n  useBtnLeftText,\r\n  useTitle,\r\n  useIsDeleteModal,\r\n  useGetId,\r\n}) => {\r\n  const title = useTitle();\r\n  const btnRightText = useBtnRightText();\r\n  const btnLeftText = useBtnLeftText();\r\n  const status = useIsDeleteModal();\r\n  const closeModal = useDeleteModalClose();\r\n  const handlerClick = useHandlerClick();\r\n  const id = useGetId();\r\n\r\n  const handler = useCallback(() => {\r\n    closeModal();\r\n    handlerClick(id);\r\n  }, [closeModal, handlerClick, id]);\r\n\r\n  return (\r\n    <Modal\r\n      open={status}\r\n      onClose={() => closeModal()}\r\n      aria-labelledby=\"simple-modal-title\"\r\n      aria-describedby=\"simple-modal-description\"\r\n    >\r\n      <div className=\"modal-wrapper\">\r\n        <Card>\r\n          <CardHeader title={title} />\r\n          <CardContent>\r\n            <Button\r\n              onClick={handler}\r\n              variant={'contained'}\r\n              color={'primary'}\r\n              classes={{\r\n                root: 'mr20',\r\n              }}\r\n            >\r\n              {btnLeftText}\r\n            </Button>\r\n            <Button\r\n              onClick={() => closeModal()}\r\n              variant={'outlined'}\r\n              color={'primary'}\r\n            >\r\n              {btnRightText}\r\n            </Button>\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport const ModalConf$ = createFipc(ModalConf);\r\n","import { asyncScreenActions } from './../../redux/slices/screensSlice';\r\nimport { DeleteModal$ } from './deleteModal';\r\nimport { useAction } from '../../hooks/use-action';\r\nimport { viewActions } from '../../redux/slices/viewSlice';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../redux/createStore';\r\n\r\nexport const DeleteModalScreen = DeleteModal$({\r\n  useHandlerClick: () => {\r\n    return useAction(asyncScreenActions.deleteScreen_async);\r\n  },\r\n  useDeleteModalClose: () => {\r\n    return useAction(viewActions.closeScreenDeleteModal);\r\n  },\r\n  useIsDeleteModal: () => {\r\n    return useSelector<RootState, boolean>(\r\n      (state) => state.view.ScreenDeteleModal.isScreenDeteleModal\r\n    );\r\n  },\r\n  useGetId: () => {\r\n    return useSelector<RootState, number>(\r\n      (state) => state.view.ScreenDeteleModal.idScreen\r\n    );\r\n  },\r\n  useTitle: () => 'Вы точно хотите удалить этот экран?',\r\n});\r\n","import React from 'react';\r\nimport cn from 'classnames';\r\nimport { Header } from '../Header/Header';\r\nimport { Container, IconButton } from '@material-ui/core';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { grey } from '@material-ui/core/colors';\r\nimport { viewActions } from '../../redux/slices/viewSlice';\r\nimport { useAction } from '../../hooks/use-action';\r\nimport './Layout.scss';\r\nimport { AddScreenModal } from '../AddScreenModal/AddScreenModal.fipc';\r\nimport { DeleteModalScreen } from '../deleteModal/deleteModalScreen';\r\nexport interface LayoutProps {\r\n  className?: string;\r\n  title: string;\r\n  isScreen?: boolean;\r\n  id?: number;\r\n}\r\n\r\nexport const Layout: React.FC<LayoutProps> = ({\r\n  title,\r\n  children,\r\n  className,\r\n  isScreen,\r\n  id,\r\n}) => {\r\n  const blockClassName = cn(className, 'Layout');\r\n  const openRenameScreenModal = useAction(viewActions.openRenameScreenModal);\r\n  const openScreenDeleteModal = useAction(viewActions.openScreenDeleteModal);\r\n  return (\r\n    <div className={blockClassName}>\r\n      <Header>\r\n        <span className=\"Layout__name\">{title}</span>\r\n        {isScreen && (\r\n          <div className=\"Layout__btns\">\r\n            <IconButton\r\n              onClick={() => openRenameScreenModal()}\r\n              aria-label=\"settings\"\r\n            >\r\n              <CreateIcon style={{ color: grey[50] }} />\r\n            </IconButton>\r\n            <IconButton\r\n              onClick={() => openScreenDeleteModal(id)}\r\n              aria-label=\"settings\"\r\n            >\r\n              <DeleteIcon style={{ color: grey[50] }} />\r\n            </IconButton>\r\n          </div>\r\n        )}\r\n      </Header>\r\n      <Container className=\"Layout__container\">{children}</Container>\r\n      <AddScreenModal />\r\n      <DeleteModalScreen />\r\n    </div>\r\n  );\r\n};\r\n","import { AddTextFieldModal$ } from './AddTextFieldModal';\r\nimport { useAction } from '../../hooks/use-action';\r\nimport { viewActions } from '../../redux/slices/viewSlice';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../redux/createStore';\r\nimport {\r\n  TextFieldsActions,\r\n  asyncTextFieldActions,\r\n} from '../../redux/slices/textFieldsSlice';\r\nimport { useCallback } from 'react';\r\n\r\nexport type useAddTextFieldModalProps = (\r\n  id: number\r\n) => {\r\n  closeAddTextFieldModal: () => void;\r\n  addTextFieldModalState: boolean;\r\n  addTextFieldName: string;\r\n  addTextFieldValue: string;\r\n  addTextFieldFormInputHandler: (\r\n    e: React.ChangeEvent<HTMLInputElement>\r\n  ) => void;\r\n  addTextFieldFormHandler: (e: React.FormEvent<HTMLFormElement>) => void;\r\n};\r\n\r\nexport const AddTextFieldModal = AddTextFieldModal$({\r\n  useAddTextFieldModalProps: (id) => {\r\n    const closeAddTextFieldModal = useAction(\r\n      viewActions.closeAddTextFieldModal\r\n    );\r\n    const addTextFieldModalState = useSelector<RootState, boolean>(\r\n      (state) => state.view.AddTextFieldModal\r\n    );\r\n    const addTextFieldName = useSelector<RootState, string>(\r\n      (state) => state.TextFields.addTextfieldName\r\n    );\r\n    const addTextFieldValue = useSelector<RootState, string>(\r\n      (state) => state.TextFields.addTextFieldValue\r\n    );\r\n\r\n    const setAddFieldName = useAction(TextFieldsActions.setAddTextFieldName);\r\n    const setAddFieldValue = useAction(TextFieldsActions.setAddTextFieldValue);\r\n\r\n    const addTextFieldFormInputHandler = useCallback(\r\n      (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        switch (name) {\r\n          case 'name':\r\n            setAddFieldName(value);\r\n            break;\r\n          case 'value':\r\n            setAddFieldValue(value);\r\n            break;\r\n        }\r\n      },\r\n\r\n      [setAddFieldName, setAddFieldValue]\r\n    );\r\n    const addTextFieldAsync = useAction(\r\n      asyncTextFieldActions.addTextFieldAsync\r\n    );\r\n    const addTextFieldFormHandler = useCallback(\r\n      (e) => {\r\n        e.preventDefault();\r\n        addTextFieldAsync(id);\r\n      },\r\n      [addTextFieldAsync, id]\r\n    );\r\n    return {\r\n      addTextFieldFormHandler,\r\n      addTextFieldModalState,\r\n      addTextFieldFormInputHandler,\r\n      addTextFieldName,\r\n      addTextFieldValue,\r\n      closeAddTextFieldModal,\r\n    };\r\n  },\r\n});\r\n","import {\r\n  Modal,\r\n  Grid,\r\n  Card,\r\n  CardHeader,\r\n  IconButton,\r\n  CardContent,\r\n  TextField,\r\n  Button,\r\n} from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport React from 'react';\r\nimport { useAddTextFieldModalProps } from './AddTextFieldModal.fipc';\r\nimport { createFipc } from 'react-fipc';\r\ntype AddTextFieldModalProps = {\r\n  id: number;\r\n  useAddTextFieldModalProps: useAddTextFieldModalProps;\r\n};\r\n\r\nexport const AddTextFieldModalComponent: React.FC<AddTextFieldModalProps> = ({\r\n  id,\r\n  useAddTextFieldModalProps,\r\n}) => {\r\n  const {\r\n    closeAddTextFieldModal,\r\n    addTextFieldValue,\r\n    addTextFieldName,\r\n    addTextFieldModalState,\r\n    addTextFieldFormInputHandler,\r\n    addTextFieldFormHandler,\r\n  } = useAddTextFieldModalProps(id);\r\n  return (\r\n    <Modal\r\n      open={addTextFieldModalState}\r\n      onClose={() => closeAddTextFieldModal()}\r\n      aria-labelledby=\"simple-modal-title\"\r\n      aria-describedby=\"simple-modal-description\"\r\n    >\r\n      <div className=\"modal-wrapper modal-wrapper--big\">\r\n        <Grid item sm={12}>\r\n          <Card>\r\n            <CardHeader\r\n              title=\"Добавить новое текстовое поле\"\r\n              action={\r\n                <IconButton\r\n                  onClick={() => closeAddTextFieldModal()}\r\n                  aria-label=\"settings\"\r\n                >\r\n                  <CloseIcon />\r\n                </IconButton>\r\n              }\r\n            />\r\n            <CardContent>\r\n              <form onSubmit={addTextFieldFormHandler}>\r\n                <Grid container spacing={2} direction={'column'}>\r\n                  <Grid item>\r\n                    <TextField\r\n                      fullWidth\r\n                      name=\"name\"\r\n                      label=\"Имя поля\"\r\n                      variant=\"outlined\"\r\n                      value={addTextFieldName}\r\n                      onChange={addTextFieldFormInputHandler}\r\n                      required\r\n                    />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <TextField\r\n                      fullWidth\r\n                      name=\"value\"\r\n                      label=\"Начальное значение\"\r\n                      variant=\"outlined\"\r\n                      value={addTextFieldValue}\r\n                      onChange={addTextFieldFormInputHandler}\r\n                      required\r\n                    />\r\n                  </Grid>\r\n                  <Grid>\r\n                    <Button\r\n                      type={'submit'}\r\n                      fullWidth\r\n                      color={'primary'}\r\n                      variant={'contained'}\r\n                    >\r\n                      создать\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </form>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport const AddTextFieldModal$ = createFipc(AddTextFieldModalComponent);\r\n","import React, { useCallback } from 'react';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Button,\r\n  Grid,\r\n  InputAdornment,\r\n  IconButton,\r\n  TextField,\r\n} from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { LastPage } from '@material-ui/icons';\r\nimport { createFipc } from 'react-fipc';\r\nimport { TextFieldType } from './textCard.fipc';\r\nimport './TextCard.scss';\r\nimport { viewActions } from '../../redux/slices/viewSlice';\r\nimport { useAction } from '../../hooks/use-action';\r\nimport { Loader } from '../Loader/Loader';\r\n\r\nexport interface TextCardHooks {\r\n  useTextField: TextFieldType;\r\n}\r\nexport interface TextCardProps extends TextCardHooks {\r\n  className?: string;\r\n  multiline?: boolean;\r\n  id: number;\r\n  name: string;\r\n}\r\n\r\nexport const TextCardComponent: React.FC<TextCardProps> = ({\r\n  useTextField,\r\n  children,\r\n  className,\r\n  name,\r\n  id,\r\n}) => {\r\n  const {\r\n    value,\r\n    onChange,\r\n    onSave,\r\n    isSave,\r\n    onReset,\r\n    isReset,\r\n    onBack,\r\n    isLoading,\r\n  } = useTextField(id, name);\r\n\r\n  const handleChange = useCallback(\r\n    (e: { target: { value: string } }) => {\r\n      onChange(e.target.value);\r\n    },\r\n    [onChange]\r\n  );\r\n  const openDeleteTextFieldModal = useAction(\r\n    viewActions.openDeleteTextFieldModal\r\n  );\r\n\r\n  return (\r\n    <Grid item sm={4}>\r\n      <Card className=\"card\">\r\n        <Loader isLoading={isLoading} />\r\n        <CardHeader\r\n          title={name}\r\n          action={\r\n            <IconButton\r\n              onClick={() => openDeleteTextFieldModal(id)}\r\n              aria-label=\"settings\"\r\n            >\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          }\r\n        />\r\n        <CardContent>\r\n          <Grid container spacing={4}>\r\n            <Grid item sm={12}>\r\n              <form>\r\n                <TextField\r\n                  fullWidth\r\n                  multiline={true}\r\n                  name=\"title\"\r\n                  label=\"Текст заголовка\"\r\n                  variant=\"outlined\"\r\n                  value={value}\r\n                  onChange={handleChange}\r\n                  InputProps={{\r\n                    endAdornment: (\r\n                      <InputAdornment position={'end'}>\r\n                        <IconButton onClick={onBack} size={'small'}>\r\n                          <LastPage />\r\n                        </IconButton>\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                />\r\n              </form>\r\n            </Grid>\r\n            <Grid container item spacing={2} sm={12}>\r\n              <Grid item>\r\n                <Button\r\n                  disabled={!isSave}\r\n                  onClick={onSave}\r\n                  variant={'contained'}\r\n                  color={'primary'}\r\n                >\r\n                  Сохранить\r\n                </Button>\r\n              </Grid>\r\n              <Grid item>\r\n                <Button\r\n                  disabled={!isReset}\r\n                  onClick={onReset}\r\n                  variant={'outlined'}\r\n                  color={'primary'}\r\n                >\r\n                  Сбросить\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport const TextCard$ = createFipc(TextCardComponent);\r\n","import { asyncTextFieldActions } from '../../redux/slices/textFieldsSlice';\r\nimport { RootState } from '../../redux/createStore';\r\nimport { useSelector } from 'react-redux';\r\nimport { useCallback, useState, useEffect } from 'react';\r\nimport { TextCard$ } from './TextCard';\r\nimport { useAction } from '../../hooks/use-action';\r\nimport { last } from 'lodash';\r\nimport { TextDto } from '../../apiWorker/typings';\r\n\r\nexport type TextFieldType = (\r\n  fieldId: number,\r\n  name: string\r\n) => {\r\n  value?: string;\r\n  onChange: (value: string) => void;\r\n  onSave: () => void;\r\n  isSave: boolean;\r\n  onReset: () => void;\r\n  isReset: boolean;\r\n  onBack: () => void;\r\n  isLoading: boolean;\r\n};\r\n\r\nconst useIsReset = (\r\n  text: string,\r\n  values: TextDto[],\r\n  lastValue: TextDto | undefined,\r\n  isLoading: boolean\r\n) => {\r\n  const isLastValueChange = lastValue?.value !== last(values)?.value ?? '';\r\n  const isTextChange = text !== last(values)?.value ?? text;\r\n  return (isTextChange || isLastValueChange) && !isLoading;\r\n};\r\n\r\nconst useIsSave = (text: string, values: TextDto[], isLoading: boolean) => {\r\n  const isTextChange = text !== last(values)?.value ?? text;\r\n  return isTextChange && !isLoading;\r\n};\r\nexport const TextCard = TextCard$({\r\n  useTextField: <TextFieldType>(fieldId: number) => {\r\n    const addFieldValueAsync = useAction(\r\n      asyncTextFieldActions.addTextFieldValueAsync\r\n    );\r\n    const values: TextDto[] = useSelector<RootState, TextDto[]>((state) => {\r\n      return (\r\n        state.TextFields.items.find((field) => field.id === fieldId)?.values ??\r\n        []\r\n      );\r\n    });\r\n    const [text, setText] = useState<string>(last(values)?.value ?? '');\r\n    const [lastValue, setLastValue] = useState(last(values));\r\n\r\n    const [isLoading, setIsLoading] = useState<boolean>(false);\r\n    const setValueStatus: boolean = useSelector<RootState, boolean>(\r\n      (state) =>\r\n        state.TextFields.items.find((field) => field.id === fieldId)\r\n          ?.isLoading ?? false\r\n    );\r\n\r\n    useEffect(() => {\r\n      setIsLoading(setValueStatus);\r\n      setLastValue(last(values));\r\n    }, [setValueStatus]);\r\n\r\n    const isSave = useIsSave(text, values, isLoading);\r\n    const onSave = useCallback(() => {\r\n      addFieldValueAsync({ text, fieldId });\r\n    }, [addFieldValueAsync, text, fieldId]);\r\n\r\n    const isReset = useIsReset(text, values, lastValue, isLoading);\r\n    const onReset = useCallback(() => {\r\n      if (isReset) {\r\n        setText(last(values)?.value ?? '');\r\n        setLastValue(last(values));\r\n      }\r\n    }, [setText, isReset, setLastValue, values]);\r\n\r\n    const onBack = useCallback(() => {\r\n      if (lastValue !== undefined) {\r\n        const prevIndex = values.indexOf(lastValue) - 1;\r\n        setLastValue(values[prevIndex]);\r\n\r\n        setText(values[prevIndex]?.value ?? 'все хватит, АСТАНАВИСЬ');\r\n      }\r\n    }, [lastValue, values]);\r\n\r\n    return {\r\n      value: text,\r\n      onChange: setText,\r\n      onSave,\r\n      isSave,\r\n      onReset,\r\n      isReset,\r\n      onBack,\r\n      isLoading,\r\n    };\r\n  },\r\n});\r\n","import { DeleteModal$ } from './deleteModal';\r\nimport { useAction } from '../../hooks/use-action';\r\nimport { imgFieldsActionsAsync } from '../../redux/slices/imgFieldsSlice';\r\nimport { viewActions } from '../../redux/slices/viewSlice';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../redux/createStore';\r\n\r\nexport const DeleteModalTextField = DeleteModal$({\r\n  useHandlerClick: () => {\r\n    return useAction(imgFieldsActionsAsync.deleteImgfieldAsync);\r\n  },\r\n  useDeleteModalClose: () => {\r\n    return useAction(viewActions.closeDeleteImgFieldModal);\r\n  },\r\n  useIsDeleteModal: () => {\r\n    return useSelector<RootState, boolean>(\r\n      (state) => state.view.imgFieldDeteleModal.isImgFieldDeteleModal\r\n    );\r\n  },\r\n  useGetId: () => {\r\n    return useSelector<RootState, number>(\r\n      (state) => state.view.imgFieldDeteleModal.idImgField\r\n    );\r\n  },\r\n  useTitle: () => 'Вы точно хотите удалить эту кассу?',\r\n});\r\n","import { TextFieldList$ } from './TextFieldListComponent';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../redux/createStore';\r\nimport { TextFieldType } from '../../redux/slices/textFieldsSlice';\r\n\r\nexport const TextFieldList = TextFieldList$({\r\n  useTextFields: () => {\r\n    const textFields = useSelector<RootState, TextFieldType[]>(\r\n      (state) => state.TextFields.items\r\n    );\r\n\r\n    return { textFields };\r\n  },\r\n});\r\n","import React from 'react';\r\nimport { AddTextFieldModal } from '../AddTextFieldModal/AddTextFieldModal.fipc';\r\nimport { TextFieldType } from '../../redux/slices/textFieldsSlice';\r\nimport { useAction } from '../../hooks/use-action';\r\nimport { viewActions } from '../../redux/slices/viewSlice';\r\nimport { Grid, Card, Button } from '@material-ui/core';\r\nimport { TextCard } from '../TextCard/textCard.fipc';\r\nimport { DeleteModalTextField } from '../deleteModal/deleteModalImgField';\r\nimport { createFipc } from 'react-fipc';\r\n\r\nexport interface TextFieldListComponentHooks {\r\n  useTextFields: () => { textFields: TextFieldType[] };\r\n}\r\n\r\nexport interface TextFieldListComponentProps\r\n  extends TextFieldListComponentHooks {\r\n  id: number;\r\n}\r\n\r\nexport const TextFieldListComponent: React.FC<TextFieldListComponentProps> = ({\r\n  useTextFields,\r\n  id,\r\n}) => {\r\n  const { textFields } = useTextFields();\r\n  const openAddTextFieldModal = useAction(viewActions.openAddTextFieldModal);\r\n  return (\r\n    <>\r\n      <Grid container spacing={3}>\r\n        {textFields.map(({ id, name }) => {\r\n          return <TextCard id={id} key={id} name={name} />;\r\n        })}\r\n        <AddTextFieldModal id={id} />\r\n        <Grid item sm={4}>\r\n          <Card className=\"AddCard\">\r\n            <Button onClick={() => openAddTextFieldModal()} color=\"primary\">\r\n              Добавить текстовое поле\r\n            </Button>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n      <DeleteModalTextField />\r\n    </>\r\n  );\r\n};\r\n\r\nexport const TextFieldList$ = createFipc(TextFieldListComponent);\r\n","import React from 'react';\r\n\r\nimport './DropZone.scss';\r\nimport { createFipc } from 'react-fipc';\r\ntype DropZoneComponentProps = {\r\n  useDropZone: (\r\n    onChangeDropZone: (acceptedFiles: File[]) => void,\r\n    id: number\r\n  ) => {\r\n    getInputProps?: any;\r\n    getRootProps?: any;\r\n  };\r\n  onChangeDropZone: (acceptedFiles: File[]) => void;\r\n  id: number;\r\n  url: string;\r\n};\r\n\r\nconst DropZoneComponent: React.FC<DropZoneComponentProps> = ({\r\n  useDropZone,\r\n  children,\r\n  onChangeDropZone,\r\n  url,\r\n  id,\r\n}) => {\r\n  const { getInputProps, getRootProps } = useDropZone(onChangeDropZone, id);\r\n  return (\r\n    <div {...getRootProps({ className: 'dropzone' })}>\r\n      <input {...getInputProps()} />\r\n      <p>\r\n        {url !== '' ? (\r\n          <img className=\"dropzone__img\" key={url} src={url} alt=\"\" />\r\n        ) : (\r\n          'Перетащите или кликните, чтобы загрузить фотографию'\r\n        )}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport const DropZone$ = createFipc(DropZoneComponent);\r\n","import { DropZone$ } from './DropZoneComponent';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../redux/createStore';\r\nexport const DropZone = DropZone$({\r\n  useDropZone: (onChangeDropZone, id) => {\r\n    const { getRootProps, getInputProps } = useDropzone({\r\n      multiple: false,\r\n      accept: 'image/*',\r\n      onDrop: onChangeDropZone,\r\n    });\r\n\r\n    return {\r\n      getRootProps,\r\n      getInputProps,\r\n    };\r\n  },\r\n});\r\n","import React, { useCallback } from 'react';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Button,\r\n  Grid,\r\n  IconButton,\r\n} from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { createFipc } from 'react-fipc';\r\nimport { viewActions } from '../../redux/slices/viewSlice';\r\nimport { useAction } from '../../hooks/use-action';\r\nimport { Loader } from '../Loader/Loader';\r\nimport { DropZone } from '../DropZone/DropZone.fipc';\r\nimport { ImgDto } from '../../apiWorker/typings';\r\nexport interface ImgCardHooks {\r\n  useImgField: (\r\n    id: number\r\n  ) => {\r\n    isLoading: boolean;\r\n    onChangeDropZone: (acceptedFiles: File[]) => void;\r\n    onSave: () => void;\r\n    isSave: boolean;\r\n    onBack: () => void;\r\n    isBack: boolean;\r\n    onReset: () => void;\r\n    isReset: boolean;\r\n    url: string;\r\n  };\r\n}\r\n\r\nexport interface ImgCardProps extends ImgCardHooks {\r\n  className?: string;\r\n  multiline?: boolean;\r\n  id: number;\r\n  name: string;\r\n}\r\n\r\nexport const ImgCardComponent: React.FC<ImgCardProps> = ({\r\n  children,\r\n  className,\r\n  name,\r\n  id,\r\n  useImgField,\r\n}) => {\r\n  const openDeleteImgFieldModal = useAction(\r\n    viewActions.openDeleteImgFieldModal\r\n  );\r\n  const {\r\n    isLoading,\r\n    onChangeDropZone,\r\n    onSave,\r\n    isSave,\r\n    isBack,\r\n    onBack,\r\n    onReset,\r\n    isReset,\r\n    url,\r\n  } = useImgField(id);\r\n  return (\r\n    <Grid item sm={4}>\r\n      <Card className=\"card\">\r\n        <Loader isLoading={isLoading} />\r\n        <CardHeader\r\n          title={name}\r\n          action={\r\n            <IconButton\r\n              onClick={() => openDeleteImgFieldModal(id)}\r\n              aria-label=\"settings\"\r\n            >\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          }\r\n        />\r\n        <CardContent>\r\n          <Grid container spacing={4}>\r\n            <Grid item sm={12}>\r\n              <DropZone id={id} url={url} onChangeDropZone={onChangeDropZone} />\r\n            </Grid>\r\n            <Grid item container sm={12} spacing={1}>\r\n              <Grid item>\r\n                <Button\r\n                  disabled={!isSave}\r\n                  onClick={onSave}\r\n                  variant={'contained'}\r\n                  color={'primary'}\r\n                >\r\n                  Сохранить\r\n                </Button>\r\n              </Grid>\r\n              <Grid item>\r\n                <Button\r\n                  disabled={!isBack}\r\n                  color={'primary'}\r\n                  variant=\"outlined\"\r\n                  onClick={onBack}\r\n                >\r\n                  Предыдущее\r\n                </Button>\r\n              </Grid>\r\n              <Grid item>\r\n                <Button\r\n                  disabled={!isReset}\r\n                  color={'primary'}\r\n                  variant=\"outlined\"\r\n                  onClick={onReset}\r\n                >\r\n                  Сбросить\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport const ImgCard$ = createFipc(ImgCardComponent);\r\n","import { last } from 'lodash';\r\nimport {\r\n  imgFieldsActionsAsync,\r\n  imgFieldsActions,\r\n} from './../../redux/slices/imgFieldsSlice';\r\nimport { RootState } from './../../redux/createStore';\r\nimport { useSelector } from 'react-redux';\r\nimport { ImgCard$ } from './ImgCard';\r\nimport { useCallback, useState, useEffect } from 'react';\r\nimport { useAction } from '../../hooks/use-action';\r\nimport { ImgDto } from '../../apiWorker/typings';\r\n\r\nconst useSave = (\r\n  url: string | undefined,\r\n  id: number,\r\n  imgId: number | undefined\r\n) => {\r\n  const [isSave, setIsSave] = useState<boolean>(true);\r\n  const addImgAsync = useAction(imgFieldsActionsAsync.addImg_async);\r\n  const addTheSameImg = useAction(imgFieldsActionsAsync.addTheSameImg_async);\r\n\r\n  const onSave = useCallback(() => {\r\n    if (imgId) {\r\n      addTheSameImg(id);\r\n    } else {\r\n      addImgAsync(id);\r\n    }\r\n  }, [addImgAsync, addTheSameImg, id, imgId]);\r\n\r\n  useEffect(() => {\r\n    setIsSave(url !== undefined);\r\n  }, [url]);\r\n\r\n  return {\r\n    onSave,\r\n    isSave,\r\n  };\r\n};\r\n\r\nconst useReset = (\r\n  url: string | undefined,\r\n  id: number,\r\n  setLastValue: any,\r\n  images: ImgDto[]\r\n) => {\r\n  const [isReset, setIsReset] = useState<boolean>(true);\r\n  const clearAddImg = useAction(imgFieldsActions.clearAddImg);\r\n\r\n  useEffect(() => {\r\n    setIsReset(url !== undefined);\r\n  }, [url]);\r\n\r\n  const onReset = useCallback(() => {\r\n    if (isReset) {\r\n      clearAddImg(id);\r\n      setLastValue(last(images));\r\n    }\r\n  }, [clearAddImg, id, images, isReset, setLastValue]);\r\n  return {\r\n    isReset,\r\n    onReset,\r\n  };\r\n};\r\n\r\nconst useBack = (\r\n  images: ImgDto[],\r\n  id: number,\r\n  lastValue: ImgDto | undefined,\r\n  setLastValue: any\r\n) => {\r\n  const addImgValue = useAction(imgFieldsActions.addImgValue);\r\n  const [isBack, setIsBack] = useState<boolean>(lastValue !== undefined);\r\n\r\n  useEffect(() => {\r\n    setLastValue(last(images));\r\n  }, [images, setLastValue]);\r\n\r\n  useEffect(() => {\r\n    if (lastValue !== undefined) {\r\n      const prevIndex = images.indexOf(lastValue) - 1;\r\n      setIsBack(images[prevIndex] !== undefined);\r\n    }\r\n  }, [images, lastValue]);\r\n\r\n  const onBack = useCallback(async () => {\r\n    if (lastValue !== undefined) {\r\n      const prevIndex = images.indexOf(lastValue) - 1;\r\n      const newLastValue = images[prevIndex];\r\n      setLastValue(newLastValue);\r\n      addImgValue({\r\n        newUrl: newLastValue.url,\r\n        addTheSameImgId: newLastValue.id,\r\n        id,\r\n      });\r\n    }\r\n  }, [lastValue, images, setLastValue, addImgValue, id]);\r\n  return {\r\n    onBack,\r\n    isBack,\r\n  };\r\n};\r\n\r\nexport const ImgCard = ImgCard$({\r\n  useImgField: (id) => {\r\n    const url: string | undefined = useSelector<RootState, string | undefined>(\r\n      (state) =>\r\n        state.imgFields.items.find((imgField) => imgField.id === id)\r\n          ?.addImgValue\r\n    );\r\n\r\n    const imgId: number | undefined = useSelector<\r\n      RootState,\r\n      number | undefined\r\n    >(\r\n      (state) =>\r\n        state.imgFields.items.find((imgField) => imgField.id === id)\r\n          ?.addTheSameImgId\r\n    );\r\n\r\n    const isLoading = useSelector<RootState, boolean>(\r\n      (state) =>\r\n        state.imgFields.items.find((imgField) => imgField.id === id)\r\n          ?.isLoading ?? false\r\n    );\r\n\r\n    const addImgValue = useAction(imgFieldsActions.addImgValue);\r\n\r\n    const onChangeDropZone = useCallback(\r\n      async (acceptedFiles) => {\r\n        const lastFile: File | undefined = last(acceptedFiles);\r\n        const newUrl = URL.createObjectURL(lastFile);\r\n        if (lastFile !== undefined) {\r\n          addImgValue({\r\n            newUrl,\r\n            addImgValueType: lastFile.type,\r\n            id,\r\n          });\r\n        }\r\n      },\r\n      [addImgValue, id]\r\n    );\r\n\r\n    const images = useSelector<RootState, ImgDto[]>(\r\n      (state) =>\r\n        state.imgFields.items.find((imgField) => imgField.id === id)?.img ?? []\r\n    );\r\n\r\n    const [lastValue, setLastValue] = useState<ImgDto | undefined>(\r\n      last(images)\r\n    );\r\n\r\n    const { isReset, onReset } = useReset(url, id, setLastValue, images);\r\n    const { isBack, onBack } = useBack(images, id, lastValue, setLastValue);\r\n    const { onSave, isSave } = useSave(url, id, imgId);\r\n\r\n    return {\r\n      isLoading,\r\n      onChangeDropZone,\r\n      onSave,\r\n      isSave,\r\n      isBack,\r\n      onBack,\r\n      isReset,\r\n      onReset,\r\n      url: url ?? lastValue?.url ?? '',\r\n    };\r\n  },\r\n});\r\n","import { AddImgFieldModal$ } from './AddImgFieldModal';\r\nimport { useAction } from '../../hooks/use-action';\r\nimport { viewActions } from '../../redux/slices/viewSlice';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../redux/createStore';\r\nimport { useCallback } from 'react';\r\nimport {\r\n  imgFieldsActions,\r\n  imgFieldsActionsAsync,\r\n} from '../../redux/slices/imgFieldsSlice';\r\n\r\nexport type useAddImgFieldModalProps = (\r\n  id: number\r\n) => {\r\n  closeAddImgFieldModal: () => void;\r\n  addImgFieldModalState: boolean;\r\n  addImgFieldName: string;\r\n  addImgFieldFormInputHandler: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  addImgFieldFormHandler: (e: React.FormEvent<HTMLFormElement>) => void;\r\n};\r\n\r\nexport const AddImgFieldModal = AddImgFieldModal$({\r\n  useAddImgFieldModalProps: (id) => {\r\n    const closeAddImgFieldModal = useAction(viewActions.closeAddImgFieldModal);\r\n    const addImgFieldModalState = useSelector<RootState, boolean>(\r\n      (state) => state.view.AddImgFieldModal\r\n    );\r\n    const addImgFieldName = useSelector<RootState, string>(\r\n      (state) => state.imgFields.addImgFieldName\r\n    );\r\n\r\n    const setAddImgFieldName = useAction(imgFieldsActions.setAddImgFieldName);\r\n    const addImgFieldFormInputHandler = useCallback(\r\n      (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        switch (name) {\r\n          case 'name':\r\n            setAddImgFieldName(value);\r\n            break;\r\n        }\r\n      },\r\n      [setAddImgFieldName]\r\n    );\r\n    const addImgFieldAsync = useAction(imgFieldsActionsAsync.addImgFieldAsync);\r\n    const addImgFieldFormHandler = useCallback(\r\n      (e) => {\r\n        e.preventDefault();\r\n        addImgFieldAsync(id);\r\n      },\r\n      [addImgFieldAsync, id]\r\n    );\r\n    return {\r\n      addImgFieldFormHandler,\r\n      addImgFieldModalState,\r\n      addImgFieldFormInputHandler,\r\n      addImgFieldName,\r\n      closeAddImgFieldModal,\r\n    };\r\n  },\r\n});\r\n","import {\r\n  Modal,\r\n  Grid,\r\n  Card,\r\n  CardHeader,\r\n  IconButton,\r\n  CardContent,\r\n  TextField,\r\n  Button,\r\n} from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport React from 'react';\r\nimport { useAddImgFieldModalProps } from './AddImgFieldModal.fipc';\r\nimport { createFipc } from 'react-fipc';\r\ntype AddImgFieldModalProps = {\r\n  id: number;\r\n  useAddImgFieldModalProps: useAddImgFieldModalProps;\r\n};\r\n\r\nexport const AddImgFieldModalComponent: React.FC<AddImgFieldModalProps> = ({\r\n  id,\r\n  useAddImgFieldModalProps,\r\n}) => {\r\n  const {\r\n    addImgFieldFormHandler,\r\n    addImgFieldFormInputHandler,\r\n    addImgFieldModalState,\r\n    addImgFieldName,\r\n    closeAddImgFieldModal,\r\n  } = useAddImgFieldModalProps(id);\r\n  return (\r\n    <Modal\r\n      open={addImgFieldModalState}\r\n      onClose={() => closeAddImgFieldModal()}\r\n      aria-labelledby=\"simple-modal-title\"\r\n      aria-describedby=\"simple-modal-description\"\r\n    >\r\n      <div className=\"modal-wrapper modal-wrapper--big\">\r\n        <Grid item sm={12}>\r\n          <Card>\r\n            <CardHeader\r\n              title=\"Добавить новое поле изображения\"\r\n              action={\r\n                <IconButton\r\n                  onClick={() => closeAddImgFieldModal()}\r\n                  aria-label=\"settings\"\r\n                >\r\n                  <CloseIcon />\r\n                </IconButton>\r\n              }\r\n            />\r\n            <CardContent>\r\n              <form onSubmit={addImgFieldFormHandler}>\r\n                <Grid container spacing={2} direction={'column'}>\r\n                  <Grid item>\r\n                    <TextField\r\n                      fullWidth\r\n                      name=\"name\"\r\n                      label=\"Имя поля\"\r\n                      variant=\"outlined\"\r\n                      value={addImgFieldName}\r\n                      onChange={addImgFieldFormInputHandler}\r\n                      required\r\n                    />\r\n                  </Grid>\r\n                  <Grid>\r\n                    <Button\r\n                      type={'submit'}\r\n                      fullWidth\r\n                      color={'primary'}\r\n                      variant={'contained'}\r\n                    >\r\n                      создать\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </form>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport const AddImgFieldModal$ = createFipc(AddImgFieldModalComponent);\r\n","import { DeleteModal$ } from './deleteModal';\r\nimport { useAction } from '../../hooks/use-action';\r\nimport { asyncTextFieldActions } from '../../redux/slices/textFieldsSlice';\r\nimport { viewActions } from '../../redux/slices/viewSlice';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../redux/createStore';\r\n\r\nexport const DeleteModalImgField = DeleteModal$({\r\n  useHandlerClick: () => {\r\n    return useAction(asyncTextFieldActions.deleteTextFieldAsync);\r\n  },\r\n  useDeleteModalClose: () => {\r\n    return useAction(viewActions.closeDeleteTextFieldModal);\r\n  },\r\n  useIsDeleteModal: () => {\r\n    return useSelector<RootState, boolean>(\r\n      (state) => state.view.textFieldDeteleModal.isTextFieldDeteleModal\r\n    );\r\n  },\r\n  useGetId: () => {\r\n    return useSelector<RootState, number>(\r\n      (state) => state.view.textFieldDeteleModal.idTextField\r\n    );\r\n  },\r\n  useTitle: () => 'Вы точно хотите удалить это поле?',\r\n});\r\n","import { useSelector } from 'react-redux';\r\nimport { RootState } from '../../redux/createStore';\r\nimport { ImgFieldList$ } from './ImgFieldListComponent';\r\nimport { ImgFieldDto } from '../../apiWorker/typings';\r\n\r\nexport const ImgFieldList = ImgFieldList$({\r\n  useImgFields: () => {\r\n    const imgFields = useSelector<RootState, ImgFieldDto[]>(\r\n      (state) => state.imgFields.items\r\n    );\r\n\r\n    return { imgFields };\r\n  },\r\n});\r\n","import React from 'react';\r\nimport { useAction } from '../../hooks/use-action';\r\nimport { viewActions } from '../../redux/slices/viewSlice';\r\nimport { Grid, Card, Button } from '@material-ui/core';\r\nimport { createFipc } from 'react-fipc';\r\nimport { ImgFieldDto } from '../../apiWorker/typings';\r\nimport { ImgCard } from '../ImgCard/ImgCard.fipc';\r\nimport { AddImgFieldModal } from '../AddImgFieldModal/AddImgFieldModal.fipc';\r\nimport { DeleteModalImgField } from '../deleteModal/deleteModalTextField';\r\n\r\nexport interface ImgFieldListComponentHooks {\r\n  useImgFields: () => {\r\n    imgFields: ImgFieldDto[];\r\n  };\r\n}\r\n\r\nexport interface ImgFieldListComponentProps extends ImgFieldListComponentHooks {\r\n  id: number;\r\n}\r\n\r\nexport const ImgFieldListComponent: React.FC<ImgFieldListComponentProps> = ({\r\n  useImgFields,\r\n  id,\r\n}) => {\r\n  const { imgFields } = useImgFields();\r\n  const openAddImgFieldModal = useAction(viewActions.openAddImgFieldModal);\r\n  return (\r\n    <>\r\n      <Grid container spacing={3}>\r\n        {imgFields.map(({ id, name, img }) => {\r\n          return <ImgCard id={id} key={id} name={name} />;\r\n        })}\r\n        <AddImgFieldModal id={id} />\r\n        <Grid item sm={4}>\r\n          <Card className=\"AddCard\">\r\n            <Button onClick={() => openAddImgFieldModal()} color=\"primary\">\r\n              Добавить поле изображения\r\n            </Button>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <DeleteModalImgField />\r\n    </>\r\n  );\r\n};\r\n\r\nexport const ImgFieldList$ = createFipc(ImgFieldListComponent);\r\n","import { markdowmAsyncActions } from './../../redux/slices/markdownFieldSlice';\r\nimport { DeleteModal$ } from './deleteModal';\r\nimport { useAction } from '../../hooks/use-action';\r\nimport { viewActions } from '../../redux/slices/viewSlice';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../redux/createStore';\r\n\r\nexport const DeleteMarkdownModal = DeleteModal$({\r\n  useHandlerClick: () => {\r\n    return useAction(markdowmAsyncActions.deleteMarkdown_async);\r\n  },\r\n  useDeleteModalClose: () => {\r\n    return useAction(viewActions.closeDeleteMarkdownFieldModal);\r\n  },\r\n  useIsDeleteModal: () => {\r\n    return useSelector<RootState, boolean>(\r\n      (state) => state.view.markdownFieldDeteleModal.isMarkdownFieldDeteleModal\r\n    );\r\n  },\r\n  useGetId: () => {\r\n    return useSelector<RootState, number>(\r\n      (state) => state.view.markdownFieldDeteleModal.idMarkdownField\r\n    );\r\n  },\r\n  useTitle: () => 'Вы точно хотите удалить это поле?',\r\n});\r\n","import React, { useCallback } from 'react';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Button,\r\n  Grid,\r\n  IconButton,\r\n  TextField,\r\n} from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { createFipc } from 'react-fipc';\r\nimport { viewActions } from '../../redux/slices/viewSlice';\r\nimport { useAction } from '../../hooks/use-action';\r\nimport { Loader } from '../Loader/Loader';\r\nimport './MarkdownCard.scss';\r\nexport interface MarkdownCardHooks {\r\n  useMarkdown: (\r\n    id: number\r\n  ) => {\r\n    name: string;\r\n    label: string;\r\n    isLoading: boolean;\r\n    text: string;\r\n    parseText: string;\r\n    addValueTextHandler: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n    isSave: boolean;\r\n    onSave: () => void;\r\n    isReset: boolean;\r\n    onReset: () => void;\r\n    isBack: boolean;\r\n    onBack: () => void;\r\n  };\r\n}\r\n\r\nexport interface MarkdownCardProps extends MarkdownCardHooks {\r\n  className?: string;\r\n  multiline?: boolean;\r\n  id: number;\r\n}\r\n\r\nexport const MarkdownCardComponent: React.FC<MarkdownCardProps> = ({\r\n  children,\r\n  className,\r\n  id,\r\n  useMarkdown,\r\n}) => {\r\n  const openDeleteMarkdownFieldModal = useAction(\r\n    viewActions.openDeleteMarkdownFieldModal\r\n  );\r\n  const {\r\n    isLoading,\r\n    name,\r\n    label,\r\n    text,\r\n    parseText,\r\n    addValueTextHandler,\r\n    isSave,\r\n    onSave,\r\n    isReset,\r\n    onReset,\r\n    isBack,\r\n    onBack,\r\n  } = useMarkdown(id);\r\n  return (\r\n    <Grid item sm={6}>\r\n      <Card className=\"card\">\r\n        <Loader isLoading={isLoading} />\r\n        <CardHeader\r\n          title={name}\r\n          action={\r\n            <IconButton\r\n              onClick={() => openDeleteMarkdownFieldModal(id)}\r\n              aria-label=\"settings\"\r\n            >\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          }\r\n        />\r\n        <CardHeader title={label} />\r\n        <CardContent>\r\n          <Grid container item sm={12} spacing={2}>\r\n            <Grid item sm={6}>\r\n              <TextField\r\n                label=\"Ваш текст\"\r\n                multiline\r\n                variant=\"filled\"\r\n                fullWidth={true}\r\n                value={text}\r\n                onChange={addValueTextHandler}\r\n              />\r\n            </Grid>\r\n            <Grid item sm={6}>\r\n              <div\r\n                className=\"markdown__translate\"\r\n                dangerouslySetInnerHTML={{\r\n                  __html: parseText,\r\n                }}\r\n              ></div>\r\n            </Grid>\r\n            <Grid item sm={3}>\r\n              <Button\r\n                disabled={!isSave}\r\n                onClick={onSave}\r\n                variant={'contained'}\r\n                color={'primary'}\r\n              >\r\n                Сохранить\r\n              </Button>\r\n            </Grid>\r\n            <Grid item sm={3}>\r\n              <Button\r\n                disabled={!isBack}\r\n                onClick={onBack}\r\n                color={'primary'}\r\n                variant=\"outlined\"\r\n              >\r\n                Предыдущее\r\n              </Button>\r\n            </Grid>\r\n            <Grid item sm={3}>\r\n              <Button\r\n                disabled={!isReset}\r\n                onClick={onReset}\r\n                color={'primary'}\r\n                variant=\"outlined\"\r\n              >\r\n                Сбросить\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport const MarkdownCard$ = createFipc(MarkdownCardComponent);\r\n","import { MdDto } from '../../apiWorker/typings/index';\r\nimport { last } from 'lodash';\r\nimport { RootState } from '../../redux/createStore';\r\nimport { useSelector } from 'react-redux';\r\nimport { MarkdownCard$ } from './MarkdownCardComponent';\r\nimport { useState, useEffect, useCallback } from 'react';\r\nimport { useAction } from '../../hooks/use-action';\r\nimport {\r\n  markdownActions,\r\n  markdowmAsyncActions,\r\n} from '../../redux/slices/markdownFieldSlice';\r\nimport React from 'react';\r\n\r\nconst useTranslate = (text: string) => {\r\n  const array = text.split('\\n');\r\n  return array\r\n    .map((row) => {\r\n      const isH3 = /(### )/y;\r\n      const isH2 = /(## )/y;\r\n      const isH1 = /(# )/y;\r\n      const isText = /[^<>]/gy;\r\n      const isLink = /\\[(.*?)\\]\\(.*?\\)/;\r\n      const isImg = /\\{(.*?)\\}\\(.*?\\)/;\r\n      const imgSizeReGexp = /((?<=\\)\\()\\d*?(?=\\)))/g;\r\n      const imgNameReGexp = /(?<=\\{).*?(?=\\})/;\r\n      const linkReGexp = /(?<=\\[).*?(?=\\])/;\r\n      const urlReGexp = /(?<=\\().*?(?=\\))/;\r\n      if (isImg.test(row)) {\r\n        const imgName = row.match(imgNameReGexp);\r\n        const url = row.match(urlReGexp);\r\n        const imgSize = row.match(imgSizeReGexp) ?? 0;\r\n        const imgWidth = imgSize ? imgSize[0] : 150;\r\n        const imgHeight = imgSize ? imgSize[1] : 150;\r\n        row = row.replace(\r\n          isImg,\r\n          `<img src=${\r\n            url ?? ''\r\n          } width=\"${imgWidth}\" height=\"${imgHeight}\" title=\"${\r\n            imgName ?? ''\r\n          }\" alt=\"${imgName ?? ''}\"/>`\r\n        );\r\n      }\r\n      if (isLink.test(row)) {\r\n        const link = row.match(linkReGexp);\r\n        const url = row.match(urlReGexp);\r\n        row = row.replace(isLink, `<a href=${url ?? ''}>${link}</a>`);\r\n      }\r\n      if (isH3.test(row)) {\r\n        row = row.replace('### ', ``);\r\n        return `<h3 class=\"markdown__h3\">${row}</h3>`;\r\n      }\r\n      if (isH2.test(row)) {\r\n        row = row.replace('## ', ``);\r\n        return `<h2 class=\"markdown__h2\">${row}</h2>`;\r\n      }\r\n      if (isH1.test(row)) {\r\n        row = row.replace('# ', ``);\r\n        return `<h1 class=\"markdown__h1\">${row}</h1>`;\r\n      }\r\n      if (row === '') {\r\n        return `<div class=\"markdown__br\"></div>`;\r\n      }\r\n      if (isText.test(row)) {\r\n        return ` <span>${row}</span>`;\r\n      }\r\n      return row;\r\n    })\r\n    .join('');\r\n};\r\n\r\nconst useSave = (\r\n  values: MdDto[],\r\n  text: string,\r\n  id: number,\r\n  lastValue: MdDto | undefined\r\n) => {\r\n  const isNotLastValue = last(values) !== lastValue;\r\n  const isNotTextValue = (last(values)?.value ?? null) !== text;\r\n  const isNotEmpty = text !== '';\r\n  const [isSave, setIsSave] = useState(false);\r\n  const addMarkdownValue_async = useAction(\r\n    markdowmAsyncActions.addMarkdownValue_async\r\n  );\r\n  useEffect(() => {\r\n    setIsSave(isNotEmpty && (isNotLastValue || isNotTextValue));\r\n  }, [isNotEmpty, isNotLastValue, isNotTextValue, text]);\r\n\r\n  const onSave = useCallback(() => {\r\n    addMarkdownValue_async(id);\r\n  }, [addMarkdownValue_async, id]);\r\n\r\n  return {\r\n    isSave,\r\n    onSave,\r\n  };\r\n};\r\n\r\nconst useReset = (\r\n  text: string,\r\n  setLastValue: any,\r\n  values: MdDto[],\r\n  id: number,\r\n  lastValue: MdDto | undefined\r\n) => {\r\n  const [isReset, setIsReset] = useState(false);\r\n  const clearMarkdownValue = useAction(markdownActions.clearMarkdownValue);\r\n  const isNotLastValue = last(values) !== lastValue;\r\n  const isNotTextValue = (last(values)?.value ?? null) !== text;\r\n  const isNotEmpty = text !== '';\r\n  useEffect(() => {\r\n    setIsReset(isNotEmpty && (isNotLastValue || isNotTextValue));\r\n  }, [isNotEmpty, isNotLastValue, isNotTextValue]);\r\n\r\n  const onReset = useCallback(() => {\r\n    if (isReset) {\r\n      clearMarkdownValue(id);\r\n      setLastValue(last(values));\r\n    }\r\n  }, [clearMarkdownValue, id, isReset, setLastValue, values]);\r\n\r\n  return {\r\n    isReset,\r\n    onReset,\r\n  };\r\n};\r\n\r\nconst useBack = (\r\n  values: MdDto[],\r\n  id: number,\r\n  lastValue: MdDto | undefined,\r\n  setLastValue: any\r\n) => {\r\n  const [isBack, setIsBack] = useState<boolean>(lastValue !== undefined);\r\n  const setAddValueText = useAction(markdownActions.setAddValueText);\r\n\r\n  useEffect(() => {\r\n    setLastValue(last(values));\r\n  }, [values, setLastValue]);\r\n\r\n  useEffect(() => {\r\n    if (lastValue !== undefined) {\r\n      const prevIndex = values.indexOf(lastValue) - 1;\r\n      setIsBack(values[prevIndex] !== undefined);\r\n    }\r\n  }, [values, lastValue]);\r\n\r\n  const onBack = useCallback(async () => {\r\n    if (lastValue !== undefined) {\r\n      const prevIndex = values.indexOf(lastValue) - 1;\r\n      const newLastValue = values[prevIndex];\r\n      setLastValue(newLastValue);\r\n      setAddValueText({\r\n        id,\r\n        text: newLastValue.value,\r\n      });\r\n    }\r\n  }, [lastValue, values, setLastValue, setAddValueText, id]);\r\n  return {\r\n    onBack,\r\n    isBack,\r\n  };\r\n};\r\n\r\nexport const MarkdownCard = MarkdownCard$({\r\n  useMarkdown: (id) => {\r\n    const isLoading = useSelector<RootState, boolean>(\r\n      (state) =>\r\n        state.markdowmField.items.find(\r\n          (markdownField) => markdownField.id === id\r\n        )?.isLoading ?? false\r\n    );\r\n    const name = useSelector<RootState, string>(\r\n      (state) =>\r\n        state.markdowmField.items.find(\r\n          (markdownField) => markdownField.id === id\r\n        )?.name ?? ''\r\n    );\r\n    const label = useSelector<RootState, string>(\r\n      (state) =>\r\n        state.markdowmField.items.find(\r\n          (markdownField) => markdownField.id === id\r\n        )?.label ?? ''\r\n    );\r\n    const values = useSelector<RootState, MdDto[]>(\r\n      (state) =>\r\n        state.markdowmField.items.find(\r\n          (markdownField) => markdownField.id === id\r\n        )?.values ?? []\r\n    );\r\n    const [lastValue, setLastValue] = useState(last(values));\r\n\r\n    useEffect(() => {\r\n      setLastValue(last(values));\r\n    }, [values]);\r\n\r\n    const addValueText = useSelector<RootState, string | undefined>(\r\n      (state) =>\r\n        state.markdowmField.items.find(\r\n          (markdownField) => markdownField.id === id\r\n        )?.addValueText\r\n    );\r\n\r\n    const setAddValueText = useAction(markdownActions.setAddValueText);\r\n    const addValueTextHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n      setAddValueText({\r\n        id,\r\n        text: e.target.value,\r\n      });\r\n    };\r\n\r\n    const text = addValueText ?? lastValue?.value ?? '';\r\n    const { isSave, onSave } = useSave(values, text, id, lastValue);\r\n    const { isReset, onReset } = useReset(\r\n      text,\r\n      setLastValue,\r\n      values,\r\n      id,\r\n      lastValue\r\n    );\r\n    const { onBack, isBack } = useBack(values, id, lastValue, setLastValue);\r\n    const parseText = useTranslate(text);\r\n    return {\r\n      isLoading,\r\n      name,\r\n      label,\r\n      text,\r\n      parseText,\r\n      addValueTextHandler,\r\n      isSave,\r\n      onSave,\r\n      isReset,\r\n      onReset,\r\n      onBack,\r\n      isBack,\r\n    };\r\n  },\r\n});\r\n","import { markdowmAsyncActions } from './../../redux/slices/markdownFieldSlice';\r\nimport { AddMarkdownModal$ } from './AddMarkdownModal';\r\nimport { useAction } from '../../hooks/use-action';\r\nimport { viewActions } from '../../redux/slices/viewSlice';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../redux/createStore';\r\nimport { useCallback } from 'react';\r\nimport { markdownActions } from '../../redux/slices/markdownFieldSlice';\r\n\r\nexport type useAddMarkdownFieldModalProps = (\r\n  id: number\r\n) => {\r\n  closeAddMarkdownFieldModal: () => void;\r\n  AddMarkdownFieldModalState: boolean;\r\n  addMarkdownFieldName: string;\r\n  addMarkdownFieldLabel: string;\r\n  addMarkdownFieldFormInputHandler: (\r\n    e: React.ChangeEvent<HTMLInputElement>\r\n  ) => void;\r\n  addMarkdownFieldFormHandler: (e: React.FormEvent<HTMLFormElement>) => void;\r\n};\r\n\r\nexport const AddMarkdownModal = AddMarkdownModal$({\r\n  useAddMarkdownFieldModalProps: (id) => {\r\n    const closeAddMarkdownFieldModal = useAction(\r\n      viewActions.closeAddMarkdownFieldModal\r\n    );\r\n    const AddMarkdownFieldModalState = useSelector<RootState, boolean>(\r\n      (state) => state.view.AddMarkdownFieldModal\r\n    );\r\n    const addMarkdownFieldName = useSelector<RootState, string>(\r\n      (state) => state.markdowmField.addMarkdownFieldName\r\n    );\r\n    const addMarkdownFieldLabel = useSelector<RootState, string>(\r\n      (state) => state.markdowmField.addMarkdownFieldLabel\r\n    );\r\n\r\n    const setAddMarkdownFieldName = useAction(\r\n      markdownActions.setAddMarkdownFieldName\r\n    );\r\n    const setAddMarkdownFieldLabel = useAction(\r\n      markdownActions.setAddMarkdownFieldLabel\r\n    );\r\n\r\n    const addMarkdownFieldFormInputHandler = useCallback(\r\n      (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        switch (name) {\r\n          case 'name':\r\n            setAddMarkdownFieldName(value);\r\n            break;\r\n          case 'label':\r\n            setAddMarkdownFieldLabel(value);\r\n            break;\r\n        }\r\n      },\r\n      [setAddMarkdownFieldLabel, setAddMarkdownFieldName]\r\n    );\r\n    const addMarkdownField_async = useAction(\r\n      markdowmAsyncActions.addMarkdownField_async\r\n    );\r\n    const addMarkdownFieldFormHandler = useCallback(\r\n      (e) => {\r\n        e.preventDefault();\r\n        addMarkdownField_async(id);\r\n      },\r\n      [addMarkdownField_async, id]\r\n    );\r\n    return {\r\n      addMarkdownFieldFormHandler,\r\n      AddMarkdownFieldModalState,\r\n      addMarkdownFieldFormInputHandler,\r\n      addMarkdownFieldName,\r\n      addMarkdownFieldLabel,\r\n      closeAddMarkdownFieldModal,\r\n    };\r\n  },\r\n});\r\n","import {\r\n  Modal,\r\n  Grid,\r\n  Card,\r\n  CardHeader,\r\n  IconButton,\r\n  CardContent,\r\n  TextField,\r\n  Button,\r\n} from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport React from 'react';\r\nimport { useAddMarkdownFieldModalProps } from './AddMarkdownModal.fipc';\r\nimport { createFipc } from 'react-fipc';\r\n\r\ntype AddTextFieldModalProps = {\r\n  id: number;\r\n  useAddMarkdownFieldModalProps: useAddMarkdownFieldModalProps;\r\n};\r\n\r\nexport const AddMarkdownModalComponent: React.FC<AddTextFieldModalProps> = ({\r\n  id,\r\n  useAddMarkdownFieldModalProps,\r\n}) => {\r\n  const {\r\n    closeAddMarkdownFieldModal,\r\n    addMarkdownFieldLabel,\r\n    addMarkdownFieldName,\r\n    AddMarkdownFieldModalState,\r\n    addMarkdownFieldFormInputHandler,\r\n    addMarkdownFieldFormHandler,\r\n  } = useAddMarkdownFieldModalProps(id);\r\n  return (\r\n    <Modal\r\n      open={AddMarkdownFieldModalState}\r\n      onClose={() => closeAddMarkdownFieldModal()}\r\n      aria-labelledby=\"simple-modal-title\"\r\n      aria-describedby=\"simple-modal-description\"\r\n    >\r\n      <div className=\"modal-wrapper modal-wrapper--big\">\r\n        <Grid item sm={12}>\r\n          <Card>\r\n            <CardHeader\r\n              title=\"Добавить новое поле markdown\"\r\n              action={\r\n                <IconButton\r\n                  onClick={() => closeAddMarkdownFieldModal()}\r\n                  aria-label=\"settings\"\r\n                >\r\n                  <CloseIcon />\r\n                </IconButton>\r\n              }\r\n            />\r\n            <CardContent>\r\n              <form onSubmit={addMarkdownFieldFormHandler}>\r\n                <Grid container spacing={2} direction={'column'}>\r\n                  <Grid item>\r\n                    <TextField\r\n                      fullWidth\r\n                      name=\"name\"\r\n                      label=\"Имя поля\"\r\n                      variant=\"outlined\"\r\n                      value={addMarkdownFieldName}\r\n                      onChange={addMarkdownFieldFormInputHandler}\r\n                      required\r\n                    />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <TextField\r\n                      fullWidth\r\n                      name=\"label\"\r\n                      label=\"Лейбел поля\"\r\n                      variant=\"outlined\"\r\n                      value={addMarkdownFieldLabel}\r\n                      onChange={addMarkdownFieldFormInputHandler}\r\n                      required\r\n                    />\r\n                  </Grid>\r\n                  <Grid>\r\n                    <Button\r\n                      type={'submit'}\r\n                      fullWidth\r\n                      color={'primary'}\r\n                      variant={'contained'}\r\n                    >\r\n                      создать\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </form>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport const AddMarkdownModal$ = createFipc(AddMarkdownModalComponent);\r\n","import { useSelector } from 'react-redux';\r\nimport { RootState } from '../../redux/createStore';\r\nimport { MarkdownFieldList$ } from './MarkdownFieldListComponent';\r\nimport { MarkdowmType } from '../../redux/slices/markdownFieldSlice';\r\n\r\nexport const MarkdownFieldList = MarkdownFieldList$({\r\n  useMarkdownFields: () => {\r\n    const markdownFields = useSelector<RootState, MarkdowmType[]>(\r\n      (state) => state.markdowmField.items\r\n    );\r\n    return { markdownFields };\r\n  },\r\n});\r\n","import React from 'react';\r\nimport { Grid, Card, Button } from '@material-ui/core';\r\nimport { createFipc } from 'react-fipc';\r\nimport { MarkdowmType } from '../../redux/slices/markdownFieldSlice';\r\nimport { DeleteMarkdownModal } from '../deleteModal/DeleteMarkdownModal';\r\nimport { MarkdownCard } from '../MarkdownCard/MarkdownCard.fipc';\r\nimport { useAction } from '../../hooks/use-action';\r\nimport { viewActions } from '../../redux/slices/viewSlice';\r\nimport { AddMarkdownModal } from '../AddMarkdownModal/AddMarkdownModal.fipc';\r\nexport interface MarkdownFieldListComponentHooks {\r\n  useMarkdownFields: () => {\r\n    markdownFields: MarkdowmType[];\r\n  };\r\n}\r\n\r\nexport interface MarkdownFieldListComponentProps\r\n  extends MarkdownFieldListComponentHooks {\r\n  id: number;\r\n}\r\n\r\nexport const MarkdownFieldListComponent: React.FC<MarkdownFieldListComponentProps> = ({\r\n  useMarkdownFields,\r\n  id,\r\n}) => {\r\n  const { markdownFields } = useMarkdownFields();\r\n  const openAddMarkdownFieldModal = useAction(\r\n    viewActions.openAddMarkdownFieldModal\r\n  );\r\n  return (\r\n    <>\r\n      <Grid container spacing={3}>\r\n        {markdownFields.map(({ id }) => {\r\n          return <MarkdownCard id={id} key={id} />;\r\n        })}\r\n        <AddMarkdownModal id={id} />\r\n        <Grid item sm={4}>\r\n          <Card className=\"AddCard\">\r\n            <Button onClick={() => openAddMarkdownFieldModal()} color=\"primary\">\r\n              Добавить поле markdown\r\n            </Button>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n      <DeleteMarkdownModal />\r\n    </>\r\n  );\r\n};\r\n\r\nexport const MarkdownFieldList$ = createFipc(MarkdownFieldListComponent);\r\n","import {\r\n  screensActions,\r\n  asyncScreenActions,\r\n} from '../../redux/slices/screensSlice';\r\nimport { RenameScreenModal$ } from './RenameScreenModalComponent';\r\nimport { useAction } from '../../hooks/use-action';\r\nimport { viewActions } from '../../redux/slices/viewSlice';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../redux/createStore';\r\nimport { useCallback, useEffect } from 'react';\r\n\r\nexport type useRenameScreenType = (\r\n  id: number\r\n) => {\r\n  closeRenameScreenModal: () => void;\r\n  renameScreenModalState: boolean;\r\n  renameScreenName: string;\r\n  renameScreenFormInputHandler: (\r\n    e: React.ChangeEvent<HTMLInputElement>\r\n  ) => void;\r\n  renameScreenFormHandler: (e: React.FormEvent<HTMLFormElement>) => void;\r\n};\r\n\r\nexport const RenameScreenModal = RenameScreenModal$({\r\n  useRenameScreen: (id) => {\r\n    const closeRenameScreenModal = useAction(\r\n      viewActions.closeRenameScreenModal\r\n    );\r\n    const renameScreenModalState = useSelector<RootState, boolean>(\r\n      (state) => state.view.RenameScreenModal\r\n    );\r\n    const renameScreenName = useSelector<RootState, string | null>(\r\n      (state) =>\r\n        state.screens.screensList.find((screen) => screen.id === id)\r\n          ?.renameScreenName ?? null\r\n    );\r\n    const nameScreen = useSelector<RootState, string>(\r\n      (state) =>\r\n        state.screens.screensList.find((screen) => screen.id === id)?.name ?? ''\r\n    );\r\n\r\n    const setRenameScreenName = useAction(screensActions.setRenameScreenName);\r\n\r\n    const renameScreenFormInputHandler = useCallback((e) => {\r\n      const name = e.target.name;\r\n      const value = e.target.value;\r\n      switch (name) {\r\n        case 'name':\r\n          setRenameScreenName({\r\n            id,\r\n            name: value,\r\n          });\r\n          break;\r\n      }\r\n    }, []);\r\n\r\n    const renameScreen_async = useAction(asyncScreenActions.renameScreen_async);\r\n    const renameScreenFormHandler = useCallback(\r\n      (e) => {\r\n        e.preventDefault();\r\n        renameScreen_async(id);\r\n      },\r\n      [id, renameScreen_async]\r\n    );\r\n\r\n    return {\r\n      closeRenameScreenModal,\r\n      renameScreenModalState,\r\n      renameScreenName: renameScreenName ? renameScreenName : nameScreen,\r\n      renameScreenFormInputHandler,\r\n      renameScreenFormHandler,\r\n    };\r\n  },\r\n});\r\n","import {\r\n  Modal,\r\n  Grid,\r\n  Card,\r\n  CardHeader,\r\n  IconButton,\r\n  CardContent,\r\n  TextField,\r\n  Button,\r\n} from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport React from 'react';\r\nimport { createFipc } from 'react-fipc';\r\nimport { useRenameScreenType } from './RenameScreenModal.fipc';\r\n\r\nexport type RenameScreenComponentProps = {\r\n  id: number;\r\n  useRenameScreen: useRenameScreenType;\r\n};\r\n\r\nexport const RenameScreenModalComponent: React.FC<RenameScreenComponentProps> = ({\r\n  id,\r\n  useRenameScreen,\r\n}) => {\r\n  const {\r\n    closeRenameScreenModal,\r\n    renameScreenModalState,\r\n    renameScreenName,\r\n    renameScreenFormInputHandler,\r\n    renameScreenFormHandler,\r\n  } = useRenameScreen(id);\r\n  return (\r\n    <Modal\r\n      open={renameScreenModalState}\r\n      onClose={() => closeRenameScreenModal()}\r\n      aria-labelledby=\"simple-modal-title\"\r\n      aria-describedby=\"simple-modal-description\"\r\n    >\r\n      <div className=\"modal-wrapper modal-wrapper--big\">\r\n        <Grid item sm={12}>\r\n          <Card>\r\n            <CardHeader\r\n              title=\"Изменить имя скрина\"\r\n              action={\r\n                <IconButton\r\n                  onClick={() => closeRenameScreenModal()}\r\n                  aria-label=\"settings\"\r\n                >\r\n                  <CloseIcon />\r\n                </IconButton>\r\n              }\r\n            />\r\n            <CardContent>\r\n              <form onSubmit={renameScreenFormHandler}>\r\n                <Grid container spacing={2} direction={'column'}>\r\n                  <Grid item>\r\n                    <TextField\r\n                      fullWidth\r\n                      name=\"name\"\r\n                      label=\"Имя поля\"\r\n                      variant=\"outlined\"\r\n                      value={renameScreenName}\r\n                      onChange={renameScreenFormInputHandler}\r\n                      required\r\n                    />\r\n                  </Grid>\r\n                  <Grid>\r\n                    <Button\r\n                      type={'submit'}\r\n                      fullWidth\r\n                      color={'primary'}\r\n                      variant={'contained'}\r\n                    >\r\n                      изменить\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </form>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport const RenameScreenModal$ = createFipc(RenameScreenModalComponent);\r\n","import React from 'react';\r\nimport { Layout } from '../Layout/Layout';\r\nimport { createFipc } from 'react-fipc';\r\nimport { Loader } from '../Loader/Loader';\r\nimport { TextFieldList } from '../TextFieldList/TextFieldList.fipc';\r\nimport { ImgFieldList } from '../ImgFieldList/ImgFieldList.fipc';\r\nimport { MarkdownFieldList } from '../MarkdownFieldList/MarkdownFieldList.fipc';\r\nimport './Screen.scss';\r\nimport { RenameScreenModal } from '../RenameScreenModal/RenameScreenModal.fipc';\r\nimport { AddScreenModal } from '../AddScreenModal/AddScreenModal.fipc';\r\nimport { DeleteModalScreen } from '../deleteModal/deleteModalScreen';\r\nimport { Redirect } from 'react-router-dom';\r\nexport interface ScreenHooks {\r\n  useScreen: () => {\r\n    isLoading: boolean;\r\n    id: number;\r\n    name: string | undefined;\r\n  };\r\n}\r\n\r\nexport interface ScreenProps extends ScreenHooks {\r\n  className?: string;\r\n}\r\n\r\nconst Screen: React.FC<ScreenProps> = ({ children, className, useScreen }) => {\r\n  const { isLoading, id, name } = useScreen();\r\n  if (!name) {\r\n    return <Redirect to=\"/draws\" />;\r\n  }\r\n  return (\r\n    <Layout title={name ?? ''} isScreen={true} id={id}>\r\n      <Loader isLoading={isLoading} />\r\n      <TextFieldList id={id} />\r\n      <ImgFieldList id={id} />\r\n      <MarkdownFieldList id={id} />\r\n      <RenameScreenModal id={id} />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport const Screen$ = createFipc(Screen);\r\n","import { Screen$ } from './Screen';\r\nimport { useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useAction } from '../../hooks/use-action';\r\nimport { asyncScreenActions } from '../../redux/slices/screensSlice';\r\nimport { RootState } from '../../redux/createStore';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst useIsLoading = (id: number) => {\r\n  const isLoading = useSelector<RootState, boolean>(\r\n    (state) =>\r\n      state.screens.screensList.find((screen) => screen.id === id)?.isLoading ??\r\n      false\r\n  );\r\n  return {\r\n    isLoading,\r\n  };\r\n};\r\n\r\nconst useFields = (id: number) => {\r\n  const getScreen = useAction(asyncScreenActions.getScreen);\r\n  useEffect(() => {\r\n    getScreen(id);\r\n  }, [id]);\r\n};\r\n\r\nexport const Screen = Screen$({\r\n  useScreen: () => {\r\n    const { id: ParamId } = useParams<{ id: string }>();\r\n    const id = parseInt(ParamId);\r\n    const { isLoading } = useIsLoading(id);\r\n    // const screendsList;\r\n\r\n    const name = useSelector<RootState, string | undefined>(\r\n      (state) =>\r\n        state.screens.screensList.find((screen) => screen.id === id)?.name\r\n    );\r\n    useFields(id);\r\n    return {\r\n      isLoading,\r\n      id,\r\n      name,\r\n    };\r\n  },\r\n});\r\n","import React, { ComponentType, ReactNode } from 'react';\r\nimport { Route, BrowserRouter, Switch } from 'react-router-dom';\r\nimport { Nav$ } from '../Nav/Nav.fipc';\r\nimport { Hook } from '../../hooks/types';\r\nimport { Auth } from '../auth/Auth.fipc';\r\nimport { createFipc } from 'react-fipc';\r\nimport { Screen } from '../Screen/Screen.fipc';\r\nimport { NotificationContainer } from 'react-notifications';\r\nimport { Loader } from '../Loader/Loader';\r\nexport type PathList = {\r\n  path: string;\r\n  name: string;\r\n  component?: ComponentType;\r\n  icon?: ReactNode;\r\n}[];\r\n\r\nexport type NavigationHooks = {\r\n  useMainRouts: Hook<PathList>;\r\n  useAdditionalRouts: Hook<PathList>;\r\n  useScreenRouts: Hook<PathList>;\r\n  useIsAuth: Hook<boolean>;\r\n  useIsLoadingApp: Hook<boolean>;\r\n};\r\nexport interface NavigationProps extends NavigationHooks {}\r\nexport const NavigationComponent: React.FC<NavigationProps> = ({\r\n  useMainRouts,\r\n  useAdditionalRouts,\r\n  useScreenRouts,\r\n  useIsAuth,\r\n  useIsLoadingApp,\r\n}) => {\r\n  const mainRouts = useMainRouts();\r\n  const additionalRouts = useAdditionalRouts();\r\n  const screensRouts = useScreenRouts();\r\n  const isAuth = useIsAuth();\r\n  const isLoading = useIsLoadingApp();\r\n  return (\r\n    <BrowserRouter>\r\n      <NotificationContainer />\r\n      <Loader isLoading={isLoading} />\r\n      {isAuth ? (\r\n        <>\r\n          <Nav$ $render mainLinks={mainRouts} screenLinks={screensRouts} />\r\n          <Switch>\r\n            <Route path={`/screen/:id`} component={Screen} />\r\n\r\n            {mainRouts.map(({ path, component }) => (\r\n              <Route path={path} key={path} component={component} />\r\n            ))}\r\n            {additionalRouts.map(({ path, component }) => (\r\n              <Route path={path} key={path} component={component} />\r\n            ))}\r\n          </Switch>\r\n        </>\r\n      ) : (\r\n        <Auth />\r\n      )}\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport const Navigation$ = createFipc(NavigationComponent);\r\n","import * as Yup from 'yup';\r\n\r\nexport const addDrawModalValidSchema = Yup.object().shape({\r\n  start: Yup.string().required('Укажите начало розыгрыша'),\r\n  end: Yup.string().required('Укажите конец розыгрыша'),\r\n  description: Yup.string().required('Укажите описание розыгрыша'),\r\n  sLimit: Yup.number().required('Укажите минимальную сумму чека'),\r\n  qrLimit: Yup.number().required(\r\n    'Укажите максимальное количество qr-кодов в день'\r\n  ),\r\n  qrLimitPeriodMS: Yup.number().required(\r\n    'Укажите максимальное количество qr-кодов за все время розыгрыша'\r\n  ),\r\n});\r\n","import {\r\n  Modal,\r\n  Grid,\r\n  Card,\r\n  CardHeader,\r\n  IconButton,\r\n  CardContent,\r\n  TextField,\r\n  Button,\r\n} from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport React from 'react';\r\nimport { useAddDrawModalProps } from './AddDrawModal.fipc';\r\nimport { createFipc } from 'react-fipc';\r\nimport { Formik } from 'formik';\r\nimport { addDrawModalValidSchema } from './addDrawModalValidSchem';\r\n\r\nexport interface initialValuesType {\r\n  start: string;\r\n  end: string;\r\n  description: string;\r\n  sLimit: string;\r\n  qrLimit: string;\r\n  qrLimitPeriodMS: string;\r\n}\r\n\r\ntype AddDrawModalProps = {\r\n  useAddDrawModalProps: useAddDrawModalProps;\r\n  useInitialValues: () => initialValuesType;\r\n};\r\n\r\nexport const AddDrawModalComponent: React.FC<AddDrawModalProps> = ({\r\n  useAddDrawModalProps,\r\n  useInitialValues,\r\n}) => {\r\n  const {\r\n    addDrawFormHandler,\r\n    addDrawModalState,\r\n    closeAddDrawModal,\r\n  } = useAddDrawModalProps();\r\n  const initialValues = useInitialValues();\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validateOnChange={false}\r\n      validateOnBlur={false}\r\n      validationSchema={addDrawModalValidSchema}\r\n      onSubmit={(values, action) => {\r\n        addDrawFormHandler(values, action);\r\n      }}\r\n    >\r\n      {(formik) => {\r\n        return (\r\n          <Modal\r\n            open={addDrawModalState}\r\n            onClose={closeAddDrawModal}\r\n            aria-labelledby=\"simple-modal-title\"\r\n            aria-describedby=\"simple-modal-description\"\r\n          >\r\n            <div className=\"modal-wrapper modal-wrapper--big\">\r\n              <Grid item sm={12}>\r\n                <Card>\r\n                  <CardHeader\r\n                    title=\"Добавить новый розыгрыш\"\r\n                    action={\r\n                      <IconButton\r\n                        onClick={() => closeAddDrawModal()}\r\n                        aria-label=\"settings\"\r\n                      >\r\n                        <CloseIcon />\r\n                      </IconButton>\r\n                    }\r\n                  />\r\n                  <CardContent>\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                      <Grid container spacing={2} direction={'column'}>\r\n                        <Grid item>\r\n                          <TextField\r\n                            fullWidth\r\n                            name=\"start\"\r\n                            label=\"Начало розыгрыша\"\r\n                            variant=\"outlined\"\r\n                            type=\"date\"\r\n                            error={formik.errors.start ? true : false}\r\n                            helperText={formik.errors.start}\r\n                            value={formik.values.start}\r\n                            onChange={formik.handleChange}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item>\r\n                          <TextField\r\n                            fullWidth\r\n                            name=\"end\"\r\n                            label=\"Конец розыгрыша\"\r\n                            variant=\"outlined\"\r\n                            type=\"date\"\r\n                            error={formik.errors.end ? true : false}\r\n                            helperText={formik.errors.end}\r\n                            value={formik.values.end}\r\n                            onChange={formik.handleChange}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item>\r\n                          <TextField\r\n                            fullWidth\r\n                            name=\"description\"\r\n                            label=\"Описание\"\r\n                            variant=\"outlined\"\r\n                            error={formik.errors.description ? true : false}\r\n                            helperText={formik.errors.description}\r\n                            value={formik.values.description}\r\n                            onChange={formik.handleChange}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item>\r\n                          <TextField\r\n                            fullWidth\r\n                            name=\"sLimit\"\r\n                            label=\"Минимальная сумма чека\"\r\n                            variant=\"outlined\"\r\n                            error={formik.errors.sLimit ? true : false}\r\n                            helperText={formik.errors.sLimit}\r\n                            value={formik.values.sLimit}\r\n                            onChange={formik.handleChange}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item>\r\n                          <TextField\r\n                            fullWidth\r\n                            name=\"qrLimit\"\r\n                            label=\"Максимальное количество qr-кодов в день\"\r\n                            variant=\"outlined\"\r\n                            error={formik.errors.qrLimit ? true : false}\r\n                            helperText={formik.errors.qrLimit}\r\n                            value={formik.values.qrLimit}\r\n                            onChange={formik.handleChange}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item>\r\n                          <TextField\r\n                            fullWidth\r\n                            name=\"qrLimitPeriodMS\"\r\n                            label=\"Время сброса дневного лимита (в часах)\"\r\n                            variant=\"outlined\"\r\n                            error={formik.errors.qrLimitPeriodMS ? true : false}\r\n                            helperText={formik.errors.qrLimitPeriodMS}\r\n                            value={formik.values.qrLimitPeriodMS}\r\n                            onChange={formik.handleChange}\r\n                          />\r\n                        </Grid>\r\n                        <Grid>\r\n                          <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            color={'primary'}\r\n                            variant={'contained'}\r\n                          >\r\n                            создать\r\n                          </Button>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </form>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            </div>\r\n          </Modal>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport const AddDrawModal$ = createFipc(AddDrawModalComponent);\r\n","import { drawListActions } from './../../redux/slices/draw/drawListSlice';\r\nimport { AddDrawModal$, initialValuesType } from './AddDrawModal';\r\nimport { useAction } from '../../hooks/use-action';\r\nimport { viewActions } from '../../redux/slices/viewSlice';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../redux/createStore';\r\nimport { useCallback } from 'react';\r\nimport { FormikHelpers } from 'formik';\r\nimport { format } from 'date-fns';\r\nimport { drawViewActions } from '../../redux/slices/draw/drawView';\r\n\r\nexport type useAddDrawModalProps = () => {\r\n  closeAddDrawModal: () => void;\r\n  addDrawModalState: boolean;\r\n  addDrawFormHandler: (\r\n    values: initialValuesType,\r\n    action: FormikHelpers<initialValuesType>\r\n  ) => void;\r\n};\r\n\r\nexport const AddDrawModal = AddDrawModal$({\r\n  useAddDrawModalProps: () => {\r\n    const closeAddDrawModal = useAction(drawViewActions.closeAddDrawModal);\r\n    const addDrawModalState = useSelector<RootState, boolean>(\r\n      (state) => state.draws.view.AddDrawdModal\r\n    );\r\n    const addDrawAsync = useAction(drawListActions.add);\r\n    const addDrawFormHandler = useCallback(\r\n      (values: initialValuesType, action: FormikHelpers<initialValuesType>) => {\r\n        addDrawAsync({ values, action });\r\n      },\r\n      [addDrawAsync]\r\n    );\r\n\r\n    return {\r\n      addDrawFormHandler,\r\n      addDrawModalState,\r\n      closeAddDrawModal,\r\n    };\r\n  },\r\n  useInitialValues: () => {\r\n    const startDate = Date.now();\r\n    const endDate = Date.now();\r\n    const start = format(startDate, `yyyy-MM-dd`);\r\n    const end = format(endDate, `yyyy-MM-dd`);\r\n    return {\r\n      start: start,\r\n      end: end,\r\n      description: '',\r\n      sLimit: '',\r\n      qrLimit: '',\r\n      qrLimitPeriodMS: '',\r\n    };\r\n  },\r\n});\r\n","import React from 'react';\r\nimport { createFipc } from 'react-fipc';\r\nimport { Loader } from '../Loader/Loader';\r\nimport { DrawCardHooks } from './DrawCard.fipc';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\r\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport './DrawCard.scss';\r\nimport { IconButton } from '@material-ui/core';\r\nimport { useAction } from '../../hooks/use-action';\r\nimport { viewActions } from '../../redux/slices/viewSlice';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport { drawViewActions } from '../../redux/slices/draw/drawView';\r\nexport interface DrawCardProps extends DrawCardHooks {\r\n  className?: string;\r\n  multiline?: boolean;\r\n  id: number;\r\n  description: string;\r\n  start: string;\r\n  end: string;\r\n  sLimit: number;\r\n  qrLimit: number;\r\n  qrLimitPeriodMS: number;\r\n}\r\n\r\nexport const DrawCardComponent: React.FC<DrawCardProps> = ({\r\n  children,\r\n  className,\r\n  description,\r\n  id,\r\n  start,\r\n  end,\r\n  sLimit,\r\n  qrLimit,\r\n  qrLimitPeriodMS,\r\n  useDraw,\r\n  useOpenUpdateDrawModal,\r\n}) => {\r\n  const { isLoading } = useDraw(id);\r\n  const openDeleteDrawModal = useAction(drawViewActions.openDeleteDrawModal);\r\n  const openUpdateDrawModal = useOpenUpdateDrawModal(id);\r\n  return (\r\n    <>\r\n      <ExpansionPanel className=\"draw-card\">\r\n        <ExpansionPanelSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1a-content\"\r\n        >\r\n          <Loader isLoading={isLoading} />\r\n          <div className=\"draw-card__header\">\r\n            <h3 className=\"draw-card__title\">{description}</h3>\r\n            <div className=\"draw-card__date\">\r\n              <span>{new Date(start).toLocaleDateString('ru')}</span>\r\n              <span>—</span>\r\n              <span>{new Date(end).toLocaleDateString('ru')}</span>\r\n            </div>\r\n            <div className=\"draw-card__delete\">\r\n              <IconButton\r\n                onClick={(e) => {\r\n                  e.stopPropagation();\r\n                  openDeleteDrawModal(id);\r\n                }}\r\n                aria-label=\"settings\"\r\n              >\r\n                <DeleteIcon />\r\n              </IconButton>\r\n              <IconButton onClick={openUpdateDrawModal} aria-label=\"settings\">\r\n                <CreateIcon />\r\n              </IconButton>\r\n            </div>\r\n          </div>\r\n        </ExpansionPanelSummary>\r\n        <ExpansionPanelDetails>\r\n          <div className=\"draw-card__content\">\r\n            <div className=\"draw-card__row\">\r\n              <span className=\"draw-card__name\">Минимальная сумма чека — </span>\r\n              <span>{sLimit == 0 ? 'нет' : `${sLimit} ₽`}</span>\r\n            </div>\r\n            <div className=\"draw-card__row\">\r\n              <span className=\"draw-card__name\">\r\n                Максимальное количество qr-кодов(в штуках) —\r\n              </span>\r\n              <span>{qrLimit == 0 ? 'нет ограничения' : qrLimit}</span>\r\n            </div>\r\n            <div className=\"draw-card__row\">\r\n              <span className=\"draw-card__name\">\r\n                Время сбраса блокировки на загрузку qr-кодов(в часах) —\r\n              </span>\r\n              <span>\r\n                {qrLimitPeriodMS == 0\r\n                  ? 'На период розыгрыша'\r\n                  : Math.floor(qrLimitPeriodMS / 3600 / 1000)}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </ExpansionPanelDetails>\r\n      </ExpansionPanel>\r\n    </>\r\n  );\r\n};\r\n\r\nexport const DrawCard$ = createFipc(DrawCardComponent);\r\n","import { useMemo } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport type FunctionType = (...args: any[]) => any;\r\n\r\nexport const useSelectorFactory = <T extends FunctionType>(\r\n  selectorFactory: T,\r\n  ...args: Parameters<T>\r\n): ReturnType<ReturnType<T>> => {\r\n  return useSelector(\r\n    useMemo(() => selectorFactory(...args), [...args, selectorFactory])\r\n  );\r\n};\r\n","import { DrawCard$ } from './DrawCard';\r\nimport { useAction } from '../../hooks/use-action';\r\nimport { drawUpdateActions } from '../../redux/slices/draw/drawUpdateSlice';\r\nimport { viewActions } from '../../redux/slices/viewSlice';\r\nimport { useSelectorFactory } from '../../hooks/use-selector-factory';\r\nimport { drawIsLoadingFactory } from '../../redux/slices/draw/drawSelectors';\r\nimport { drawViewActions } from '../../redux/slices/draw/drawView';\r\n\r\nexport interface DrawCardHooks {\r\n  useDraw: (\r\n    id: number\r\n  ) => {\r\n    isLoading: boolean;\r\n  };\r\n  useOpenUpdateDrawModal: (\r\n    id: number\r\n  ) => (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\r\n}\r\n\r\nexport const DrawCard = DrawCard$({\r\n  useDraw: (id) => {\r\n    const isLoading = useSelectorFactory(drawIsLoadingFactory, id);\r\n    return {\r\n      isLoading,\r\n    };\r\n  },\r\n  useOpenUpdateDrawModal: (id) => {\r\n    const openUpdateDrawModal = useAction(drawUpdateActions.set);\r\n    const openUpdateViewModal = useAction(drawViewActions.openUpdateModal);\r\n    return (e) => {\r\n      e.stopPropagation();\r\n      openUpdateDrawModal(id);\r\n      openUpdateViewModal();\r\n    };\r\n  },\r\n});\r\n","import { DeleteModal$ } from './deleteModal';\r\nimport { useAction } from '../../hooks/use-action';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../redux/createStore';\r\nimport { drawListActions } from '../../redux/slices/draw/drawListSlice';\r\nimport { drawViewActions } from '../../redux/slices/draw/drawView';\r\n\r\nexport const DeleteModalDraw = DeleteModal$({\r\n  useHandlerClick: () => {\r\n    return useAction(drawListActions.delete);\r\n  },\r\n  useDeleteModalClose: () => {\r\n    return useAction(drawViewActions.closeDeleteDrawModal);\r\n  },\r\n  useIsDeleteModal: () => {\r\n    return useSelector<RootState, boolean>(\r\n      (state) => state.draws.view.DrawDeteleModal.isDrawDeteleModal\r\n    );\r\n  },\r\n  useGetId: () => {\r\n    return useSelector<RootState, number>(\r\n      (state) => state.draws.view.DrawDeteleModal.idDraw\r\n    );\r\n  },\r\n  useTitle: () => 'Вы точно хотите удалить этот розыгрыш?',\r\n});\r\n","import * as Yup from 'yup';\r\n\r\nexport const updateDrawModalValidSchema = Yup.object().shape({\r\n  sLimit: Yup.number().required('Укажите минимальную сумму чека'),\r\n  qrLimit: Yup.number().required(\r\n    'Укажите максимальное количество qr-кодов в день'\r\n  ),\r\n  qrLimitPeriodMS: Yup.number().required(\r\n    'Укажите максимальное количество qr-кодов за все время розыгрыша'\r\n  ),\r\n});\r\n","import { drawListActions } from '../../redux/slices/draw/drawListSlice';\r\nimport { UpdateDrawModal$, initialUpdateValuesType } from './UpdateDrawModal';\r\nimport { useAction } from '../../hooks/use-action';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../redux/createStore';\r\nimport { useCallback } from 'react';\r\nimport { FormikHelpers } from 'formik';\r\nimport { drawViewActions } from '../../redux/slices/draw/drawView';\r\n\r\nexport type useUpdateModalProps = () => {\r\n  updateFormHandler: (\r\n    values: initialUpdateValuesType,\r\n    action: FormikHelpers<initialUpdateValuesType>\r\n  ) => void;\r\n};\r\n\r\nexport const UpdateDrawModal = UpdateDrawModal$({\r\n  useUpdateModalProps: () => {\r\n    const updateDrawAsync = useAction(drawListActions.update);\r\n    const updateFormHandler = useCallback(\r\n      (values, action) => {\r\n        updateDrawAsync({ values, action });\r\n      },\r\n      [updateDrawAsync]\r\n    );\r\n\r\n    return {\r\n      updateFormHandler,\r\n    };\r\n  },\r\n  useCloseUpdateModal: () => useAction(drawViewActions.closeUpdateModal),\r\n  useUpdateModalState: () =>\r\n    useSelector<RootState, boolean>(\r\n      (state) => state.draws.view.updateDrawModal\r\n    ),\r\n  useInitialValues: () => {\r\n    return {\r\n      sLimit: '',\r\n      qrLimit: '',\r\n      qrLimitPeriodMS: '',\r\n    };\r\n  },\r\n});\r\n","import {\r\n  Modal,\r\n  Grid,\r\n  Card,\r\n  CardHeader,\r\n  IconButton,\r\n  CardContent,\r\n  TextField,\r\n  Button,\r\n} from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport React from 'react';\r\nimport { useUpdateModalProps } from './UpdateDrawModal.fipc';\r\nimport { createFipc } from 'react-fipc';\r\nimport { Formik } from 'formik';\r\nimport { updateDrawModalValidSchema } from './UpdateDrawModalValidSchem';\r\n\r\nexport interface initialUpdateValuesType {\r\n  sLimit: string;\r\n  qrLimit: string;\r\n  qrLimitPeriodMS: string;\r\n}\r\n\r\ntype UpdateModalProps = {\r\n  useUpdateModalProps: useUpdateModalProps;\r\n  useInitialValues: () => initialUpdateValuesType;\r\n  useCloseUpdateModal: () => () => void;\r\n  useUpdateModalState: () => boolean;\r\n};\r\n\r\nexport const UpdateModalComponent: React.FC<UpdateModalProps> = ({\r\n  useUpdateModalProps,\r\n  useInitialValues,\r\n  useCloseUpdateModal,\r\n  useUpdateModalState,\r\n}) => {\r\n  const { updateFormHandler } = useUpdateModalProps();\r\n  const initialValues = useInitialValues();\r\n  const closeUpdateModal = useCloseUpdateModal();\r\n  const updateModalState = useUpdateModalState();\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validateOnChange={false}\r\n      validateOnBlur={false}\r\n      validationSchema={updateDrawModalValidSchema}\r\n      onSubmit={(values, action) => {\r\n        updateFormHandler(values, action);\r\n      }}\r\n    >\r\n      {(formik) => {\r\n        return (\r\n          <Modal\r\n            open={updateModalState}\r\n            onClose={closeUpdateModal}\r\n            aria-labelledby=\"simple-modal-title\"\r\n            aria-describedby=\"simple-modal-description\"\r\n          >\r\n            <div className=\"modal-wrapper modal-wrapper--big\">\r\n              <Grid item sm={12}>\r\n                <Card>\r\n                  <CardHeader\r\n                    title=\"Изменить розыгрыш\"\r\n                    action={\r\n                      <IconButton\r\n                        onClick={() => closeUpdateModal()}\r\n                        aria-label=\"settings\"\r\n                      >\r\n                        <CloseIcon />\r\n                      </IconButton>\r\n                    }\r\n                  />\r\n                  <CardContent>\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                      <Grid container spacing={2} direction={'column'}>\r\n                        <Grid item>\r\n                          <TextField\r\n                            fullWidth\r\n                            name=\"sLimit\"\r\n                            label=\"Минимальная сумма чека\"\r\n                            variant=\"outlined\"\r\n                            error={formik.errors.sLimit ? true : false}\r\n                            helperText={formik.errors.sLimit}\r\n                            value={formik.values.sLimit}\r\n                            onChange={formik.handleChange}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item>\r\n                          <TextField\r\n                            fullWidth\r\n                            name=\"qrLimit\"\r\n                            label=\"Максимальное количество qr-кодов в день\"\r\n                            variant=\"outlined\"\r\n                            error={formik.errors.qrLimit ? true : false}\r\n                            helperText={formik.errors.qrLimit}\r\n                            value={formik.values.qrLimit}\r\n                            onChange={formik.handleChange}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item>\r\n                          <TextField\r\n                            fullWidth\r\n                            name=\"qrLimitPeriodMS\"\r\n                            label=\"Время сброса дневного лимита (в часах)\"\r\n                            variant=\"outlined\"\r\n                            error={formik.errors.qrLimitPeriodMS ? true : false}\r\n                            helperText={formik.errors.qrLimitPeriodMS}\r\n                            value={formik.values.qrLimitPeriodMS}\r\n                            onChange={formik.handleChange}\r\n                          />\r\n                        </Grid>\r\n                        <Grid>\r\n                          <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            color={'primary'}\r\n                            variant={'contained'}\r\n                          >\r\n                            изменить\r\n                          </Button>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </form>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            </div>\r\n          </Modal>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport const UpdateDrawModal$ = createFipc(UpdateModalComponent);\r\n","import { DrawNowCard$ } from './DrawNowCard';\r\nimport { useSelectorFactory } from '../../hooks/use-selector-factory';\r\nimport { drawIsLoadingFactory } from '../../redux/slices/draw/drawSelectors';\r\nimport { useAction } from '../../hooks/use-action';\r\nimport { drawUpdateActions } from '../../redux/slices/draw/drawUpdateSlice';\r\nimport { drawViewActions } from '../../redux/slices/draw/drawView';\r\n\r\nexport interface DrawNowCardHooks {\r\n  useNowDraw: (\r\n    id: number\r\n  ) => {\r\n    isLoading: boolean;\r\n  };\r\n  useOpenUpdateDrawModal: (\r\n    id: number\r\n  ) => (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\r\n  useOpenDeleteDrawModal: (\r\n    id: number\r\n  ) => (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\r\n  useOpenNextDrawModal: () => (\r\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n  ) => void;\r\n}\r\n\r\nexport const DrawNowCard = DrawNowCard$({\r\n  useNowDraw: (id) => {\r\n    const isLoading = useSelectorFactory(drawIsLoadingFactory, id);\r\n    return {\r\n      isLoading,\r\n    };\r\n  },\r\n  useOpenUpdateDrawModal: (id) => {\r\n    const openUpdateDrawModal = useAction(drawUpdateActions.set);\r\n    const openUpdateViewModal = useAction(drawViewActions.openUpdateModal);\r\n    return (e) => {\r\n      e.stopPropagation();\r\n      openUpdateDrawModal(id);\r\n      openUpdateViewModal();\r\n    };\r\n  },\r\n  useOpenDeleteDrawModal: (id) => {\r\n    const openDeleteDrawModal = useAction(drawViewActions.openDeleteDrawModal);\r\n    return (e) => {\r\n      e.stopPropagation();\r\n      openDeleteDrawModal(id);\r\n    };\r\n  },\r\n  useOpenNextDrawModal: () => {\r\n    const openNextDrawModal = useAction(drawViewActions.openNextDrawModal);\r\n    return (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n      e.stopPropagation();\r\n      openNextDrawModal();\r\n    };\r\n  },\r\n});\r\n","import React from 'react';\r\nimport { createFipc } from 'react-fipc';\r\nimport { Loader } from '../Loader/Loader';\r\nimport { DrawNowCardHooks } from './DrawNowCard.fipc';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {\r\n  IconButton,\r\n  Grid,\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Button,\r\n} from '@material-ui/core';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport './DrawNowCard.scss';\r\n\r\nexport interface DrawNowCardProps extends DrawNowCardHooks {\r\n  className?: string;\r\n  multiline?: boolean;\r\n  id: number;\r\n  description: string;\r\n  start: string;\r\n  end: string;\r\n  sLimit: number;\r\n  qrLimit: number;\r\n  qrLimitPeriodMS: number;\r\n}\r\n\r\nexport const DrawNowCardComponent: React.FC<DrawNowCardProps> = ({\r\n  children,\r\n  className,\r\n  description,\r\n  id,\r\n  start,\r\n  end,\r\n  sLimit,\r\n  qrLimit,\r\n  qrLimitPeriodMS,\r\n  useNowDraw,\r\n  useOpenUpdateDrawModal,\r\n  useOpenDeleteDrawModal,\r\n  useOpenNextDrawModal,\r\n}) => {\r\n  const { isLoading } = useNowDraw(id);\r\n  const openUpdateDrawModal = useOpenUpdateDrawModal(id);\r\n  const openDeleteDrawModal = useOpenDeleteDrawModal(id);\r\n  const openNextDrawModal = useOpenNextDrawModal();\r\n  return (\r\n    <Card className=\"card\">\r\n      <Loader isLoading={isLoading} />\r\n      <CardHeader\r\n        title={description}\r\n        action={\r\n          <>\r\n            <IconButton onClick={openDeleteDrawModal} aria-label=\"settings\">\r\n              <DeleteIcon />\r\n            </IconButton>\r\n            <IconButton onClick={openUpdateDrawModal} aria-label=\"settings\">\r\n              <CreateIcon />\r\n            </IconButton>\r\n            <IconButton onClick={openNextDrawModal} aria-label=\"settings\">\r\n              <AddIcon />\r\n            </IconButton>\r\n          </>\r\n        }\r\n      />\r\n      <CardContent>\r\n        <div className=\"draw-card__content\">\r\n          <div className=\"draw-card__row\">\r\n            <span className=\"draw-card__name\">Минимальная сумма чека — </span>\r\n            <span>{sLimit == 0 ? 'нет' : `${sLimit} ₽`}</span>\r\n          </div>\r\n          <div className=\"draw-card__row\">\r\n            <span className=\"draw-card__name\">\r\n              Максимальное количество qr-кодов(в штуках) —\r\n            </span>\r\n            <span>{qrLimit == 0 ? 'нет ограничения' : qrLimit}</span>\r\n          </div>\r\n          <div className=\"draw-card__row\">\r\n            <span className=\"draw-card__name\">\r\n              Время сбраса блокировки на загрузку qr-кодов(в часах) —\r\n            </span>\r\n            <span>\r\n              {qrLimitPeriodMS == 0\r\n                ? 'На период розыгрыша'\r\n                : Math.floor(qrLimitPeriodMS / 3600 / 1000)}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport const DrawNowCard$ = createFipc(DrawNowCardComponent);\r\n","import { AddNextDrawModal$, initialNextValuesType } from './AddNextDrawModal';\r\nimport { useAction } from '../../hooks/use-action';\r\nimport { viewActions } from '../../redux/slices/viewSlice';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../redux/createStore';\r\nimport { useCallback } from 'react';\r\nimport { FormikHelpers } from 'formik';\r\nimport { format } from 'date-fns';\r\nimport { drawNowEndSelector } from '../../redux/slices/draw/drawSelectors';\r\nimport { nextDrawActions } from '../../redux/slices/draw/nextDrawSlice';\r\nimport { drawViewActions } from '../../redux/slices/draw/drawView';\r\n\r\nexport type useAddNextDrawModalProps = () => {\r\n  closeAddNextDrawModal: () => void;\r\n  addNextDrawModalState: boolean;\r\n  addNextDrawFormHandler: (\r\n    values: initialNextValuesType,\r\n    action: FormikHelpers<initialNextValuesType>\r\n  ) => void;\r\n};\r\n\r\nexport const AddNextDrawModal = AddNextDrawModal$({\r\n  useAddNextDrawModalProps: () => {\r\n    const closeAddNextDrawModal = useAction(drawViewActions.closeNextDrawModal);\r\n    const addNextDrawModalState = useSelector<RootState, boolean>(\r\n      (state) => state.draws.view.nextDrawModal\r\n    );\r\n    const nextDraw = useAction(nextDrawActions.nextDraw);\r\n    const addNextDrawFormHandler = useCallback(\r\n      (\r\n        values: initialNextValuesType,\r\n        action: FormikHelpers<initialNextValuesType>\r\n      ) => {\r\n        nextDraw({ values, action });\r\n      },\r\n      []\r\n    );\r\n\r\n    return {\r\n      addNextDrawFormHandler,\r\n      addNextDrawModalState,\r\n      closeAddNextDrawModal,\r\n    };\r\n  },\r\n  useInitialValues: (startDraw: string) => {\r\n    return {\r\n      end: startDraw,\r\n      description: '',\r\n      sLimit: '',\r\n      qrLimit: '',\r\n      qrLimitPeriodMS: '',\r\n    };\r\n  },\r\n  useStartDraw: () => {\r\n    const endNowDate: string = useSelector(drawNowEndSelector);\r\n    const startDate = endNowDate === '' ? Date.now() : new Date(endNowDate);\r\n    const start = format(startDate, `yyyy-MM-dd`);\r\n    return start;\r\n  },\r\n});\r\n","import {\r\n  Modal,\r\n  Grid,\r\n  Card,\r\n  CardHeader,\r\n  IconButton,\r\n  CardContent,\r\n  TextField,\r\n  Button,\r\n} from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport React from 'react';\r\nimport { useAddNextDrawModalProps } from './AddNextDrawModal.fipc';\r\nimport { createFipc } from 'react-fipc';\r\nimport { Formik } from 'formik';\r\nimport { addNextDrawModalValidSchema } from './addNextDrawModalValidSchem';\r\n\r\nexport interface initialNextValuesType {\r\n  end: string;\r\n  description: string;\r\n  sLimit: string;\r\n  qrLimit: string;\r\n  qrLimitPeriodMS: string;\r\n}\r\n\r\ntype AddNextDrawModalProps = {\r\n  useAddNextDrawModalProps: useAddNextDrawModalProps;\r\n  useInitialValues: (startDraw: string) => initialNextValuesType;\r\n  useStartDraw: () => string;\r\n};\r\n\r\nexport const AddNextDrawModalComponent: React.FC<AddNextDrawModalProps> = ({\r\n  useAddNextDrawModalProps,\r\n  useInitialValues,\r\n  useStartDraw,\r\n}) => {\r\n  const {\r\n    addNextDrawFormHandler,\r\n    addNextDrawModalState,\r\n    closeAddNextDrawModal,\r\n  } = useAddNextDrawModalProps();\r\n  const startDraw = useStartDraw();\r\n  const initialValues = useInitialValues(startDraw);\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validateOnChange={false}\r\n      validateOnBlur={false}\r\n      // validationSchema={addNextDrawModalValidSchema}\r\n      onSubmit={(values, action) => {\r\n        addNextDrawFormHandler(values, action);\r\n      }}\r\n    >\r\n      {(formik) => {\r\n        return (\r\n          <Modal\r\n            open={addNextDrawModalState}\r\n            onClose={closeAddNextDrawModal}\r\n            aria-labelledby=\"simple-modal-title\"\r\n            aria-describedby=\"simple-modal-description\"\r\n          >\r\n            <div className=\"modal-wrapper modal-wrapper--big\">\r\n              <Grid item sm={12}>\r\n                <Card>\r\n                  <CardHeader\r\n                    title=\"Добавить следующий розыгрыш\"\r\n                    action={\r\n                      <IconButton\r\n                        onClick={() => closeAddNextDrawModal()}\r\n                        aria-label=\"settings\"\r\n                      >\r\n                        <CloseIcon />\r\n                      </IconButton>\r\n                    }\r\n                  />\r\n                  <CardContent>\r\n                    <form onSubmit={formik.handleSubmit}>\r\n                      <Grid container spacing={2} direction={'column'}>\r\n                        <Grid item>\r\n                          <TextField\r\n                            fullWidth\r\n                            name=\"start\"\r\n                            label=\"Начало розыгрыша\"\r\n                            variant=\"outlined\"\r\n                            type=\"date\"\r\n                            value={startDraw}\r\n                            disabled={true}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item>\r\n                          <TextField\r\n                            fullWidth\r\n                            name=\"end\"\r\n                            label=\"Конец розыгрыша\"\r\n                            variant=\"outlined\"\r\n                            type=\"date\"\r\n                            error={formik.errors.end ? true : false}\r\n                            helperText={formik.errors.end}\r\n                            value={formik.values.end}\r\n                            onChange={formik.handleChange}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item>\r\n                          <TextField\r\n                            fullWidth\r\n                            name=\"description\"\r\n                            label=\"Описание\"\r\n                            variant=\"outlined\"\r\n                            error={formik.errors.description ? true : false}\r\n                            helperText={formik.errors.description}\r\n                            value={formik.values.description}\r\n                            onChange={formik.handleChange}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item>\r\n                          <TextField\r\n                            fullWidth\r\n                            name=\"sLimit\"\r\n                            label=\"Минимальная сумма чека\"\r\n                            variant=\"outlined\"\r\n                            error={formik.errors.sLimit ? true : false}\r\n                            helperText={formik.errors.sLimit}\r\n                            value={formik.values.sLimit}\r\n                            onChange={formik.handleChange}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item>\r\n                          <TextField\r\n                            fullWidth\r\n                            name=\"qrLimit\"\r\n                            label=\"Максимальное количество qr-кодов в день\"\r\n                            variant=\"outlined\"\r\n                            error={formik.errors.qrLimit ? true : false}\r\n                            helperText={formik.errors.qrLimit}\r\n                            value={formik.values.qrLimit}\r\n                            onChange={formik.handleChange}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item>\r\n                          <TextField\r\n                            fullWidth\r\n                            name=\"qrLimitPeriodMS\"\r\n                            label=\"Время сброса дневного лимита (в часах)\"\r\n                            variant=\"outlined\"\r\n                            error={formik.errors.qrLimitPeriodMS ? true : false}\r\n                            helperText={formik.errors.qrLimitPeriodMS}\r\n                            value={formik.values.qrLimitPeriodMS}\r\n                            onChange={formik.handleChange}\r\n                          />\r\n                        </Grid>\r\n                        <Grid>\r\n                          <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            color={'primary'}\r\n                            variant={'contained'}\r\n                          >\r\n                            создать\r\n                          </Button>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </form>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            </div>\r\n          </Modal>\r\n        );\r\n      }}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport const AddNextDrawModal$ = createFipc(AddNextDrawModalComponent);\r\n","import {\r\n  drawsListSelector,\r\n  allDrawIsLoadingSelector,\r\n  drawNowSelector,\r\n} from './../../redux/slices/draw/drawSelectors';\r\nimport { viewActions } from './../../redux/slices/viewSlice';\r\nimport { useSelector } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport { DrawsList$ } from './DrawsListComponent';\r\nimport { useAction } from '../../hooks/use-action';\r\nimport { drawListActions } from '../../redux/slices/draw/drawListSlice';\r\nimport { drawViewActions } from '../../redux/slices/draw/drawView';\r\n\r\nexport const DrawsList = DrawsList$({\r\n  useDrawsList: () => {\r\n    const getAllDraw = useAction(drawListActions.getAll);\r\n    useEffect(() => {\r\n      getAllDraw();\r\n    }, []);\r\n  },\r\n\r\n  useIsLoading: () => useSelector(allDrawIsLoadingSelector),\r\n\r\n  useOpenAddDrawModal: () => useAction(drawViewActions.openAddDrawModal),\r\n\r\n  useAllDraw: () => useSelector(drawsListSelector),\r\n  useNowDraw: () => useSelector(drawNowSelector),\r\n});\r\n","import React from 'react';\r\nimport { Layout } from '../Layout/Layout';\r\nimport { createFipc } from 'react-fipc';\r\nimport { Loader } from '../Loader/Loader';\r\nimport { Grid, Card, Button } from '@material-ui/core';\r\nimport { AddDrawModal } from '../AddDrawModal/AddDrawModal.fipc';\r\nimport { DrawCard } from '../DrawCard/DrawCard.fipc';\r\nimport './DrawList.scss';\r\nimport { drawType } from '../../redux/slices/draw/drawListSlice';\r\nimport { DeleteModalDraw } from '../deleteModal/deleteModalDraw';\r\nimport { UpdateDrawModal } from '../UpdateDrawModal/UpdateDrawModal.fipc';\r\nimport { DrawNowCard } from '../DrawNowCard/DrawNowCard.fipc';\r\nimport { AddNextDrawModal } from '../AddNextDrawModal/AddNextDrawModal.fipc';\r\n\r\nexport interface DrawsProps {\r\n  className?: string;\r\n  useDrawsList: () => void;\r\n  useIsLoading: () => boolean;\r\n  useOpenAddDrawModal: () => () => void;\r\n  useAllDraw: () => drawType[];\r\n  useNowDraw: () => drawType | null;\r\n}\r\n\r\nexport const DrawsListComponent: React.FC<DrawsProps> = ({\r\n  useDrawsList,\r\n  useOpenAddDrawModal,\r\n  useAllDraw,\r\n  useIsLoading,\r\n  useNowDraw,\r\n}) => {\r\n  useDrawsList();\r\n  const allDraw = useAllDraw();\r\n  const isLoading = useIsLoading();\r\n  const openAddDrawModal = useOpenAddDrawModal();\r\n  const drowNow = useNowDraw();\r\n  return (\r\n    <Layout title=\"Розыгрыши\">\r\n      <Loader isLoading={isLoading} />\r\n      <div className=\"draw\">\r\n        <h2 className=\"draw__title\">Текущий розыгрыш</h2>\r\n        <div className=\"draw__list\">\r\n          {drowNow ? (\r\n            <>\r\n              <DrawNowCard\r\n                id={drowNow.id}\r\n                key={drowNow.id}\r\n                description={drowNow.description}\r\n                start={drowNow.start}\r\n                end={drowNow.end}\r\n                sLimit={drowNow.sLimit}\r\n                qrLimit={drowNow.qrLimit}\r\n                qrLimitPeriodMS={drowNow.qrLimitPeriodMS}\r\n              />\r\n            </>\r\n          ) : (\r\n            'Текущий розыгрыш не найден'\r\n          )}\r\n        </div>\r\n        <h2 className=\"draw__title\">Все розыгрыши</h2>\r\n        <div className=\"draw__list\">\r\n          {allDraw.map((draw) => {\r\n            return (\r\n              <DrawCard\r\n                id={draw.id}\r\n                key={draw.id}\r\n                description={draw.description}\r\n                start={draw.start}\r\n                end={draw.end}\r\n                sLimit={draw.sLimit}\r\n                qrLimit={draw.qrLimit}\r\n                qrLimitPeriodMS={draw.qrLimitPeriodMS}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n        <Button\r\n          className=\"AddCard draw__AddCard\"\r\n          onClick={() => openAddDrawModal()}\r\n          color=\"primary\"\r\n        >\r\n          Добавить новый розыгрыш\r\n        </Button>\r\n      </div>\r\n      <AddDrawModal />\r\n      <UpdateDrawModal />\r\n      <AddNextDrawModal />\r\n      <DeleteModalDraw />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport const DrawsList$ = createFipc(DrawsListComponent);\r\n","import { RootState } from './../../redux/createStore';\r\nimport { useSelector } from 'react-redux';\r\nimport { CheckoutItem$ } from './CheckoutItemComponent';\r\n\r\nexport const CheckoutItem = CheckoutItem$({\r\n  useCheckoutItem: (id: number) => {\r\n    const isLoading = useSelector<RootState, boolean>(\r\n      (state) =>\r\n        state.checkouts.items.find((checkout) => checkout.id === id)\r\n          ?.isLoading ?? false\r\n    );\r\n    return {\r\n      isLoading,\r\n    };\r\n  },\r\n});\r\n","import { Card, Grid, IconButton } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { createFipc } from 'react-fipc';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport './CheckoutItem.scss';\r\nimport { useAction } from '../../hooks/use-action';\r\nimport { viewActions } from '../../redux/slices/viewSlice';\r\nimport { Loader } from '../Loader/Loader';\r\n\r\nexport type CheckoutItemComponentProps = {\r\n  useCheckoutItem: (\r\n    id: number\r\n  ) => {\r\n    isLoading: boolean;\r\n  };\r\n  name: string;\r\n  address: string;\r\n  id: number;\r\n};\r\n\r\nconst CheckoutItemComponent: React.FC<CheckoutItemComponentProps> = ({\r\n  name,\r\n  useCheckoutItem,\r\n  address,\r\n  children,\r\n  id,\r\n}) => {\r\n  const openDeleteModalCheckout = useAction(\r\n    viewActions.openCheckoutDeleteModal\r\n  );\r\n  const { isLoading } = useCheckoutItem(id);\r\n  return (\r\n    <Grid item sm={4}>\r\n      <Loader isLoading={isLoading} />\r\n      <Card style={{ height: '100%' }}>\r\n        <div className=\"checkout__item\">\r\n          <div className=\"checkout__delete\">\r\n            <IconButton\r\n              onClick={() => openDeleteModalCheckout(id)}\r\n              aria-label=\"settings\"\r\n            >\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </div>\r\n          <div className=\"checkout__row\">\r\n            <span className=\"checkout__name\">Номер кассы</span>\r\n            <span className=\"checkout__value\">{name}</span>\r\n          </div>\r\n          <div className=\"checkout__row\">\r\n            <span className=\"checkout__name\">Адрес кассы</span>\r\n            <span className=\"checkout__value\">{address}</span>\r\n          </div>\r\n        </div>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport const CheckoutItem$ = createFipc(CheckoutItemComponent);\r\n","import { checkoutAsymcActions } from './../../redux/slices/checkoutSlice';\r\nimport { DeleteModal$ } from './deleteModal';\r\nimport { useAction } from '../../hooks/use-action';\r\nimport { viewActions } from '../../redux/slices/viewSlice';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../redux/createStore';\r\n\r\nexport const DeleteModalCheckout = DeleteModal$({\r\n  useHandlerClick: () => {\r\n    return useAction(checkoutAsymcActions.checkoutDelete_async);\r\n  },\r\n  useDeleteModalClose: () => {\r\n    return useAction(viewActions.closeCheckoutDeleteModal);\r\n  },\r\n  useIsDeleteModal: () => {\r\n    return useSelector<RootState, boolean>(\r\n      (state) => state.view.checkoutDeteleModal.isCheckoutDeteleModal\r\n    );\r\n  },\r\n  useGetId: () => {\r\n    return useSelector<RootState, number>(\r\n      (state) => state.view.checkoutDeteleModal.idCheckout\r\n    );\r\n  },\r\n  useTitle: () => 'Вы точно хотите удалить эту кассу?',\r\n});\r\n","import { checkoutAsymcActions } from './../../redux/slices/checkoutSlice';\r\nimport { AddCheckoutModal$ } from './AddCheckoutModal';\r\nimport { useAction } from '../../hooks/use-action';\r\nimport { viewActions } from '../../redux/slices/viewSlice';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../redux/createStore';\r\nimport { useCallback } from 'react';\r\nimport { checkoutActions } from '../../redux/slices/checkoutSlice';\r\n\r\nexport type useAddCheckoutModalProps = () => {\r\n  closeAddCheckoutModal: () => void;\r\n  addCheckoutModalState: boolean;\r\n  addCheckoutFn: string;\r\n  addCheckoutAddress: string;\r\n  addCheckoutFormInputHandler: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  addCheckoutFormHandler: (e: React.FormEvent<HTMLFormElement>) => void;\r\n};\r\n\r\nexport const AddCheckoutModal = AddCheckoutModal$({\r\n  useAddCheckoutModalProps: () => {\r\n    const closeAddCheckoutModal = useAction(viewActions.closeAddCheckoutModal);\r\n    const addCheckoutModalState = useSelector<RootState, boolean>(\r\n      (state) => state.view.AddCheckoutModal\r\n    );\r\n    const addCheckoutFn = useSelector<RootState, string>(\r\n      (state) => state.checkouts.addCheckoutFn\r\n    );\r\n    const addCheckoutAddress = useSelector<RootState, string>(\r\n      (state) => state.checkouts.addCheckoutAddress\r\n    );\r\n\r\n    const setAddFieldAddress = useAction(checkoutActions.setAddCheckoutAddress);\r\n    const setAddFieldFn = useAction(checkoutActions.setAddCheckoutFn);\r\n\r\n    const addCheckoutFormInputHandler = useCallback(\r\n      (e) => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        switch (name) {\r\n          case 'fn':\r\n            setAddFieldFn(value);\r\n            break;\r\n          case 'address':\r\n            setAddFieldAddress(value);\r\n            break;\r\n        }\r\n      },\r\n\r\n      [setAddFieldAddress, setAddFieldFn]\r\n    );\r\n    const addCheckoutAsync = useAction(checkoutAsymcActions.checkoutAdd_async);\r\n    const addCheckoutFormHandler = useCallback(\r\n      (e) => {\r\n        e.preventDefault();\r\n        addCheckoutAsync();\r\n      },\r\n      [addCheckoutAsync]\r\n    );\r\n    return {\r\n      addCheckoutFormHandler,\r\n      addCheckoutModalState,\r\n      addCheckoutFormInputHandler,\r\n      addCheckoutFn,\r\n      addCheckoutAddress,\r\n      closeAddCheckoutModal,\r\n    };\r\n  },\r\n});\r\n","import {\r\n  Modal,\r\n  Grid,\r\n  Card,\r\n  CardHeader,\r\n  IconButton,\r\n  CardContent,\r\n  TextField,\r\n  Button,\r\n} from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport React from 'react';\r\nimport { useAddCheckoutModalProps } from './AddCheckoutModal.fipc';\r\nimport { createFipc } from 'react-fipc';\r\n\r\ntype AddCheckoutModalProps = {\r\n  useAddCheckoutModalProps: useAddCheckoutModalProps;\r\n};\r\n\r\nexport const AddCheckoutModalComponent: React.FC<AddCheckoutModalProps> = ({\r\n  useAddCheckoutModalProps,\r\n}) => {\r\n  const {\r\n    closeAddCheckoutModal,\r\n    addCheckoutAddress,\r\n    addCheckoutFn,\r\n    addCheckoutModalState,\r\n    addCheckoutFormInputHandler,\r\n    addCheckoutFormHandler,\r\n  } = useAddCheckoutModalProps();\r\n  return (\r\n    <Modal\r\n      open={addCheckoutModalState}\r\n      onClose={() => closeAddCheckoutModal()}\r\n      aria-labelledby=\"simple-modal-title\"\r\n      aria-describedby=\"simple-modal-description\"\r\n    >\r\n      <div className=\"modal-wrapper modal-wrapper--big\">\r\n        <Grid item sm={12}>\r\n          <Card>\r\n            <CardHeader\r\n              title=\"Добавить новую кассу\"\r\n              action={\r\n                <IconButton\r\n                  onClick={() => closeAddCheckoutModal()}\r\n                  aria-label=\"settings\"\r\n                >\r\n                  <CloseIcon />\r\n                </IconButton>\r\n              }\r\n            />\r\n            <CardContent>\r\n              <form onSubmit={addCheckoutFormHandler}>\r\n                <Grid container spacing={2} direction={'column'}>\r\n                  <Grid item>\r\n                    <TextField\r\n                      fullWidth\r\n                      name=\"fn\"\r\n                      label=\"Номер кассы\"\r\n                      variant=\"outlined\"\r\n                      value={addCheckoutFn}\r\n                      onChange={addCheckoutFormInputHandler}\r\n                      required\r\n                    />\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <TextField\r\n                      fullWidth\r\n                      name=\"address\"\r\n                      label=\"Адрес кассы\"\r\n                      variant=\"outlined\"\r\n                      value={addCheckoutAddress}\r\n                      onChange={addCheckoutFormInputHandler}\r\n                      required\r\n                    />\r\n                  </Grid>\r\n                  <Grid>\r\n                    <Button\r\n                      type={'submit'}\r\n                      fullWidth\r\n                      color={'primary'}\r\n                      variant={'contained'}\r\n                    >\r\n                      создать\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </form>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport const AddCheckoutModal$ = createFipc(AddCheckoutModalComponent);\r\n","import { RootState } from '../../redux/createStore';\r\nimport { useSelector } from 'react-redux';\r\nimport {\r\n  checkoutAsymcActions,\r\n  CheckoutType,\r\n} from '../../redux/slices/checkoutSlice';\r\nimport { useEffect } from 'react';\r\nimport { Checkout$ } from './CheckoutsListComponent';\r\nimport { useAction } from '../../hooks/use-action';\r\n\r\nexport const Checkout = Checkout$({\r\n  useGetCheckouts: () => {\r\n    const getCheckouts = useAction(checkoutAsymcActions.getAllCheckoutAsync);\r\n    const checkouts = useSelector<RootState, CheckoutType[]>(\r\n      (state) => state.checkouts.items\r\n    );\r\n    useEffect(() => {\r\n      getCheckouts();\r\n    }, []);\r\n    return {\r\n      checkouts,\r\n    };\r\n  },\r\n});\r\n","import React from 'react';\r\nimport { createFipc } from 'react-fipc';\r\nimport { Grid, Button, Card } from '@material-ui/core';\r\nimport { Layout } from '../Layout/Layout';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../redux/createStore';\r\nimport { Loader } from '../Loader/Loader';\r\nimport { CheckoutType } from '../../redux/slices/checkoutSlice';\r\nimport { CheckoutItem } from '../CheckoutItem/CheckoutItem.fipc';\r\nimport { DeleteModalCheckout } from '../deleteModal/deleteModalCheckout';\r\nimport { AddCheckoutModal } from '../AddCheckoutModal/AddCheckoutModal.fipc';\r\nimport { viewActions } from '../../redux/slices/viewSlice';\r\nimport { useAction } from '../../hooks/use-action';\r\n\r\ntype CheckoutComponentProps = {\r\n  useGetCheckouts: () => {\r\n    checkouts: CheckoutType[];\r\n  };\r\n};\r\n\r\nexport const CheckoutComponent: React.FC<CheckoutComponentProps> = ({\r\n  useGetCheckouts,\r\n}) => {\r\n  const { checkouts } = useGetCheckouts();\r\n  const isLoading: boolean = useSelector<RootState, boolean>(\r\n    (state) => state.checkouts.isLoading\r\n  );\r\n  const openAddCheckoutModal = useAction(viewActions.openAddCheckoutModal);\r\n  return (\r\n    <Layout title=\"Кассы\">\r\n      <Loader isLoading={isLoading} />\r\n      <div className=\"Checkout__list\">\r\n        <Grid container spacing={3}>\r\n          {checkouts.map(({ address, fn, id }) => {\r\n            return <CheckoutItem id={id} name={fn} address={address} />;\r\n          })}\r\n          <AddCheckoutModal />\r\n          <CheckoutItem\r\n            id={1}\r\n            name={'123456789098765'}\r\n            address={\r\n              'Проспект ленина 27 кв 23 Проспект ленина 27 кв 23 Проспект ленина 27 кв 23'\r\n            }\r\n          />\r\n          <Grid item sm={4}>\r\n            <Card className=\"AddCard\">\r\n              <Button onClick={() => openAddCheckoutModal()} color=\"primary\">\r\n                Добавить кассу\r\n              </Button>\r\n            </Card>\r\n          </Grid>\r\n          <DeleteModalCheckout />\r\n        </Grid>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport const Checkout$ = createFipc(CheckoutComponent);\r\n","import { Navigation$, PathList } from './Navigation';\r\nimport { DrawsList } from '../DrawsList/DrawsList.fipc';\r\nimport { Redirect } from 'react-router-dom';\r\nimport React from 'react';\r\nimport { Assignment } from '@material-ui/icons';\r\nimport { useSelector } from 'react-redux';\r\nimport { RootState } from '../../redux/createStore';\r\nimport { FlatScreenDto } from '../../apiWorker/typings';\r\nimport ShoppingBasketIcon from '@material-ui/icons/ShoppingBasket';\r\nimport { Checkout } from '../Checkouts/CheckoutsList.fipc';\r\n\r\nconst useScreenRouts = () => {\r\n  const screens = useSelector<RootState, FlatScreenDto[]>(\r\n    (state) => state.screens.screensList\r\n  );\r\n  return screens.map(({ id, name }) => ({\r\n    path: `/screen/${id}`,\r\n    name,\r\n  }));\r\n};\r\n\r\nconst mainRouts: PathList = [\r\n  {\r\n    name: 'Розыгрыши',\r\n    path: '/draws',\r\n    component: DrawsList,\r\n    icon: <Assignment />,\r\n  },\r\n  {\r\n    name: 'Кассы',\r\n    path: '/checkouts',\r\n    component: Checkout,\r\n    icon: <ShoppingBasketIcon />,\r\n  },\r\n];\r\n\r\nconst useIsLoadingApp = () => {\r\n  const isLoading = useSelector<RootState, boolean>(\r\n    (state) => state.screens.isLoading\r\n  );\r\n  return isLoading;\r\n};\r\n\r\nconst additionalRouts: PathList = [\r\n  {\r\n    name: 'Главная страница',\r\n    path: '/',\r\n    component: () => <Redirect to=\"/draws\" />,\r\n  },\r\n];\r\n\r\nexport const Navigation = Navigation$({\r\n  useMainRouts: () => mainRouts,\r\n  useAdditionalRouts: () => additionalRouts,\r\n  useScreenRouts,\r\n  useIsAuth: () =>\r\n    useSelector<RootState, boolean>((state) => Boolean(state.auth.token)),\r\n  useIsLoadingApp,\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './redux/createStore';\r\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core';\r\nimport { Navigation } from './components/navigation/Navigation.fipc';\r\nimport 'react-notifications/dist/react-notifications.css';\r\nexport const colors = {\r\n  dark: '#001941',\r\n  secondary: '#dc004e',\r\n  red: '#dc004e',\r\n  black: '#000',\r\n  bg: '#f5f5f5',\r\n  white: '#fff',\r\n  textMain: '#3b3b3b',\r\n  textSecond: '#9c9c9c',\r\n  link: '#4987ff',\r\n} as const;\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: colors.dark,\r\n    },\r\n    secondary: {\r\n      main: colors.secondary,\r\n    },\r\n    info: {\r\n      main: colors.link,\r\n    },\r\n    text: {\r\n      primary: colors.textMain,\r\n    },\r\n    background: {\r\n      default: colors.bg,\r\n    },\r\n    contrastThreshold: 3,\r\n    tonalOffset: 0.2,\r\n  },\r\n});\r\n\r\nReactDOM.render(\r\n  <ThemeProvider theme={theme}>\r\n    <Provider store={store}>\r\n      <Navigation />\r\n    </Provider>\r\n  </ThemeProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}